script_name("GameEditor")
script_author("ARMOR")
script_version("1.0")

local ffi = require 'ffi'
local memory = require 'memory'
local inicfg = require 'inicfg'
local imgui = require 'mimgui'
local encoding = require 'encoding'
encoding.default = "CP1251"
u8 = encoding.UTF8
local sw, sh = getScreenResolution()

ffi.cdef
[[
    void *malloc(size_t size);
    void free(void *ptr);
]]

local cfg = inicfg.load({
    config = { 
        HEALTH = 0xFF1712B5,
        MONEY = 0xFF286833,
        ARMOUR = 0xFFE2E2E2,
        OXYGEN = 0xFFF7DAC0,
        WANTED = 0xFF2092C5,
        CHARHP = 0xFF1712B5,
        CHARARM = 0xFFE2E2E2,
        RADAR = 0xFFFFFFFF,
        MARKER = 0xFFFF0000,
        HEADLIGHT = 0xFF404040,
        LOGOARIZONA = 0xFFFF5050,
        HUNGERARIZONA = 0xFF608552,
        CROSSHAIR = 0xFFFFFFFF,
        MONEYBORDER = 2,
        TRIANGLECOLOR = 0x00FFFFFF,
        PRESET = 1,
    },
    colorimgui = {
        HEALTHR = 170,
        HEALTHG = 29,
        HEALTHB = 36,
        MONEYR = 52,
        MONEYG = 101,
        MONEYB = 36,
        ARMOURR = 225,
        ARMOURG = 226,
        ARMOURB = 226,
        OXYGENR = 172,
        OXYGENG = 203,
        OXYGENB = 238,
        WANTEDR = 197,
        WANTEDG = 146,
        WANTEDB = 32,
        CHARHPR = 170,
        CHARHPG = 29,
        CHARHPB = 36,
        CHARARMR = 170,
        CHARARMG = 29,
        CHARARMB = 36,
        RADARR = 0,
        RADARG = 0,
        RADARB = 0,
        MARKERR = 255,
        MARKERG = 0,
        MARKERB = 0,
        HEADLIGHTR = 255,
        HEADLIGHTG = 255,
        HEADLIGHTB = 255,
        LOGOARIZONAR = 188,
        LOGOARIZONAG = 52,
        LOGOARIZONAB = 54,
        HUNGERARIZONAR = 96,
        HUNGERARIZONAG = 133,
        HUNGERARIZONAB = 82,
        CROSSHAIRR = 255,
        CROSSHAIRG = 255,
        CROSSHAIRB = 255,
        CHECKBOXBORDER = false,
        CHECKBOXFIX = false,
        theme_id = 1,
        CUSTOMSTYLER = 255,
        CUSTOMSTYLEG = 255,
        CUSTOMSTYLEB = 255,
        TRIANGLECOLORR = 255,
        TRIANGLECOLORG = 255,
        TRIANGLECOLORB = 0,
    },
    hudpos = {
        HealthX = 161.109,
        HealthY = 77.0,
        HealthW = 150.346,
        HealthH = 9.0,
        ArmorX = 94.0,
        ArmorY = 48.0,
        ArmorW = 62.0,
        ArmorH = 9.0,
        BreathX = 94.0,
        BreathY = 62.0,
        BreathW = 62.0,
        BreathH = 9.0,
        MoneyX = 53.210,
        MoneyY = 89.169,
        MoneyW = 0.633,
        MoneyH = 1.139,
        WeaponIconX = 84.503,
        WeaponIconY = 20.0,
        WeaponAmmoX = 0.17343046,
        WeaponAmmoY = 20.0,
        WeaponAmmoW = 0.3,
        WeaponAmmoH = 0.7,
        WantedX = 29.0,
        WantedY = 114.0,
        WantedW = 0.605,
        WantedH = 1.21,
        RadarX = 31.0,
        RadarY = 135.0,
        RadarW = 125.0,
        RadarH = 100.0,
    }
}, "GameEditor.ini")

local list_file = getWorkingDirectory()..'\\config\\GameEditorPressets.json'
local list = {}

local preset_selected = cfg.config.PRESET

function jsonRead()
    local jsonFilePath = list_file
    local file = io.open(jsonFilePath, "r+")
    local jsonInString = file:read("*a")
    file:close()
    local jsonTable = decodeJson(jsonInString)
    return jsonTable
end

function jsonSave(t)
    local jsonFilePath = list_file
    file = io.open(jsonFilePath, "w")
    file:write(encodeJson(t))
    file:flush()
    file:close()
end

local imgExit = nil
exit_data ="\x89\x50\x4E\x47\x0D\x0A\x1A\x0A\x00\x00\x00\x0D\x49\x48\x44\x52\x00\x00\x02\x9E\x00\x00\x00\x8F\x08\x06\x00\x00\x00\x53\x63\xDB\x84\x00\x00\x00\x09\x70\x48\x59\x73\x00\x00\x0B\x13\x00\x00\x0B\x13\x01\x00\x9A\x9C\x18\x00\x00\x46\x29\x49\x44\x41\x54\x78\x9C\xED\x9D\x7B\xDC\x5D\x45\x79\xEF\x7F\x6B\x07\xF2\xBE\x09\x49\x10\x02\x48\x00\x89\x84\x4B\xB1\x02\xB5\x82\x9E\xD6\x80\x62\x45\xAD\xF5\xD8\x56\x40\xF1\x78\xAC\x9C\xDA\x16\x8A\x02\xD5\xF3\xA9\x77\x45\xA5\xA7\x5E\xD0\x63\x15\x14\x04\x3D\x1E\x2C\x58\x8F\x1F\x95\x62\x15\x2D\x2D\x0A\x94\x80\x8A\xA0\xA2\x78\xA9\x22\x17\x05\x12\x95\x10\x02\x49\x48\x42\xB2\xE7\xFC\xB1\xD6\xCC\x9A\xCB\xF3\xCC\xCC\x5A\x7B\xED\xDB\xFB\x3E\xBF\xCF\x67\x25\x7B\xCF\x9A\x79\x9E\x67\x66\x5D\xF6\xF7\x9D\x59\xB3\xA6\x50\x4A\x41\x24\x12\x89\x44\x22\x91\x48\x24\x1A\xB6\x7A\xE3\x0E\x40\x24\x12\x89\x44\x22\x91\x48\x34\x3F\x24\xE0\x29\x12\x89\x44\x22\x91\x48\x24\x1A\x89\x04\x3C\x45\x22\x91\x48\x24\x12\x89\x44\x23\x91\x80\xA7\x48\x24\x12\x89\x44\x22\x91\x68\x24\x12\xF0\x14\x89\x44\x22\x91\x48\x24\x12\x8D\x44\x02\x9E\x22\x91\x48\x24\x12\x89\x44\xA2\x91\x48\xC0\x53\x24\x12\x89\x44\x22\x91\x48\x34\x12\x09\x78\x8A\x44\x22\x91\x48\x24\x12\x89\x46\x22\x01\x4F\x91\x48\x24\x12\x89\x44\x22\xD1\x68\xA4\x94\xCA\xDA\x1A\xEA\x64\x00\x1F\x02\x70\x0B\x00\x35\xC5\xDB\x0D\x00\xDE\x03\xE0\xC0\x8C\x3A\x1F\x54\xE5\xBD\x61\x02\xE2\x8E\x6D\x1B\x00\xFC\x0B\x80\x37\x00\x58\x9A\xA8\xD3\x81\x13\x5A\xA7\x26\xC7\x45\x6B\x52\x8F\x8F\x5D\x97\x49\x6D\xEF\x49\x38\x7E\xC3\xD0\x7C\x6C\xEF\xB9\x52\xE7\x0D\x98\xCC\xFB\x98\x6E\xEB\xE7\x8C\xC1\xF7\xA4\x9C\x63\x29\x4D\x0B\x1F\x4C\xEA\x39\x36\x29\x75\x36\xCA\xE5\x48\xC3\x93\x1D\x83\xE7\xA1\x00\xAE\x99\x80\xC6\xEB\x7A\xEB\x03\x38\x3D\x52\xEF\xF7\x4D\x40\x8C\x6D\xB6\x3B\x01\x3C\x9F\xA9\xD3\xCB\x50\x9E\x84\xE3\x8E\x31\xB6\x6D\xA8\xE2\x4C\x69\x1A\x8E\xCF\x86\x29\x68\xEF\xAE\xB7\xD4\x75\x35\x4C\x4D\xC3\xF9\x3D\x8C\xF6\x9E\x8B\x75\x9E\xD4\xFB\xD8\xE7\xE6\x68\x7B\xC7\xB6\xD8\x35\x3D\xCD\x7C\x30\xA9\xE7\xD8\xB8\xEA\xEC\x68\x9C\xE0\x79\x28\x80\x1F\x4C\x40\x63\x0D\x73\xA3\x2E\xA8\x69\x80\x9A\xD8\xB6\x19\xE1\xC9\x75\xCC\x04\xC4\xD5\x64\x8B\xC1\xE7\xB4\x1F\x9F\xF9\xB0\x8D\x1A\x3E\xA7\xED\xFC\x96\x2D\xBD\xCD\x85\xFB\xD8\x5C\xDA\xFC\x6B\x7A\x2E\xF0\xC1\x7C\x3C\xC7\xA8\x3A\x07\x1A\x17\x78\xCE\x85\x93\x2A\x67\xEB\x7B\xF5\x9E\x2B\x50\xE3\x9F\x5C\xDF\x9E\x80\x98\x9A\x6E\x14\x7C\xCE\x95\xE3\x33\xD7\x37\xFF\xBA\x1A\xB6\xA6\xF1\xFC\x96\x2D\xBD\xCD\x85\xFB\xD8\x5C\xD9\xEC\x6B\x7A\x2E\xF1\xC1\x7C\x3C\xC7\x92\xF0\x39\x0E\xF0\x9C\x4B\x27\x55\xCE\xB6\xBA\xAA\xF7\x5C\x83\x1A\x7D\x72\xCD\x4E\x40\x2C\x6D\x37\x1B\x3E\xE7\xDA\xF1\x99\xEB\x9B\xBE\xAE\x86\xAD\x69\x3E\xBF\x65\x4B\x6F\x73\xE1\x3E\x36\x57\xB6\xD5\x98\x9B\x7C\x30\x1F\xCF\xB1\x28\x7C\x36\x05\xCF\x5D\x38\x43\x99\x3A\x14\xC0\x15\x00\x8E\xF0\x77\x14\x4F\x78\x3C\xF6\xBD\xE8\xEF\xB0\xF0\x80\x7D\xAB\xB8\xF5\x0E\x27\xDC\xD0\x62\x41\xA4\xD9\x79\x0B\x26\xDD\xD9\x47\xD9\x65\xD2\x59\x9F\x0A\x1B\x3E\x7F\x0D\x1E\x3E\xE7\xE3\xFE\x8E\xE3\x00\xFC\x31\xCA\x87\x6F\x03\x2D\xFF\xF8\x1B\xB1\xE4\x99\x4F\x69\x1E\x47\xAC\xDE\x5C\x9D\x5B\xA4\xF7\xB7\x6C\xC3\xDA\x37\x7E\x1C\x3B\xBE\x7C\x8B\x9F\x69\x31\xCA\x63\x79\xA2\xBF\x63\xE6\x95\xCF\xC2\x8A\xBF\x7B\xA5\x15\xAB\x67\xD7\x56\x01\x14\x99\xF5\x2E\x98\x74\x3F\x7F\xE1\xA5\xFF\xE6\x63\x57\xE3\xE1\x77\xFD\x73\x58\x06\xF8\x4C\xF5\xFF\xEF\x82\x39\x3E\x8F\xFF\xCC\xAB\xB1\xEC\x0F\x9E\x9C\x75\x3E\x04\xCD\x48\x1C\xA3\x68\x1D\xA2\xB6\xCA\x32\x3F\xD9\xE3\x75\x41\x91\xDD\xFE\xF2\xF7\x71\xE0\x07\x5E\xC2\xD8\x2B\xCB\x05\xF6\x98\x38\x8A\xC8\xBE\x2C\x9B\x29\xBB\x29\xDB\x84\xFD\x5F\x5F\xFA\x2D\xAC\x3B\xE3\x4A\x3F\xD7\x71\x47\x6D\x7D\xF7\x8D\x6C\xF1\x1C\x3F\x89\x7C\x05\x80\xEF\x2D\x7C\xDB\x71\x7E\xFA\xB2\x33\x8E\xC6\xAA\xF3\xFF\x34\x6D\x17\x95\x5D\xB6\xA1\x26\x53\xBF\xFA\xE4\xB7\xB1\xF6\xB4\x2F\x39\x69\xCB\x5E\x7D\x34\x56\x9D\xFF\x27\x63\x8A\x68\x70\xED\xDC\xBC\x1D\x77\x9C\xF6\x79\x3C\xFA\xD9\x9F\xF8\xBB\xD8\xFB\xD8\x28\xEA\xBC\xF9\x07\x6B\xF1\xB3\xDF\xBD\x28\x48\x9F\xF6\xF6\x4E\x89\x3A\xC7\x50\xFE\x56\xFE\x77\x10\x7C\xD0\x3B\x6C\x19\x0E\xFB\xF2\xAB\x30\xBB\x6A\xCF\x51\x84\xD7\x4A\x93\x7A\x8E\x0D\x53\x99\x75\xBE\x7A\x50\x3F\x83\xBC\x4E\x29\x02\x9D\xFB\x62\xDF\x0B\xFF\x17\x16\xEE\xBF\xA2\xBA\xFF\x17\xF5\xA6\xF4\x86\xFA\x33\xB9\xDF\xDA\x00\x66\x3F\xDC\xF2\x64\x59\xBD\x0F\xCC\x3E\x22\xDD\x89\x29\xD0\x1E\xE0\xA0\xF3\x92\x37\x61\xC9\x71\xBF\x1B\xD6\x2F\x27\x8E\x58\xBD\xD9\x3A\x31\x6D\x11\x49\xEF\x2D\x9A\xC5\x8A\xF7\x9E\x86\x5D\x5E\x78\x0C\x55\x05\x7D\x72\xB9\x52\x80\x52\x45\xB9\xA1\x30\x9F\xB9\xFA\x99\xBC\x56\x19\xAA\xDE\xA5\x2D\x37\x7F\x1D\x6B\x9D\xDF\xF5\x0D\xEC\x75\xFA\xF3\xB1\xEC\x9C\x17\x53\xF1\x03\x25\x7C\xB2\xD0\xB9\xF4\xD9\x47\xC4\xFD\x82\xF0\xAB\x2A\x94\x26\x8E\x91\x02\x5A\xD9\x52\xE6\xB8\x84\x2A\xF7\x73\xF6\x40\xD8\xD3\xF1\x31\x6D\xEC\xC5\x18\x9E\xFF\x11\x9B\x29\xBB\x96\x6D\xF2\xDA\x62\xEC\xD3\x15\xA7\x6D\xF8\x7E\xC8\x3A\x04\x0D\x18\xDA\xE2\x91\x95\xBA\xEE\x32\xF3\xEA\x6B\x4C\x34\x52\x2D\xD8\x6D\x21\x0E\xB9\xE4\x64\x2C\x3A\xE5\x70\x6A\x37\x7D\x1F\x13\x8D\x5A\x53\x0B\x9D\xC0\xFC\x3C\xC7\x32\xEB\x9C\x35\xE1\x28\xA6\xB6\xE0\x99\x86\xCE\x03\x56\xE8\x14\xE6\x46\x4D\x01\x14\x68\xF0\x8B\x41\xD9\xB0\x61\x34\x54\x06\x74\x12\x36\xFD\xFA\xE5\xC4\xC1\xD5\x3B\x5A\x27\xA6\x2D\xAC\xF4\xDE\xA2\x99\x14\x7C\xFA\x47\x95\xB0\x03\x17\x52\x7C\x20\xF0\xEA\x17\x42\x0D\x5D\xEF\x5C\x18\xDD\xEB\xF4\x3F\xC4\xB2\x73\x82\x3F\x38\x59\xED\xF3\x4F\xAF\xC1\x92\xE3\x8F\x6C\xE7\xB7\x6A\x73\x1A\xF6\xC2\x63\xD1\x04\x46\x49\x79\xD7\x41\x5B\x70\x0C\x6C\xD9\x75\x6D\x69\xB3\x33\x18\x25\xAB\xED\xC1\x61\xE4\xFA\x6C\x0D\xA3\x5C\x73\x5B\x1B\x7F\xBF\xE1\x44\x5D\xAB\x89\x22\xA2\x81\x95\xF1\x23\x29\x1A\xAF\xA6\x16\x3A\xB5\xE6\xE3\x39\x36\x0A\xF8\x6C\x03\x9E\x71\xE8\xFC\xA8\xD5\xD3\x49\x41\x48\x99\x93\xB9\x51\x73\x00\x45\xD8\x60\x7F\x1C\x12\x00\xD6\x04\x46\x33\xB5\xFC\xE2\x37\x63\xC9\xB1\x4F\x6D\xEE\x4F\x79\xFE\xB8\x38\xEC\x78\xB8\x7A\x47\xEB\x14\xB6\x45\x6F\xF1\x2C\x56\xBC\xF7\x74\xEC\xF2\xC2\xA7\xA5\x2B\xA8\x8F\x8D\x5F\x3F\xE5\xDB\x87\x0B\x29\x3E\x10\x78\xF5\xCE\x82\x51\x30\x50\x88\x7C\xF8\xDC\xE7\xD3\x67\x62\xE9\xF1\x47\x9A\x76\xED\xB2\x47\x76\x70\x18\xA5\x44\xF4\x8C\xFA\x71\x79\xF6\x28\x70\x0C\xEB\x69\x1D\xCF\x96\x36\xBB\x81\xD1\xC8\x79\x16\xB3\xCF\xF8\x68\x0D\xA3\x94\x4D\x3B\x5E\x6B\x13\x18\x9D\x4C\x25\x7E\x24\x45\x13\xA4\x69\x83\x4E\xAD\xF9\x78\x8E\x0D\x1B\x3E\x9B\x82\x67\x81\x18\x74\x7E\xE4\xEF\xB1\x70\xFF\xFD\x6A\x50\x09\x40\x12\x34\x18\x69\xD3\xE4\x8D\x3A\x03\xE0\x86\x0A\xA3\x71\x2D\xBF\xF8\x2D\x21\x74\x0E\xE2\x2F\xD6\x4E\x5C\xFD\x1A\xA5\xD7\xB6\x7A\x8B\x66\xB1\xE2\x3D\xA7\x63\x97\x3F\x4A\xC1\x27\x51\x0F\xE5\xC7\xC4\xA7\x0F\x04\xA3\x4C\x7B\x94\x79\x80\xE5\xA7\xFD\x21\x96\xBE\xFD\x24\x36\xF2\xBD\x2F\x3F\xCB\xF4\x74\xD2\xBD\x70\x08\xFD\xAA\xD1\xC1\x68\x54\x3A\x9F\x63\x0F\x7C\x5C\x40\x02\x1C\x0B\xA2\x9E\xDA\x17\x65\x13\x43\x81\x51\xF6\xBA\xA2\xF6\x77\x0C\xA3\x49\x31\xB6\x02\x10\x05\x91\x2F\x69\x9F\xBA\x86\xD3\x21\x89\xE2\x9A\x8F\x60\x30\x6D\x9A\x56\xE8\xD4\x9A\x8F\xE7\x58\x26\x7C\x1E\xDC\xC6\x76\x53\xF0\xBC\x08\x2C\x74\xBE\x1B\x0B\x0F\xD8\x4F\xA7\x30\x37\xD8\xC2\xDD\x18\xA8\x98\x28\x18\x8D\x68\xF9\xC7\xDE\x8A\x25\xAB\x9F\x1A\xFA\x8D\xC5\x9C\xF2\x47\xD5\x25\xD6\x4E\x5C\xFD\x32\xD3\xCB\x61\xF7\x0C\xF8\x64\xE3\xF2\x62\x6B\x0D\xA3\x44\xFD\xFC\xBC\x56\x7E\xDB\xF6\x5E\x0C\x7C\xEE\x75\xF9\x59\x58\xFA\xEC\xBA\xA7\xD3\x01\x39\x03\x6A\x14\x08\x23\xF4\xAB\x62\xD0\x07\xB4\x86\x51\xAA\xA9\x39\x5B\x88\xD9\xA2\xE2\x8A\xC1\x28\x68\x7B\xBA\x9E\xCC\x39\xD4\x09\x8C\x72\xA7\x98\x67\x9B\x02\xC9\x6C\xFB\x4D\x80\x17\x89\x3C\xA9\x9E\xDC\x6A\xE3\xDA\x2C\x2E\xEA\x9E\x90\x28\x22\x0A\x34\x1F\xC1\x60\x5A\x34\xED\xD0\xA9\x35\x1F\xCF\xB1\x0C\xF8\x0C\x67\xD2\x65\xA8\x29\x78\x1E\xEB\x27\x14\x07\xAC\xC0\xBE\x17\xBC\xA7\xEE\xE9\xF4\xC1\xA8\x09\x44\x76\x0A\xA3\x11\x1B\xEC\x8F\x03\x01\x4E\x8C\x96\x5F\x64\x41\xA7\x29\x47\xD8\xEE\x04\x46\x89\x76\x8D\xD5\x91\xFB\xC1\x25\xEB\xAD\x7B\x3E\xFF\x9A\x87\xCF\x64\xCC\x96\x1F\xBF\x1E\xD9\xE9\x21\x5C\x36\x81\xD1\xE5\xA7\xBD\xC0\x81\xCF\xBD\x2E\x3B\x1B\x4B\x8F\x3F\xCA\xD8\xF1\x87\xE9\xFD\xB6\x8B\xC2\x68\xAA\xC7\x90\x68\x8B\x5C\x18\x65\x95\x65\x0B\x8E\xAD\x66\x30\x5A\x10\xF5\xAC\x7D\xF3\x3D\x98\x4C\x5D\xBD\x18\xC3\xB6\x73\xED\xA6\xEA\x1C\xC0\x5D\x57\x30\xCA\x35\x77\x4E\x1D\x82\x02\x91\x78\x6D\x77\xE4\xB5\xC2\x89\xBB\x27\x44\x8A\x88\x00\xCC\x4F\x30\x98\x74\xCD\x15\xE8\xD4\x9A\x8F\xE7\x58\xA2\xCE\x27\xB4\xB1\xD9\xE4\x75\x4A\x7B\x02\x78\xB2\x9D\x50\x1C\xB0\x02\xFB\x7E\xE4\x3D\xD5\x44\x22\x85\xE0\x87\xC0\x7C\xA8\xD2\x9D\xFB\x6D\x95\x1E\xDC\x50\x15\x50\x14\x41\x52\x60\xBF\xB0\x77\x52\x76\x3C\x7F\x29\x1B\xD1\x1F\x03\x57\xCB\x2F\x7A\x5B\x39\xBC\x9E\x63\x5B\x79\xE9\xCE\x3E\xDF\xB2\x55\x77\xAE\x3E\xB1\x76\xE5\xE2\x60\xDB\xA6\xAE\x77\x09\x9F\x67\x60\x2D\x0A\xEC\xF8\xCA\xCD\x61\x7E\x85\x32\xB6\x2E\x63\x4E\xA6\x5B\x1F\x4D\xBA\x42\x41\xD6\x4F\x61\xF9\x5F\xBD\x00\x4A\x15\x98\x3D\x6C\x7F\x2C\x39\xFE\x48\xB6\x3D\xA8\xD7\xD2\x16\x05\x82\x63\x65\x38\xDB\x4A\x37\x7B\xAD\xF6\x73\xCC\x55\xE9\x05\x71\x3E\xA9\x42\x59\x46\xF9\xFE\x37\xE8\x5E\x5D\xCE\x56\x01\x28\xE2\x9C\x2D\x00\xC0\xF2\x41\xC7\x15\x7A\x56\xDE\xB9\xE0\xD6\x33\x61\xAF\x36\x10\xC6\x57\x99\x4D\xD7\xB7\xCA\x5A\xD5\xB9\x20\xCA\x06\xB1\x5A\xFB\x9D\x1C\xC4\xFE\x24\xB3\x99\x3F\xF6\x6C\x77\xAA\x2E\x47\xD5\xC1\xF6\x43\xE4\x23\xE3\x75\x8A\x12\xAD\xC1\xBE\x52\x8D\xBA\xBE\x54\xBA\x41\xE7\xA1\xF4\x8F\xE4\x1D\x20\x5F\x09\x23\x1A\xA1\xE6\x1A\x74\x6A\xCD\xC7\x73\x2C\x52\xE7\x02\xE5\xFB\x5A\xC9\x57\xE1\x71\x6A\xD2\xE3\x79\xB4\x9F\xB0\xF0\xF7\x8E\x8E\x4C\x24\xB2\xE3\xF2\xFF\x8A\x87\x97\xD7\x2E\x43\xF4\x0E\x74\xD2\x33\xDA\xD2\x06\xA1\x25\xAB\x8F\x26\x7A\x24\x1A\xD8\x26\x7B\x46\x33\xEA\x4E\xF6\x9C\x24\xDA\x95\x8B\x83\x88\xA1\xB7\x68\x16\x8B\x9F\x71\x64\x58\xE1\xC0\x8F\x17\x5B\x97\x31\x47\xD3\xCB\xB4\x58\xCF\xE8\x5E\x7F\xF5\x02\x2C\x39\xFE\xA8\x2A\x1F\x82\x1E\x30\xAE\x3D\x82\x9E\x4C\xA6\x9D\x6A\xBF\xA0\x7B\xC6\xA2\x3D\x90\x45\x60\x8B\x94\xB2\xFE\xA7\x6C\x91\xE7\x4F\xD8\x93\x39\xD4\x9E\xD1\x86\xF6\x4C\x7C\x56\xF5\xB8\xBA\x87\xBD\xCA\x85\xB3\x9F\x8D\x15\x08\x7B\x46\x9D\xEB\x39\x43\xC6\x10\x6D\xC3\xF7\xD3\xAE\x67\x14\xC1\x56\xE6\xA5\xAE\x15\x4E\xDC\x75\x27\x5A\xB0\xDB\x42\x3C\xEE\x39\x87\x8E\x3B\x8C\x79\xAF\x25\x27\x1C\x3A\xE7\xA0\x53\x6B\x3E\x9E\x63\x91\x3A\x07\xEF\x46\x4E\x69\xD0\x17\xC8\x83\xBE\xD9\x72\xBD\x7C\xCA\xFE\x52\xE5\xB5\x3F\x14\x84\x49\xAE\x47\xD3\xEA\x69\x73\x6C\x71\xBD\x9A\x68\x6E\x83\x05\x03\xAA\x6E\xBE\xFD\xCA\x46\xE0\x9F\x89\x8F\xEC\x2D\xCC\xA8\x7B\xD3\x5E\xC6\x68\x19\xE2\xB8\x19\x33\x44\xBA\xE3\xC7\x8B\x2D\x2B\x66\xAF\x8D\xB8\x98\xA3\x75\x2C\xF3\x2A\x2F\xBD\xA0\xDA\x59\xA1\xEA\xC7\x72\xD3\x0B\xE6\xB8\x28\xA2\x3D\x5A\xF5\x8C\x2A\x2F\x46\x93\x81\x27\x05\x1B\x4A\x6B\x5B\x91\xDE\x47\xE5\xF5\x04\xEB\x3A\x40\x05\xC7\xAE\x48\xD9\x02\xD7\x33\xAA\x7B\x12\xBD\xD8\x74\x5D\x72\xED\x31\xD7\x95\x52\x85\xDB\x6E\x56\xCF\x65\xF0\x7A\xFB\xC2\xF2\xE4\xC7\x6A\x4E\x3F\x05\xFB\xC4\x88\x61\x5C\xF0\x47\x40\x60\x3F\xF4\x61\x79\x09\xE2\x20\xEB\x61\xF2\x85\x91\x28\x6E\x71\x02\xF2\xBA\xE3\xCE\x1B\xE6\xBA\x13\x89\x44\xA2\x09\xD2\x60\xE0\xA9\xFF\x9A\x07\xAC\x3B\x2D\x03\x2F\xFE\x8F\xB8\x93\x1F\xEE\x3E\x0E\x4C\xE0\xA5\xFB\xF7\xD4\x82\xF0\xCD\xC2\x5E\x03\xA0\x0D\xB2\x14\x6E\xFC\x1C\x94\x19\xFF\x5E\xDC\x93\x0C\xA3\xDC\xEF\x94\x22\xDA\x6F\x60\x18\xA5\xF2\x77\x03\xA3\xCA\x6F\xCF\x56\x30\x1A\xDA\xEF\x1A\x46\x69\xB9\x7F\xF4\x94\xB6\xDC\xF6\x4E\xC3\xA8\xAA\xEA\x9C\x86\xD1\x2C\xB0\x45\xDE\xE3\x03\xE6\x53\x0C\x46\x39\xA9\xA2\x0A\xCB\xB5\xD9\x18\x46\x19\x50\xE4\x63\x28\x10\x9C\x54\x4D\x61\xD7\x8B\x6F\xB2\x61\x54\x24\x12\x89\xC6\xA7\x01\x7B\x3C\xF5\x0D\x1B\xA8\x1F\x9C\xE3\xE0\x32\x17\x08\xCD\x4E\xCB\x36\x91\x4E\xC1\x28\x7B\x43\xF6\x7D\x13\x69\x14\x8C\xB2\x43\x5D\x45\x3A\x7E\xAE\x57\xD4\xAE\x86\xF9\x92\x80\x51\xB6\xAC\xB6\xDD\x02\x46\x39\xB0\xA3\xEA\xEC\xFF\x81\x11\x6B\xBF\x71\xC0\x68\x14\xD4\x61\xDA\x73\x12\x61\x94\x92\xF3\xEA\x1F\x06\xFA\x14\xD1\xDE\x2E\x40\x16\xB5\x4F\x27\x3D\x84\xD1\xB4\xAD\x32\xA5\x5B\x18\x0D\xA5\x80\xC4\x33\xA8\xF5\xBE\xF6\x30\x4A\xFB\x55\x39\x80\xE8\xDB\x37\x87\x68\xDA\x60\x14\xEE\x35\xAD\x13\xF8\x53\x52\x24\x12\x89\x3A\x53\x07\x43\xED\x5A\x14\xB0\x74\x0D\xA3\x85\x97\xD7\xFE\xE0\xC3\xA8\xFE\x31\xF0\xE3\xB2\x60\x2C\x88\x35\xF3\xCE\xAB\x34\xB5\x24\xE2\x77\xEE\xEB\x1C\xAC\xB9\xE1\xD6\x5F\x22\xA0\x15\x2D\xAB\x6D\x27\x60\x94\x83\x34\x52\xF6\x1F\x18\xCC\xEE\x26\x30\xDA\x36\x36\xAE\x8D\xB2\xDA\x8E\xB2\xD5\x05\x8C\xD2\xF5\xCE\x85\x51\x5A\xD5\x1F\x00\x56\x7E\x1F\xFA\x28\xBF\xD3\x02\xA3\xEC\xAA\xF0\xAA\xCD\x84\xA8\x7A\x5F\x36\x8C\x06\x7E\x01\xFB\x0F\xAB\xE8\xC4\x28\xCF\x76\x15\xA1\x17\x73\x7B\x18\x8D\x82\x28\x00\xEA\x0F\x5A\x45\xE4\x73\x61\x34\xE7\xBE\xC6\x5D\x8F\x19\x45\x45\x22\x91\xA8\x81\x3A\x04\x4F\x4A\xE3\x84\x51\x02\xD0\x4C\xAF\x5E\x10\x54\x00\x91\xDB\xEF\x5D\x8B\x47\x2E\xFD\x7C\x18\xBF\x1D\x44\xCA\x4E\x12\x18\x29\x68\xB1\xD2\xBA\x84\xD1\xC2\xCA\x1B\xEC\xB3\xD3\x79\x28\x60\xFD\x35\x85\xD1\x2E\x41\xB9\x0B\x18\x75\xD2\x9B\xC2\x68\x68\x2B\x17\x46\xD9\xDF\x74\x0D\x4B\x91\x61\x7A\xB2\x67\x6F\x5C\x30\xEA\x41\x60\x12\x46\x53\xCF\x78\x66\xD9\x73\x6A\xE2\xC5\x57\xEF\x4B\x82\x1C\xB4\x8F\x02\x85\x57\xD6\xF6\x39\x2A\x18\xF5\x41\x34\x59\x87\x54\xBC\x61\x09\x2B\x53\x91\x6C\x17\x81\x51\x91\x48\xD4\xB5\x86\x0C\x9E\x94\x26\x1F\x46\xB7\xDF\xBB\x16\xEB\xCE\x7C\x1B\xD4\x2F\xD7\xD1\x55\x08\x9E\x77\xA4\xED\x98\xF4\x46\x30\x4A\xF8\xEB\x02\x46\x39\x70\xF3\x40\x82\x86\x82\xEA\x47\xAA\x0B\x7F\x93\x08\xA3\xC9\x7A\x0C\x07\x46\xF9\x49\xCB\xE1\x1F\x01\xE6\x6B\x65\xA7\xF0\xB2\x77\x02\xA3\x5E\x7A\x36\x8C\x52\x40\x1D\x81\x47\x0E\x73\xCA\x7C\x21\xFC\x75\x0D\xA3\xA4\x34\xEC\x3B\x36\x31\x37\x60\x94\xEA\x81\xAE\x36\xAA\xCD\xA2\x43\xF4\x02\xA3\x22\x91\x68\x40\x8D\x01\x3C\x29\x35\x81\x51\x22\xDD\x24\x0F\x0E\xA3\x25\x74\xBE\x95\x87\x4E\xDF\x77\x8E\xDF\x89\x85\x51\x02\x02\x29\x29\x58\xBD\x23\x1D\xFA\x8B\xC5\xD1\x09\x8C\x36\x81\x4E\xCE\x77\x06\x8C\x5A\xE9\x05\x53\x6F\x1E\x0A\x43\x29\x20\x9C\xD5\xEE\x01\x9E\xB2\x77\x76\x05\xA3\x51\x80\x6C\x02\xA3\x39\xF0\x48\xD4\x9B\xB0\x65\x00\xAF\x43\x18\xA5\xFC\xBA\x93\x24\xEB\x18\x43\x58\x54\x26\x4B\x0E\x8C\x06\xC7\x24\x09\xA3\x56\x4A\x97\x30\xEA\xCB\xB4\x59\x98\x8F\x7A\x54\x42\x60\x54\x24\x12\x75\xA5\x09\x01\x4F\x4A\x1C\x8C\xD2\x37\x62\xB2\x4C\x43\x18\x2D\xA1\xF3\x2D\x50\xF7\xC6\xA0\x13\x5E\x0F\x82\x07\x91\xB9\x7E\x27\x02\x46\xED\xB2\x44\x9A\xBF\xB3\xED\xEC\xFD\x28\xDC\x0D\x11\x46\x53\xB1\x75\x05\xA3\x56\xBA\x22\xD2\x43\xF8\x00\x0D\x85\xB6\x79\x7B\x56\x7B\x0C\x0A\x27\x10\x46\xD3\x13\x8E\xB8\x7A\x37\x9D\x99\x6F\x82\x21\x62\x2B\xBF\x84\x30\x4A\x49\x3F\x77\xEA\xDA\x0C\x40\x2E\x06\xB8\x55\x16\xB2\x0D\x1B\xC1\x68\xC4\x3E\xE3\x23\x09\xA3\x1C\x33\xA6\xE0\xD9\x4E\x16\x18\x15\x89\x44\x1D\x69\x82\xC1\x93\xD2\xF0\x60\x34\x1B\x3A\x1D\x9B\x99\x10\x19\xF1\xDB\xC8\x4E\x14\x46\x6B\x10\x70\x43\x6D\x08\xA3\x8D\xDE\x5D\xCA\xF9\xF4\xE3\x8D\xF8\xF3\xCB\x75\x09\xA3\x6D\x62\x1B\x07\x8C\x12\x52\x56\x0F\x73\x63\x28\x1C\x33\x8C\x92\xE0\xD4\xEA\x19\x4F\x1A\x6C\x73\x61\x94\x06\x47\x46\x31\x68\x9C\x0B\x30\x1A\x48\xFF\x01\xE0\xE5\x10\x18\x15\x89\x44\x43\xD6\x94\x81\x27\xA5\xC1\x61\xB4\x84\xCE\x37\x43\xDD\xBB\x36\xCF\xA5\xFD\xBC\x63\x60\x6E\x5C\x30\x6A\x69\x10\x18\xCD\x79\x9D\x12\x10\x6F\xE3\xD8\x9B\x04\x46\x02\xA3\x91\x7A\x4F\x1A\x8C\x92\xAA\xA0\x40\x11\x79\x39\x18\x35\xD9\x3D\x28\x24\xDA\x69\xA4\x30\x4A\xCC\xCA\x67\xD1\x44\x15\x19\xC3\xF4\xF9\x30\xDA\xE8\xF9\x4E\xE7\xB9\xED\x0C\x68\x9C\x2A\x18\xE5\x40\x3F\x52\x07\x27\x23\x61\x43\x60\x54\x24\x12\xB5\xD4\x1C\x00\x4F\x4A\x19\x30\x5A\x7D\xDC\x7E\xDF\xFD\x58\x77\xE6\x9B\x38\xE8\xBC\x1D\xC0\x11\x49\x1F\x1C\x68\xC0\x4B\x9F\x16\x18\x25\x0B\x53\xE0\xE8\xD9\xEE\x64\x5D\xFA\x2E\x60\x94\x2A\x33\x6A\x18\xE5\xA1\x93\x3E\x47\x5C\x69\x10\x0A\x81\xB0\xB4\x91\x3B\xD9\x49\x11\xED\xD4\x0E\x46\x55\xC5\x54\x5D\xC0\x28\x53\x67\xD0\xE0\xD2\x16\x46\x73\x9E\xEF\x34\xD6\xEC\x19\xDE\x7E\xAF\xAD\xB6\x67\x9C\xF8\x75\x75\x81\xD0\xC9\x31\x01\x30\x4A\x4A\xC1\xA9\xB3\x73\x7A\x76\x08\xA3\x45\x5D\x11\x2F\xAF\xC0\xA8\x48\x34\x5F\x35\x47\xC1\x93\x52\x08\x78\xDB\xEF\xBB\x1F\xEB\xCE\x8A\x42\xE7\x89\x00\x7E\x1A\xEC\x89\xCD\x6A\xB7\xBF\xFA\xE9\x53\x01\xA3\xCC\xDD\xDD\x7F\xAE\x35\x80\x43\x0E\x02\xE7\x0A\x8C\x66\xC4\x16\x8D\xCB\x8B\x2D\x02\x60\x50\x85\x26\x37\x84\xC3\xF4\xDE\xD2\x98\xC3\x86\x51\x0F\xEE\xF2\x60\x34\xB2\xE4\x66\x0C\x06\x73\x86\xE9\x23\xB6\x7C\x18\xCD\x85\x30\x05\xD4\xA7\x4E\x00\x5D\x1A\xEC\x62\x30\xCA\xC4\xC7\xDA\xD4\x31\x96\x5F\x86\x0E\xA3\xFC\xEB\x13\x58\x80\xEC\x0A\x46\x15\x91\xAF\x1B\x18\x55\x96\x31\x91\x48\x34\x4D\x9A\x0A\xF0\xBC\xE7\xE9\x27\x8C\xDA\xE5\xED\x00\x3E\x0D\xE0\x89\xF4\x6E\x1B\xE8\x54\x98\xD6\x01\x8C\xDE\x73\xF4\x1F\x05\x5E\x97\xBD\xFD\x2C\xEC\xF1\xE2\x3F\xB4\x6C\x75\x01\xA3\x3E\x18\x12\x77\x72\xDD\x3B\x02\x80\x1F\xA6\xF7\x8A\x8E\x05\x46\x89\x76\x6D\x02\xA3\x1E\x64\x05\xFB\x9A\xC4\x96\xBD\x7C\x29\x23\xFB\x47\xDC\xCB\x6F\x3E\x76\x0C\xA3\x8F\x5C\xF7\x7D\x3C\xF0\x8A\x0B\x12\x81\x0D\x4D\x37\x38\xBD\xBC\x05\x40\x0D\xD3\xB7\x83\xD1\x14\xF0\x22\x38\xE6\xC9\xF7\x9F\x56\x99\x78\x68\x4C\xC3\xE8\xC6\x6B\x7E\x8C\xFB\x4E\xFC\x3F\x74\x4C\x23\x50\xB0\x3A\x96\xD9\x61\x12\x6B\xB5\x80\xD1\x2D\x3F\x58\x8B\x9F\x1D\xF3\x91\xC0\xEF\xBE\x17\xFF\x09\x1E\xFF\xE7\x4F\x23\xCC\x37\x81\x51\xEE\x9E\x10\x86\x3E\x09\x7A\xF8\xC2\x5B\xF1\xBD\x0B\x6F\x6D\x5D\xFE\x29\x3B\xCE\xED\x30\x1A\x5A\x77\x9E\xFD\x45\x3C\x3C\x40\x8C\xE3\xD2\xF7\x76\x39\x27\x48\x5B\x71\xC9\x8B\xF0\xF8\x57\x3D\x8D\xC8\x3D\x37\x34\xED\x75\x9E\x0A\xF0\x1C\x83\x8E\x00\xF0\x1E\x7E\xB7\x4D\x2E\x14\xA8\x75\x09\xA3\xB6\xDD\xC2\xBA\x39\x7B\x10\x69\x6C\x35\x85\x51\xCF\x1F\x79\x9F\x2F\x60\xA8\x25\x36\x4C\x9F\x65\x7B\x98\x30\x6A\x95\x8B\xB5\x2B\x17\x07\x1B\x7F\x0B\x18\x6D\x1A\xB3\x97\xD5\x79\xA6\x96\xAB\x4B\x47\x30\x5A\x68\xE8\xFC\xB3\xB1\x41\xA7\x3A\x64\xDD\x85\x37\x9A\x8E\x3A\x0F\x14\x1D\xE0\x8B\xF5\x12\x72\xAB\xFA\xC4\x7A\xFC\xAA\x8C\xE1\x12\xA5\x8E\xE7\x2A\xAE\x72\x5F\xAB\xD5\x9C\x6A\x03\x00\x50\x42\xE7\x49\xE3\x83\xCE\xF0\x1E\xD4\x70\x02\x93\xB5\x83\x85\x51\x76\xA2\x62\xB8\xAF\x9B\x9E\x51\xEB\xFA\x4A\x5D\x63\x22\x91\x68\x6C\x12\xF0\x6C\x23\x7F\x72\x11\x00\xF7\x0E\xDD\x04\x46\x89\xF4\xE8\x4D\xD3\xF2\x9D\xEA\xD1\x34\xB6\x1A\xC0\x28\xE7\x3B\xF2\xC3\x93\x0F\xA3\x5E\x2F\x65\x2A\xBE\xD8\xCA\x4E\x23\x83\x51\x0E\x88\x3B\x82\x51\x52\xD5\x1F\x18\x59\xD0\x49\xA5\x7B\x3D\x85\x09\x18\x7D\xE4\xBA\xEF\xE3\x81\x57\x9E\xCF\xC4\x32\x12\x9D\x51\xCF\xE2\x27\xD6\xA5\x07\xE0\x3F\xFE\x90\x05\x7C\xCA\xAB\x2F\x23\xF3\x1E\xCF\x24\xD8\x3A\x9E\xCB\xB2\x2D\x60\x74\xE3\xD7\x7E\x8C\xFB\x4F\xFA\x44\x32\xAE\x61\x4A\x01\xF5\x5B\x04\x00\xEF\x9E\x00\xB6\x1D\xDC\x17\xDE\x3B\x05\x03\x18\x6D\xC4\x7E\x64\xDB\x86\x16\x9A\xC3\xA8\xE7\x43\xDF\xBB\xD3\xA7\x85\x48\x24\x1A\x92\x04\x3C\x5B\xCB\x07\x3C\x0E\x2C\x81\x38\x8C\x32\x50\xC3\xF9\xB4\x6F\xD0\x4E\xD1\xAE\x60\x94\x8A\x93\x48\x4F\x01\x6D\xDB\xD7\x2C\xA5\x6C\x93\x50\x39\x4C\x18\xA5\xCA\x74\x08\xA3\xAC\x8A\x30\xB6\x20\x2E\x0E\x46\x29\xDF\x34\x8C\x6E\xBE\xFE\xFB\x78\xE0\x95\x1F\x8E\xC4\x31\x54\x29\x00\x67\x1C\x7C\xFF\xC7\x2E\x2E\xBF\x79\x31\x02\xDD\xC3\x68\x24\x10\xFF\xD8\x15\x49\x5B\x91\x67\x59\x3D\x7B\x45\xF5\xCF\xC6\xAF\xFD\x08\xF7\x9F\xF4\x71\x3E\x90\x51\xC9\xA9\x93\x82\x7D\x62\xB8\xB7\x02\xE5\x94\x21\x27\x97\x71\x30\x1A\xE9\xF1\x0C\x26\xCF\x51\xF7\xBD\xD8\xE3\x0A\x6E\x08\x44\xDE\xDC\x6B\xCB\x0A\x4A\x60\x54\x24\x1A\x89\x04\x3C\x3B\x13\x07\x96\xDE\xBE\x36\x30\xCA\xF9\xE1\xC0\x04\x5E\xBA\x7F\x93\xA5\x66\xB0\x1B\x38\x61\x7C\xC6\x26\xDB\x04\x36\x04\x46\xEB\x32\x4D\x60\x54\xFB\x20\xDA\x3B\xC8\x3F\x38\x8C\x6E\xBA\xFE\x36\xAC\x3F\xF5\x43\x4C\x10\x43\xD5\x9A\x6A\xBB\x68\xD5\x7D\x17\xFF\xA2\x3C\xB4\x75\xDC\x0E\x8C\x74\x0E\xA3\x8C\x32\x86\xE9\xF3\xC0\x96\x7F\xFE\xF4\xE1\x6B\x7E\x84\xFB\x4F\x1E\x0B\x74\xAE\x01\x70\x6C\x90\xCA\xF4\x5A\xBA\x30\x9A\x00\xC4\x14\x8C\x92\xAA\xF3\x3B\xA7\x6D\xCA\x17\x90\x0D\xA3\x29\xBF\xE4\xBE\xE1\xC1\xE8\xD7\x00\xCC\x80\x3A\x06\x73\x47\xF4\x39\x26\x12\x11\x9A\x5A\xF0\x9C\x39\xE9\x45\x98\xF9\xAD\x43\x86\xEA\x63\xDB\x7F\xDE\x81\x6D\x5F\xF8\xD2\x00\x16\x3A\x82\x51\xB3\xBB\x02\x12\x27\xBF\x65\x40\x11\xE9\x14\x8C\x46\x5F\xA7\xC4\xF5\x52\xD8\x00\xD6\x55\xEF\x2A\x11\x8B\x07\x9B\xDB\xEF\x5D\x87\x85\x07\xEC\x5B\xDB\x88\xC1\x68\xB0\xCF\x53\x03\x18\xED\x3F\xBA\x15\xBD\x45\x33\x69\xB0\x63\x7D\xA1\x39\x8C\x3A\x21\x59\xC6\xDB\xAC\x4B\x4F\xC5\x6C\xA5\xF7\xB7\x6C\xC3\x63\x6B\x37\x60\xD9\x7B\x4F\x8D\xC7\x61\xAA\xCA\x52\x72\x90\xDF\xAE\xD9\x43\x6F\xB8\xCC\x2F\xB0\xE6\xA0\x7B\x2F\x39\xCE\x35\xE1\xB6\x93\x61\x90\x2E\x60\x34\xAB\xBD\xBD\x99\xDF\xC9\xF7\x82\x36\x87\x51\xB5\xF9\x31\x6C\xBF\x6F\x23\xF6\xFA\xF0\x4B\x5D\x3F\x41\x24\xC6\x1B\x17\x6A\xAC\x1A\xF8\xCD\x99\x9F\xF7\x53\xD7\x00\x38\x17\xC0\xBF\xF9\x99\xDD\x3A\x57\x91\xB3\x30\x6A\xF7\x6A\xE6\xC1\x68\x14\x07\xC9\xEB\xDE\x20\x6F\xBE\x2F\xCA\x56\x98\x23\x9A\x37\xFA\xCC\x68\x47\x30\xFA\x94\x1D\xE7\x1E\x97\xCE\x55\xEA\x7B\xBB\x9C\x93\x4B\xD2\xA3\xD0\xF3\x9E\xB2\xE3\xDC\x7F\x4F\x65\xFA\xDE\x2E\xE7\x3C\x17\xC1\x39\x26\x12\xD1\x9A\x5E\xF0\xFC\xAD\x43\xB0\xC7\x9F\xBE\x70\xA8\x3E\x36\x5C\x79\x15\xB6\x75\x6E\x35\x13\x46\x63\xE5\x53\x30\xC7\xF6\x8A\x56\x19\x1D\x37\xFA\x07\xA5\x70\xFF\x0F\x62\xD6\xFB\x23\x30\xD5\x16\x46\x1D\x60\xAC\xD3\xD7\x7F\xEA\x9F\xD1\x5B\xBA\x1B\x16\x1E\xB0\x82\xA8\x8F\x65\x23\x07\x0E\x83\xB2\x3A\xF6\x30\xEE\xFE\xA3\x5B\xB1\xF6\x6D\x17\x62\xFF\x0F\xFE\x4F\x1E\xF8\x52\xFE\x9A\xC0\xA8\x2F\xF3\x07\x46\xA2\x4D\x9B\xC2\xA8\x95\xDE\x5B\x34\x83\x3D\x5E\xFA\x6C\xFA\x0F\x13\xDB\x16\x55\x19\x0E\x46\x89\xFC\x04\x78\x1E\x6B\xFF\x11\xA3\x88\xF6\x28\x88\x76\x6A\x0B\xA3\xD4\x3B\x46\x03\x29\x58\x7F\x58\xD5\x60\xE9\xDA\x1A\x0C\x46\x8B\x45\x33\x58\xFE\x8A\xD5\x56\x06\x66\x09\x01\x0E\x46\x29\xE0\x72\x32\x94\xF6\x08\xF0\xA4\x7B\xA1\xEA\x06\x35\xDF\xD9\x9E\x4B\x0B\x00\xED\x7D\x69\x18\xA5\xA5\x54\x61\x7C\x15\x84\x0D\xDB\x07\x07\xA3\x51\x10\x05\x58\x18\xF5\x73\x16\x54\xDE\x58\x5B\x77\x08\xA3\x22\xD1\x7C\x55\x6F\xDC\x01\x88\x80\x1A\xEC\xEC\x2D\x96\x8F\x28\xA3\x8A\xFA\x07\xD4\x0C\xD5\x32\xF9\x15\x91\x3F\xEA\x17\x75\x7E\x2A\x56\xDF\xAF\xF2\xFC\xFA\xFB\x7C\x3B\x44\x3C\xEB\x3F\x75\x25\x36\x7D\xF0\x53\x11\xFB\x20\xCA\x5B\x79\xB3\xEA\x1A\xC6\xD6\x7F\x74\x1B\xD6\xBE\xED\xA3\xD8\xF1\xAF\xDF\xE4\x7D\xB6\xF5\x17\xB4\x43\xEC\xD7\x2A\x96\x3F\xD2\xA6\x64\x99\x48\xCC\x59\x75\xA1\xEA\x51\x01\x84\xDE\x50\xF5\xA0\x05\xE7\x20\x71\x2A\x69\xF0\x60\xCE\x1B\xE5\xD9\xAE\x63\x75\xF3\xD7\x7E\xE1\xE6\xB5\xF2\x3B\x31\xB2\xED\x5D\x98\x1E\xBA\xC0\xAF\xFD\x07\x99\x67\xAB\xCC\x1F\xD6\x81\xB5\x65\xFE\x78\x03\x61\xAB\x42\x30\xE2\xF8\x69\x3F\x39\xF6\x72\xE5\xDB\x0C\xAF\x5B\x90\xED\xA7\x3C\x9F\xC1\xB1\xF3\x6C\xC7\x03\x20\xCE\x21\xCF\x3F\x77\x5F\xF1\xFD\xB0\x75\x08\x7C\x32\xF1\x5A\x5B\xFC\x7E\x46\x29\xF7\x9A\x16\x89\x86\xA7\x05\xCB\x66\xC6\x1D\x42\xB6\xA6\xB6\xC7\x73\xBE\x69\xC9\xD9\xA7\x61\xF7\xE7\xFD\x41\x0D\x18\x5A\xE6\x23\xD1\xB3\xD3\xAA\x67\x94\x92\x0D\x3C\xFE\x3E\xA2\x47\x13\x00\xB7\x52\x94\xF1\x1B\xB1\xB3\xFE\x1F\xAF\xC0\xA6\x0F\x5E\x5A\x67\xD7\x37\xF3\xC2\xCD\x1E\x86\x69\xF9\x6C\xD1\x33\x5A\xF6\x74\x7E\x14\x3B\xAE\xFE\x66\xB5\xDB\xF6\xAB\xE8\x1F\x95\xC0\x66\xBE\xBF\xA8\xB8\x1E\xA0\x58\xBD\x87\xD0\x33\x4A\xA7\x13\xF5\xA8\xCE\x35\x6A\x79\x4F\xD2\xB9\x22\xC2\x2A\x30\xD0\xBA\xF4\x26\x0C\x2B\xDD\xB1\x14\xE1\x11\xAA\xBD\x15\x71\xDC\x8D\x5F\x2B\x3D\xBB\x67\x34\xBA\xC6\x7D\xF9\x25\xB0\x05\x44\x5E\x13\xE5\xC6\xDC\x0C\x79\x5C\x48\x52\x5E\x1C\x8E\x3D\xBD\xCF\x64\x09\x8F\x31\xD9\x33\xCA\x41\x58\x70\x4D\xDB\xBD\x9E\x11\xFB\x26\x0F\x71\x5D\xC0\x7B\xAD\x53\xF4\x7E\x66\xE5\x23\x6C\xD1\x4B\x81\x52\x79\x73\x9C\x68\x5F\xD5\x05\x24\x5C\x2A\x1A\x82\xF6\x79\xFF\x73\xB1\xD7\xC9\x47\x0D\xD5\xC7\xD6\x3B\x1F\xC4\xAF\x3E\x70\x3D\xB5\xEB\x86\xA6\xB6\x04\x3C\xA7\x40\x4B\xCE\x3E\x0D\xCB\x5F\xF1\x52\x7A\x67\x93\xD7\x34\x99\xE4\x4C\x18\xB5\x93\x29\xF8\xCB\x80\xC8\x46\x7E\x55\x05\x9D\xFF\x70\xA9\x67\xCF\x87\x49\x06\xE0\x06\x80\xD1\xFE\x96\xAD\x58\xFB\xF6\x8F\x60\xC7\xD5\xDF\x20\xFC\x12\xED\xD2\x19\x8C\x12\xB2\xDB\xDB\xB1\xC7\xC4\x31\x30\x8C\x36\x81\x4E\xCE\x37\x07\xA3\xA1\xCA\xD7\xF8\x50\xF9\xBB\x5D\x1F\xDE\x09\xC1\xA4\x53\x01\x21\xEC\x9D\x6B\xE3\xB7\x31\x8C\x32\xF0\xD8\xC2\x16\x07\x4C\xAC\x74\x9D\x2B\x5F\xF1\x57\x45\xD5\xFB\x02\x18\x65\x61\x31\x16\x4B\xE1\x9E\x36\xE4\x1F\x08\x29\x18\x4D\xBC\xF0\x9E\x24\xBC\x82\x78\x85\x94\x17\x67\x23\x18\x6D\x4A\x91\xDC\xF5\xD8\xD0\x8C\x48\x64\x69\x9F\xF7\x3F\x17\xFB\xBD\x2E\xFB\x11\xE2\x56\xDA\x7A\xE7\x83\xF8\xE9\x7F\xFD\x24\xFA\x3F\x7D\xD8\xDF\xA5\x00\xDC\xD8\xD4\x9E\x80\xE7\x84\x2B\x0A\x9D\x00\x68\x50\x8C\x80\x12\x55\xC6\x86\xC2\xC8\x70\x64\x9D\xD7\xCA\x1F\x98\x6B\x0F\xA3\xEB\xFF\xF1\x0A\x6C\xFA\xD0\xFF\xF5\xF2\xF8\x31\x79\x76\x3A\x80\xD1\xFE\xA3\x5B\xB1\xF6\x9C\x0B\x3C\xE8\x44\x02\x2A\xBB\x82\x51\x4A\x56\x9D\x0D\xDC\x31\xD0\xDE\x05\x8C\xA6\x40\x79\x20\x18\x25\x64\xF7\x9A\x59\xF9\x43\xF8\xC0\x50\x60\x94\x0C\xDA\x07\xFD\xAE\xFC\x46\x00\xB2\xCB\x75\xE9\x49\x18\x8D\xCA\xBE\x9E\xDB\xBC\xB7\xB4\xDE\x47\xC3\x68\x6A\xA9\x4E\xC6\xAE\x15\x53\x1C\x46\x13\x2F\xBC\x8F\xC8\x87\x5E\xB2\x0E\x41\x81\x4C\xD0\xEF\x04\x46\x45\xA2\x3C\x8D\x19\x3A\x01\xE0\x92\x36\x36\x05\x3C\x27\x58\x69\xE8\xE4\xD4\x01\x8C\xFA\x19\x4D\xEF\x88\x2E\xD3\x00\xFE\x32\x61\x74\xD3\x87\x3E\xC9\xFB\x6F\x60\x27\x1E\x4F\x08\x86\x1B\xBF\x72\x43\x08\x9D\x00\xCC\xF0\x18\x0A\x37\x04\x36\xBC\x96\x30\x4A\xCA\x07\x7D\x6F\x57\x97\x30\xDA\xA6\xD7\xB6\x09\x8C\xFA\x0A\xA0\xBA\xB4\xD1\x1A\x46\x75\xB1\x4C\x28\x0C\xE3\x81\xBB\x72\x11\x37\x4C\xDF\x31\x8C\xD2\xB0\xD7\x11\x8C\x26\xA4\x50\xD7\x99\x05\x47\x2F\x3E\x6E\xA2\x11\x0B\xA3\x0C\x84\x99\x67\x32\x6D\x58\x8C\xD9\xB5\xF6\xE7\xC2\x28\x09\xBD\x8A\x88\xA9\xB2\xD1\x15\x8C\xB2\x0A\xFC\x36\xA4\xCD\xC4\x29\x2C\x9A\x7F\x9A\x00\xE8\xBC\x1D\xC0\x19\x6D\xEC\x0A\x78\x4E\xA8\xDA\x43\x27\xA7\x4C\x18\x8D\xF6\x0A\x01\x2C\xEC\x74\x06\xA3\x94\x5F\x0B\x00\x39\xBF\xD9\x30\xEA\x9A\x4E\x8B\x02\xC0\x21\xC2\xA8\xCE\xE0\xF7\xF2\xE6\xF8\x6B\x0C\xA3\x1C\x74\x76\x08\xA3\x94\x94\x9F\xDF\x3B\x47\x9A\xC2\xA8\xF2\xF2\x5A\x99\x72\x66\xB5\x97\xE5\xF4\x71\xAE\xF3\x9B\x30\x46\x01\xA3\x5D\xAD\x4B\x9F\x2B\x0B\xC2\x72\x7B\x31\xC3\x7A\xC6\xA1\x31\x79\x69\xA7\x7A\x2E\x07\x85\x51\xD2\x65\x01\xA7\x26\x2C\x40\xB6\x84\x51\x0E\xB6\xBD\xEF\xE4\x30\x7D\x14\x46\xB9\x7B\x5C\xA4\x88\x68\xCE\x6A\x42\xA0\xF3\x44\x34\xFB\x7B\xD7\x48\xC0\x73\x42\xD5\x2D\x74\x72\x62\x7A\x05\x9A\x94\xE9\x14\x46\x09\xE9\x5F\xB0\x4E\xD6\xA5\x67\x60\x94\x9D\x04\xC1\xFD\x38\x0C\x01\x46\x7D\x53\xCA\x32\x44\xBE\xF0\xBE\x0B\x18\xA5\xCA\x74\x0C\xA3\xA4\x0A\xFE\x5C\x18\x01\x8C\x52\x52\xC4\x1F\x37\x05\x71\xBC\xD2\x30\xCA\x41\xDA\x88\x60\x34\x5B\xBA\xD7\x71\x90\x21\x75\xE2\x5D\x9D\x36\x8C\x46\x20\xAC\x69\x6F\x6B\x53\x18\x65\xEF\x63\x29\xFB\x8C\x8F\x7C\x18\xE5\xFC\xBA\xE7\xA1\x3F\x4C\x5F\xF8\x79\xB2\x24\x30\x3A\x5F\x35\x21\xD0\xF9\xB3\xB6\xF6\x05\x3C\x45\x69\xF9\x3F\x22\xEE\x1D\x1A\xC1\x9D\xAE\xC9\x4B\xF2\x55\xF0\x81\x50\x06\x44\x1A\x13\x2D\x60\x94\x53\x30\xA1\x2A\x02\x65\xD9\x30\x9A\xEE\x81\x2B\xE3\x8C\x41\xE5\x24\xC3\x28\x17\x9B\x9D\x85\x01\xD8\x4E\x61\x94\x5E\x97\x9E\x8E\x47\xEF\xF3\xE0\x80\x68\x27\x16\x46\x2D\x18\xF3\x2C\x45\x60\x34\xB2\xE4\xA6\x97\xDE\x16\x46\x93\x62\x87\xFC\xA9\xB8\xCA\x7D\x34\x74\x29\x93\x29\x89\xBF\xD6\x73\xDB\xF5\xF2\xA2\x94\x4D\xD7\x5F\x13\x18\xA5\xAF\xB1\xDA\xAF\x55\xB0\x53\x18\xCD\x7A\xA5\x55\x0A\x9E\xC9\x32\xF6\xB9\xD9\xE4\x5E\x49\xFD\x65\x26\x12\xF1\x1A\x36\x74\x02\x02\x9E\xA2\x2C\x15\x08\x61\x31\x01\x78\xBE\x06\x5D\xB1\xC9\xD9\x1D\x81\xC8\x56\x30\xCA\xF9\xB6\x01\x2A\x62\xA3\x11\x8C\x22\xF3\x47\x40\x93\x0F\xF5\x63\x47\xD8\x6C\x04\xA3\x1E\xC0\x51\xE9\x31\x5F\x1E\x64\x05\xFB\x52\xE4\x91\xEC\xCD\xA5\x6C\x35\x85\x51\xEB\xA3\x03\xDB\x4C\x48\xC1\xE4\x22\x8D\x22\x99\x30\xCA\xBD\xD6\x89\x82\x51\x2B\x3D\x88\xA8\xCD\xA4\x23\x0A\x46\x13\xF2\xDF\xB3\x59\x54\xBE\xA3\x10\x16\x85\x51\xCF\x56\xCA\xBF\x31\xCB\xD4\x55\x67\x6A\x08\xA3\xB1\x56\x30\x7F\x5F\x58\xB6\xDD\x3F\x10\x50\xE7\x68\x0B\xA3\x4C\xED\x5B\xCD\xA6\xF7\x77\x83\x6F\xB3\xE8\xEA\x4B\x81\x3B\x81\x51\x11\xAD\x51\x40\x27\x20\xE0\x29\x6A\xAD\x16\x80\xE7\x2B\x6B\xC5\xA6\x0A\x7A\x39\xD0\x80\x97\xDE\x16\x46\x29\x91\x13\x11\x22\x36\x72\x61\x34\x07\xCC\xFC\x1F\x22\xC3\x6A\x5D\xC0\xA8\x55\x2E\xD6\xAE\x5C\x1D\x39\x5B\x5C\xBD\x83\xB0\x34\xD9\x25\x8E\xD7\x10\x60\x94\x96\xF5\xC7\x87\x05\xA9\xFE\x30\x7D\xC1\xB4\x07\xF5\x96\xA6\x56\xAB\x2F\x51\x30\x6A\xA0\x2F\x0D\xA3\x8D\x39\xC2\xAA\xB3\xBF\x2E\xBD\xB1\x37\x00\x8C\xB2\xBD\x7F\x0A\x7C\x3D\xED\xB8\xAC\x7D\x59\x4B\x76\xAA\x1A\x0B\x73\x27\x17\x75\x3E\x9B\x3E\x72\xAE\xF9\xD0\x4B\xD6\x81\x2D\x5C\x84\xF1\x3A\x45\x3B\x82\x51\x91\x68\x04\x92\x95\x8B\x44\x1D\xAA\x70\x37\x0D\x50\x7A\x68\x4D\xD9\xFB\x89\xFC\x94\x94\xBF\xCF\xB7\xEF\xF9\x08\xEC\x15\xAE\x7F\x07\xEA\x12\xBE\xA3\x76\x5A\xD4\x37\x88\x23\x82\x0A\x7E\x5D\x62\xB6\xFD\x74\x63\x37\x51\x77\x32\x9E\x44\xBB\x72\x71\x90\x31\x24\x8E\x29\x17\x5B\x97\x31\xFB\xE9\x64\x3C\x70\x56\x5F\x0A\x56\x23\xAA\xEC\xF8\xAB\x07\xA9\x48\x7B\x04\x2B\xFE\x30\xED\x94\xB3\xFA\x12\x7C\x5B\x1A\x7E\xBC\x76\x68\xB2\x72\x91\x89\x11\x44\x7D\x75\x1D\x80\xB0\x0E\xDA\x47\x34\x2E\xFB\x18\x50\xCD\x4D\xAD\x0C\x95\x69\xCF\x8F\x0F\xA8\x7B\x6F\x93\xD7\x95\xB7\xFA\x12\x63\x5B\xC5\x6C\xFB\xF7\x0B\x3F\x6E\xAE\xB9\x19\x1B\xBE\x9F\xE4\x31\x24\xE3\x45\xB0\x05\x3E\xA3\xED\x52\xB6\x8D\xB0\xA7\x68\x76\xD5\x9E\x38\xEC\xCB\xAF\x42\xEF\xB0\x65\xD4\xEE\x23\x00\x5C\x01\xE0\xD0\x41\xFD\x48\x8F\xA7\x68\xC8\xF2\x6E\x76\xD1\x21\x77\x46\xD4\x30\x54\x61\x76\x20\xF8\x21\x30\x1F\x0A\xC2\x3E\xD1\xEB\xC8\x02\x49\xE1\xDA\xF1\x6D\xB5\xED\x5D\x2D\x9C\x9D\x8C\xFC\x1F\x82\xCA\x46\xE0\x9F\xB1\x4D\xF6\x16\x72\x3D\xAE\x5D\xF4\x8C\x52\x65\xD2\x3D\x38\xBC\x1F\x2F\xB6\xAC\x98\xBD\x36\xA2\x62\x26\x65\x41\x5E\x95\x57\xD9\xBB\x94\x4E\xF1\xDA\x59\xA1\xEA\x89\x73\xD3\xF9\x9E\xD1\x30\x8E\x2E\xD7\xA5\x6F\x44\x0E\xCA\xFE\x9F\xB0\xA5\xBC\x67\x64\x75\x1D\x1A\xF4\x8C\xF2\x3D\x9E\x15\x30\x59\xCF\x85\xBA\xB6\xAA\xC0\x62\x3D\x8C\xC4\x3D\x41\x59\x6D\x10\x6D\x09\x05\x84\xCF\xDB\x5A\x9E\x7C\xDB\x85\x65\xD5\x3A\x31\x9C\x63\x92\x68\xFB\xB2\x35\x6D\xFB\xA1\x8F\xA8\x0D\xDD\x46\x54\x3E\xA2\x9D\xA9\x89\x66\x05\x93\x37\xF9\x6A\x27\xA7\x8C\x4A\xDF\xAF\x45\x53\x2D\x0D\x9F\xCC\x90\xBB\x86\x4F\x99\x5C\x24\x9A\x26\x11\x77\xAD\x18\xA0\x44\xCB\xC4\x60\x2E\x02\xA3\x8D\x6E\x9C\xB9\x20\x99\x01\x75\x31\x1B\xFE\x7E\xFF\x07\x82\x84\xBC\x29\x83\x51\x93\x9D\xF9\x23\x62\x60\x18\xA5\xF2\x67\x1E\xF3\xA8\x6F\x62\x76\x7C\x2B\x18\x0D\xED\x77\x0D\xA3\x4D\x14\x3C\xE3\x09\x90\x00\x69\xA7\xE7\xC0\x68\xB2\xA9\xAB\xAD\xDD\x3B\x4B\xA9\xD8\xCA\x7D\x0E\x8C\x52\xB6\x15\xF8\x67\x2D\x63\x30\xCA\x80\xA2\x0B\xA3\xBC\xDF\xA4\x7D\x13\x06\xDF\x72\xCE\xA5\x46\x1D\xFF\x4E\x60\x34\xE7\xFC\x61\xEE\x15\xA2\x39\xA5\x61\xC3\xA7\x80\xA7\x68\x02\x14\xB9\xE1\xD9\x43\x44\x0E\x5C\xE6\x02\xA1\xD9\x59\x27\x28\x3F\x3D\xE2\x3B\x08\x95\xF2\x4D\xA4\x35\x85\x51\xBF\xB0\x2A\xDC\xF8\x39\x10\xD5\x6E\x9C\x2F\x09\x18\x65\xCB\x6A\xDB\x2D\x60\x34\x00\xCE\x18\x58\xFB\xB0\x16\x69\xBF\xA1\xC0\x28\x11\x8F\xDD\xBB\x1D\x05\x75\x98\xF6\x9C\x44\x18\xCD\x57\xE1\xB4\xAD\x22\xDA\xDB\x85\xD1\xA2\xF6\xE9\xA4\x87\x30\xAA\x6D\xB5\x7A\xC6\xB3\x2B\x18\x25\x55\xD6\x59\x79\xE5\x1C\xCB\x9D\xC0\x28\x21\x73\x3D\x5B\x39\x7C\xFB\xB1\x43\x48\xF4\x78\x76\x0D\xA3\xD1\xD8\x01\xE6\x84\x75\xBC\x8A\xE6\x90\x32\xE1\xF3\x28\xB4\xF8\xCB\x43\x9E\xF1\x14\x4D\x81\x0A\x98\xBB\x7A\xF5\xA3\x45\x3F\x73\x55\xB8\x9B\x2A\x1A\xE4\x8F\xF8\xB5\xF7\x07\xCF\x4D\x11\x7E\x41\xF8\x55\x9E\xDF\xAC\x67\xAE\x3C\x3B\x59\xF6\xED\xBA\x7B\x36\x82\x7D\x9C\x6D\x62\xF3\xE3\xF6\xEB\x4F\x96\xE1\xC0\x23\xE5\x2B\xD1\x7E\x83\xC4\xC6\xC9\x6E\xA3\xAC\xB6\xF3\xE3\x2D\xF3\x06\xCF\x28\x72\xE7\xA0\xE2\x9E\x19\xA5\xEB\x1D\xE4\xE5\xDA\x29\x53\x8E\x3D\xC6\xAF\x79\xD6\xD1\xF6\x69\xFB\xD1\xF9\x9C\x3A\xC0\x7A\x66\x94\xF3\xDE\xF4\x19\xCF\xB0\xCD\xB5\x9F\xF0\xF9\x53\xCB\x1E\x73\x98\xE3\x75\x05\x51\xD7\xC2\x31\x10\x3C\xBF\x0B\xB7\x0E\x9C\xDF\x1C\xDB\xC9\x9F\xF0\xE8\x7D\xA5\x36\x41\x3F\x9B\x4A\xD9\xF3\xAF\x17\xDA\x65\x98\x37\x62\x93\x8D\x35\x51\x37\xD1\xC4\x29\xE3\x99\xCF\x8B\xDA\xD8\x15\xF0\x14\x4D\x91\x8A\x70\xEB\x0C\x46\x09\xF9\xF0\xA1\x7C\xFF\x40\x14\x78\xB2\x60\x34\xE1\x97\x04\x42\x26\x1E\xD6\xBE\x5F\xDE\xCA\xDB\x16\x46\x63\xF5\xB7\xD3\xB9\xE3\x18\xF3\x47\x80\x46\x14\x46\xC9\xFC\xB1\xD8\x98\xF6\x8E\xB5\x51\x56\xDB\x51\xF5\x40\x43\x18\x25\xA0\x26\x13\x46\xF9\xF6\x8E\x1C\x03\x10\x31\x46\xFC\x36\x82\xD1\xC4\x75\xC5\xDA\xF2\x40\xAE\x15\x8C\x52\xBE\xA3\xF6\x62\x75\x05\x51\xD7\xC2\xB1\xEB\xFE\x41\xC0\xD7\xD9\x1C\x3B\xED\x92\xB4\x4D\x14\x0F\x62\x76\xFD\x73\xD7\x67\xDC\x4F\xEE\xF9\xC2\x4C\x60\x72\xAE\xDD\x3C\x3B\xF4\xBD\x52\x34\xC9\x4A\xC0\xE7\x69\x6D\x6C\xCA\x50\xBB\x68\xCA\x45\xFD\xC0\xA8\x70\x9F\xF9\x48\x0C\x4B\x46\x7A\x66\x82\xFC\xCE\xF8\x56\x41\x84\x50\xA5\x07\x36\x15\xE2\xC3\xEB\x8C\xFF\x94\x9D\x54\x3C\x54\xDD\x1A\xAF\xBE\x44\xD8\x26\xED\x56\x3B\x52\x3F\x44\xCA\x36\x32\xA0\xBF\xA6\xEB\xD2\xB3\x62\x7E\x04\x03\x5B\x56\xCC\xC9\x74\xAE\x1E\x4D\x87\xE9\xC3\x98\xD8\x55\x90\x72\xA5\x50\xC1\x65\x69\xC7\x29\x5A\xB5\x6B\xA3\xD5\x97\xBC\xE3\x5E\x58\xFF\x06\xAE\x95\x69\x06\xDF\x73\x69\x22\xBA\xC6\x7D\xF9\xC5\x69\x93\xEA\xB8\x3A\xC3\xF4\x44\x63\x68\xE8\x4F\xDB\xAB\x72\x9B\x3F\xFC\xA8\xBA\x12\xB5\x8C\xB4\xBF\x32\x79\xDD\xB2\xB6\x4F\x7F\x35\xA3\x20\x83\xDE\x6F\xFE\x0B\xEF\x6F\xD1\x67\x46\xAB\xD8\x9D\xD3\xD3\xA9\x03\x07\xCD\x6D\xE2\xD5\x99\x8A\x16\xD7\x9D\xCA\x67\x62\xD1\x48\x14\x19\x76\x2F\x00\xAC\x06\x70\x63\x13\x7B\x02\x9E\xA2\x39\xA8\x26\x30\x1A\xB9\x29\xFA\x37\x5C\x0E\x5E\x07\x81\x51\xD6\x77\xC4\xEF\xC4\xC2\x28\x01\x81\x94\x94\x5F\xAE\x23\x7F\xB1\x38\x38\x18\xF5\x63\xB2\xE3\x08\x9E\x19\x6D\x02\x9D\x9C\xEF\x0C\x18\xB5\xD2\x0B\xA6\xDE\x3C\x14\xE6\x4A\xD7\xAD\xA8\x43\x30\xB1\x76\x03\xA3\xD1\x70\x94\xE7\x17\x00\xFF\xCC\x68\x08\x6B\x2E\x3C\x86\xB6\x48\xD7\x06\x32\x53\xF6\x74\x3E\x3B\xB6\x72\x5F\x0A\x46\xA3\xCF\xB5\x82\x82\xC5\xD8\xEA\x4B\x56\xF1\x6A\x7F\x70\x4C\x92\x30\xDA\x70\xF5\x25\x52\xC4\x89\x9D\x88\x57\x67\x51\x00\xF9\xDC\xAE\xC0\xE8\xF4\x69\x76\xD5\x9E\x78\xFC\xDF\x3E\x0B\x6B\x4F\xFB\x92\xBF\xEB\x38\x08\x78\x8A\x44\x94\x38\x18\x2D\x22\x5D\x45\x5E\xBA\xEE\xA6\xE9\x12\x46\x59\xBF\xBE\xAD\x84\xDF\x89\x80\x51\xAF\x0A\xAC\xAA\x1F\x32\xF2\x07\x89\xB2\x99\xE9\x2F\xD6\x4E\x31\x28\xF6\x87\x0B\xB9\xC9\x55\xA9\xD8\xBA\x82\x51\x2B\x3D\x6B\x5D\x7A\x80\x86\xC2\x88\x14\x5C\x48\x32\xE0\xD5\x68\x5D\x7A\xC6\xAF\x86\xD1\xC8\x75\xE5\xAC\xD5\x1E\x01\xC8\x56\x2B\x39\x19\x78\x0C\xA5\x08\xB0\x2D\x0F\x75\x47\x30\x1A\x19\x2A\x37\x7B\x92\x36\x29\x03\x85\xF5\x9F\x0D\x9B\x1D\xAE\xBE\x14\x69\x33\x9D\x27\xA8\x43\x4C\x36\xE8\x7B\x12\x18\x9D\xDF\x9A\x5A\xF0\x5C\xB0\x64\xB7\x71\x87\x30\x54\x6D\xB8\xF2\xAA\x20\x6D\xD1\x93\x0F\xC7\xEC\xA1\x07\x8F\x21\x9A\xB9\xAA\xC4\x5D\xCB\xE9\x99\xD3\x77\xBD\x8E\x61\x34\xE5\x5B\xE7\xEF\x6A\x5D\xFA\xCA\xCE\x8E\x07\x1F\xC2\x23\xD7\x7D\x2B\xF4\xEB\xFE\x22\x51\x81\xC5\xE3\x4E\xFF\x10\xAC\x89\xF5\xBC\x8C\x04\x46\x29\xD9\xC7\x9A\x83\xF0\x36\xB1\x55\xE9\x3B\xD6\x6F\xC4\x23\xD7\xDC\xEA\x96\xE1\x6C\x85\x06\x93\xF9\x23\x73\xBA\xD7\x90\xA9\x0A\x4E\x7D\xA2\x43\xDC\x6D\x61\x94\x81\xB0\x99\x43\x57\xB8\x20\x15\x1D\x5A\x6F\x3B\xFB\x9D\xF2\x5D\x10\xF6\x54\xC5\x2F\x69\x18\xCD\x02\x47\x4E\x2A\x73\x36\x3D\x07\x7F\x56\x16\xBF\x6E\x5D\xC1\x68\x2C\x76\x9D\xC7\xB9\x85\xF9\x75\xE0\x02\xE7\xDA\xD6\x53\x37\x30\x5A\x6A\xC1\xB2\x99\x58\x54\xA2\x31\x6B\x2A\xC1\x73\xC9\xD9\xA7\x61\xD9\x09\xC7\x8F\x3B\x8C\xA1\xEA\xE1\x77\xFF\x43\x98\xF8\x96\xD7\x09\x78\x8E\x54\xBA\x27\x80\x00\x97\xAE\x60\x94\xF5\x6B\x13\x4D\x1C\x22\x1B\xF9\xD5\x20\xF4\x9B\x87\xF0\xF0\xB9\x1F\x4D\xC4\x31\x14\x1D\x7B\xCF\x11\x27\xDF\x80\x12\x88\x2E\x5A\x79\xFB\x17\x7E\x51\x86\x17\x69\x63\x6E\x18\xBC\xFA\xE8\xA4\xA7\x60\x94\x92\xD3\xEB\x43\xC5\xC1\x41\x67\x3E\x8C\xEE\xF8\xF5\x46\x3C\xFC\x96\x4B\x33\x03\xEA\x54\xC7\x02\x38\x87\xDA\xA1\x54\xDD\x56\xC1\x70\xB9\x3E\x55\x7C\x28\x34\x75\xCB\x80\x51\xA2\x6D\xF6\xF9\xA7\xD7\x60\xF1\x31\x87\x9A\xE2\xEC\x33\xA3\x09\x08\x4E\xC2\x28\x05\xA6\xCA\xEA\x79\xF4\xCE\xAD\x1C\x18\xCD\x02\xC7\x98\x62\xD0\x48\x01\x9A\x97\x91\xED\xB9\xEC\x08\x46\x9B\xC6\x1E\xC0\x68\x20\x7D\x1F\xF3\x72\x0C\x15\x46\x81\x7D\xCE\x7B\x2E\xF6\x3A\xE9\x77\x2C\xB7\xD2\x33\x3A\x69\x9A\xBA\x59\xED\x4B\xCE\x3E\x0D\xCB\x5F\xF1\xD2\x71\x87\x21\x9A\x57\x2A\xC2\x4D\xF7\x18\x39\x33\x44\x0B\xBE\x8C\xE2\xCA\x10\x32\xF9\x40\xD8\xD7\x65\x0A\xD7\x96\x99\x21\x9A\xEB\x77\xAC\x77\xE2\x63\x01\xBC\x09\xC0\xDD\xF7\x1C\x71\xD2\xE9\xF4\x8C\x5C\x22\x6E\xE5\xD7\x8B\xA9\xBB\x9F\x9E\xAC\x73\xA2\x9D\x02\x5F\x1A\x52\x9B\xA4\x8F\xBD\xBD\x3D\xB9\xE7\x47\xEE\xCC\x7B\xBD\xA4\x68\xF0\x5A\x27\xEF\x78\xE9\x7C\xB6\xF6\xF9\xF4\x99\x58\x7A\xFC\x91\x56\x3B\x79\x7E\x55\x62\x36\xBD\xEF\x57\xB9\x7E\xFD\xD7\x3A\x91\x52\x39\xAF\x62\x2A\x68\x7B\x5C\x5C\x9E\x3D\xD2\x2D\x17\x1F\x79\x8E\xD3\x71\xBB\x31\x52\x75\x8E\xDB\x8D\x2E\x05\x1A\x39\x47\x49\xFB\xBE\x0F\xAE\xB9\xED\x76\x89\xF9\x61\xAE\x75\x13\x6F\xB5\x39\x6D\x41\xF8\xDE\xE7\xBC\xE7\x62\xBF\xD7\x3D\xD3\x33\xCE\xDD\x2F\x44\xE3\xD2\x54\xF5\x78\x0A\x74\x8A\x26\x47\xDE\xCD\x33\xD9\xDB\x48\x95\xE1\xEE\x7E\x85\xF7\x3F\xE0\xFE\xA2\x14\x84\xB9\x86\x3D\xA3\x93\x71\xE3\x2D\x00\x7C\xEC\x9E\x23\x4F\xC4\xCA\xEF\x5F\x71\xB1\xDB\x53\xC8\xB4\x25\xDB\x33\x8A\x78\xDD\x53\xF5\xF5\x7F\x3C\x8B\x54\x1C\x84\x8D\xA6\x3D\xA3\x63\x56\x09\x49\xDE\xD2\x98\x56\xBD\x73\x67\xDE\x2B\xA2\x9D\xCA\x66\xAF\xBF\xEF\x7D\xF9\x59\x58\x72\xFC\x11\x55\xB3\xD5\xED\xE1\xB4\x4A\xD5\xD3\x18\x3E\x33\xCA\x4D\xEA\x09\x7B\x0A\x8D\x5B\xF2\x78\x57\xD1\x13\xC7\x22\x67\x02\x13\xDD\xCB\xEA\xC5\x15\x03\xC7\xAA\x2E\xFA\x7B\x10\x62\xC1\x3F\xA5\xEB\x5C\xFE\x5C\x6F\x6B\xB5\xAF\x6D\xCF\x68\xF2\x96\x10\xB1\xCF\xE6\x57\x45\xD8\x33\x9A\xDB\x63\x9C\xEA\xC9\xF5\xB4\xCF\x79\xCF\xC3\x7E\xAF\x7D\xA6\x75\xBB\x8D\xD5\xC8\xBF\x57\x2A\x2B\x0E\xD1\xB0\x35\x35\xE0\x29\xD0\x29\x9A\x7C\x35\x85\xD1\xC8\x5D\x4E\x65\x94\x19\x04\x46\x27\xEB\x0E\x7B\x11\x50\x5C\x1C\xC4\x69\x87\xD8\x19\x8C\x52\x2A\xEA\x1F\x39\x0E\x7E\xB3\xA0\x98\x8A\x5F\x4D\x66\x0F\x8B\xD5\x5B\x64\x42\xB3\xA0\xB3\x0B\x18\xD5\x76\xF7\xBA\xFC\x2C\x2C\x39\xFE\xC8\xCA\xAF\x9B\xB7\x66\x0B\x02\x46\x39\xE8\x03\xD0\x64\xD2\x91\x5F\x6F\x1A\x20\x9B\xC0\x28\x0F\x79\xDC\x61\x56\xBA\xB1\x94\x67\x4B\xDB\xA3\x62\xF3\xE2\x26\xE3\x2B\x8D\x1B\x6B\xB9\x30\x4A\xBE\x76\x89\xE3\x47\x35\x82\x61\xFA\x01\x60\x14\x00\xF6\x3E\xEF\x79\x58\xF1\xDA\x67\xBA\x7F\xE2\x73\x7F\x04\x92\xA2\xDA\x40\x60\x74\x58\x9A\x0A\xF0\x14\xE8\x14\x4D\xAF\x32\x60\x34\x55\xAE\xC9\x7B\x49\x73\x61\x74\xB2\xEE\xA6\xC5\x3D\x47\xBD\x78\xF5\xCA\xDB\xAE\x2C\x5F\xC9\xC1\x2E\xD9\x89\x6E\x60\xD4\x57\xEA\xC7\xD7\xE9\x41\x6B\x00\xA3\x21\xE1\x4C\x96\xEC\x7A\x7B\xF1\x0E\x02\xA3\x85\x6E\x0F\x55\x60\xAF\xCB\xCE\xC6\xD2\x67\x95\xD0\x49\x75\xF0\xB7\x5A\x97\x3E\xDA\x03\x19\x39\x8E\xCA\x83\xA8\x08\x40\x92\x30\x5A\x54\xA8\xE4\xA5\x3B\x30\xCA\xF6\x78\x3A\xB5\x28\x93\x3C\xE0\x0E\x73\x58\x79\x95\x7D\xCE\xE9\x1E\x4C\x26\x3E\xCF\x1F\x05\xA3\xD4\x9B\x08\x58\xA9\xC2\xED\x69\xAC\x6C\xE7\x9C\xD1\x64\xDC\x5E\x7C\xAE\xFF\xE6\x30\xBA\xF7\xFB\x9E\x87\xFD\xFE\xE6\x59\xEE\xF9\x4B\xE4\xEB\x0C\x46\x27\xF0\x52\x9E\x36\x4D\x05\x78\x0A\x74\x8A\xE6\x96\x9A\xF4\x10\x30\x90\x9A\x7C\x2F\x69\x1C\x46\x67\x0F\x5D\x85\x95\xB7\x7E\xD5\xCF\x10\x06\x42\x86\xEA\xE5\x2F\x98\x74\xC6\xC6\x86\x2B\xAE\xA6\x26\x36\x1D\x07\x14\x37\xFA\x3F\xC4\xB5\x0F\x0A\x46\xAB\xB4\x46\x30\xCA\x28\xF0\xA9\x10\x1D\xA6\x6F\x08\xA3\xB3\x87\x3D\x11\x2B\xFF\xF3\x33\xB4\x31\xAA\x67\xC7\xEC\xCB\x6B\xD3\x58\xFA\x86\xCF\x7E\x3D\x9C\xD8\x64\x43\x52\xAC\x2E\x56\x3D\x72\x61\x54\xAF\x4B\x3F\x73\xF8\x81\x98\x39\xFC\xC0\xF2\x1B\x73\x5C\x3A\x83\x51\x6F\xD2\x11\x3D\x68\x5D\xD4\xC0\xEA\x3D\xFE\x90\x05\xA3\xCA\xAB\xAF\x36\x69\x9D\xB3\xB1\x67\x3C\x5D\x67\xB1\x77\x82\x52\x06\x8A\x0C\x50\x0E\xED\x51\x30\xEA\xE4\x20\x7A\x4D\x69\xFF\x5C\xAC\x91\x6B\x2A\xB8\x07\xA5\x7A\x5E\xBD\x32\x99\x30\xBA\xDF\x6B\x8F\x0F\xE3\x20\xE3\x0D\x63\x6D\x05\xA3\xF5\x49\x36\x31\xDA\xB9\x79\x3B\xB6\xDC\xB6\x16\x4B\x9F\xB1\x72\xDC\xA1\x64\x69\x2A\xC0\x53\x24\x9A\x5F\x2A\x92\x37\x62\x1E\x46\xA9\x9E\x8C\x3C\x18\x75\x8B\x52\xA0\x57\xA5\x37\x9A\x4D\x8F\xD0\x46\x84\x73\xD9\xFA\x92\x3F\x0E\x94\xBD\x4C\x18\xF5\x0D\x39\x60\x90\x51\xF7\xD6\x30\x4A\x95\x89\x1C\x37\xAE\xDE\x5C\x6C\x54\x3A\x07\x61\x41\x8F\x0E\x05\x9D\x9C\x6F\x1A\x46\xF9\xD5\x97\xC2\x74\x1E\x46\xC3\x98\x1B\xC3\x28\x51\xE7\x72\xF8\xBF\x0C\xC8\xEF\xCD\xEC\x0C\x46\x99\x73\xBB\x9E\x4D\x9F\x03\x8F\x44\x79\x20\x8C\xCD\x9C\x23\x29\x7B\x11\x60\xB4\x1F\x6F\x88\xC4\x6E\xDB\x8D\xAE\x8E\xE4\xC5\x4C\xBE\xBF\xD4\xCA\x40\xBE\x03\x36\x09\xA3\xCA\xDD\x4D\xC0\x28\x59\xA1\xD8\xE3\x0A\x6E\x08\x0D\x61\xD4\x36\xA8\xCB\xAA\x28\xC7\x77\xA9\x9D\x9B\xB7\xE3\x8E\xD3\x3E\x8F\xC7\x3D\xE7\x50\x01\x4F\x91\x48\x34\x88\x38\xB0\xF4\xF6\x35\x85\x51\x27\xBF\x67\xCB\x07\x90\xC0\x1C\x03\x64\x05\xE1\x9B\x85\xD1\x04\x00\x66\xD9\xA8\xD2\x07\x81\x51\x7F\xB7\x2A\x98\xB2\xDA\xEE\x14\xC3\x28\x57\x71\xC7\x8E\xD7\x46\x2D\x61\xB4\xD9\x52\xA0\x1C\x8C\x86\xF6\x9B\xC2\x28\xDD\xB9\x5D\x98\x0C\x34\xA4\x0D\x0E\xA3\x3C\x9A\xE8\x15\x93\x1A\x80\xAD\x13\x8C\x0F\x8F\x75\x19\xC7\xDE\x00\x30\x1A\x8B\xBD\x06\x55\x1A\x16\xE9\x98\xED\x18\xDC\x78\x07\x83\x51\xE6\xBA\xB0\x2D\x8D\x04\x46\x63\x64\xC9\xDD\x2B\x22\x45\x5A\x48\x43\xE7\xA3\x9F\xFD\x09\x1E\xF7\x9C\x43\xBB\x35\x3E\x44\x09\x78\x8A\x44\x53\xA3\x0E\x60\x34\x05\x73\x76\x82\x22\xD2\x29\x18\x8D\x0D\x8D\x07\xB1\x46\xEE\xBC\xB1\xE1\x6E\x27\x94\x06\x30\xEA\xB3\x15\xA9\x0A\xCE\x7C\xDB\xA9\xB2\x6D\x60\x34\x05\x76\xAC\x2F\xB4\x87\x51\xCA\x1E\xF5\x1A\x9C\x00\x2C\x13\x30\x9A\x8C\xB7\xDC\x39\x16\x18\x65\x8E\xB5\xB3\x62\x92\xF1\x5B\xDA\xC9\x82\x51\xA2\xBD\x1D\x80\x64\xCE\x6F\x6A\xC5\xA4\x81\x9E\xF1\x6C\x35\x33\xBF\xFC\x92\x0B\xA3\x76\xEC\x51\x88\xE3\x89\xD5\xDA\xE7\x1E\xD3\xAC\x67\x51\x2D\x1B\x6D\xD7\xA5\x77\x2C\x75\x0C\xA3\xB4\x46\x07\xA3\x36\x74\x4E\x9B\x04\x3C\x45\xA2\xA9\xD6\x28\x60\xB4\xF0\xF2\xDA\x1F\x7C\x18\xD5\x3F\x06\x31\x88\x64\xEE\xB4\xDE\x8F\x6B\x12\xEA\xB8\xF8\x1D\x60\x4C\xC0\xAE\xE3\x3B\x01\x5A\x81\x6D\xC2\x4E\x0A\x46\x39\x48\x4B\xF9\x1B\x04\x46\x53\xAF\xF8\x49\xC5\xC6\xC1\x68\x16\xA4\x52\xB6\xBA\x80\x51\xBA\xDE\x35\x8C\x52\xD7\x05\x4C\x9D\x0D\x83\x64\x3E\x33\x1A\xF3\x6B\x03\x24\xBF\x56\x7B\xDE\x8A\x49\x83\x3D\xE3\x39\x20\x8C\x72\x6C\x65\xD9\x55\x5E\x39\xD7\xB2\xAF\x82\x1E\xA6\x67\x40\x31\x1B\x46\xCD\x7F\xDD\xC1\x68\x14\x44\x81\xF0\xC0\x30\x97\x0B\x97\x97\xCF\xDD\x0E\x46\xA7\x19\x3A\x01\x01\x4F\x91\x68\x0E\x6A\x9C\x30\x4A\x00\x9A\x0F\x91\xEC\xAF\xAB\x06\xA5\x08\x4C\xE5\xC0\x68\x32\x9E\xB0\xB8\xEB\x9F\x88\xBD\x2D\x8C\xC6\xE2\xCE\x99\x30\xD5\x09\x8C\x52\xE7\x43\x51\xC3\x4C\x1B\x50\xEE\x02\x46\x9D\xF4\xA6\x30\x1A\xDA\x72\xA0\x90\x82\xB0\x0A\x84\x0C\x78\xB5\x98\xC0\xC4\xAE\x4B\x1F\xF1\x0B\x80\x98\x4D\x6F\x01\xB0\x93\x4E\x16\xAF\x9A\x28\x03\x1E\x9D\x0C\x0D\x61\x94\xB9\x48\xEA\x15\xAE\x9A\x4E\x88\xD2\x79\x6B\x18\x64\x87\xD1\xC7\x0C\xA3\x3E\x88\xB2\x7E\xEC\x7C\xE4\x39\xC6\x5C\xE6\x11\x08\x0E\x95\x86\xD1\x69\x86\x4E\x40\xC0\x53\x24\x9A\x27\x9A\x34\x18\x25\x64\x1E\xCA\xE7\x62\x8D\xF8\xCD\x86\x51\x4A\x05\xFD\xEB\x69\x0F\x9D\x76\x0D\x87\x50\x8C\x4F\xAA\xDC\x80\xFE\x58\x71\x60\x39\x22\x18\x4D\xD6\xA3\x3D\x8C\x92\xCF\x78\x56\xB0\xA0\x08\xE8\xCC\x85\x51\xE7\x88\x51\x30\x1A\xEB\xF1\x24\x8E\xBB\x0B\x90\x91\x0B\x84\x1A\xF2\x8F\xAE\x71\x5F\x7E\x09\xC0\x16\x60\x5F\x13\x15\x3D\x75\xA2\x70\xCB\x17\xC9\x19\xA6\x67\x61\x71\xE2\x61\x94\x90\x0F\xA4\x05\xC8\x96\xA5\x61\x34\x76\x04\xDC\xEB\x6E\x9A\xA1\x13\x10\xF0\x14\x89\xE6\xB1\x9A\xC0\x28\x91\x6E\x92\x9B\xC2\x68\x22\xA6\x14\x44\xE6\xFA\xA5\xEC\x70\x72\x86\xF9\x23\xD9\x3B\x81\x51\x02\xEA\xC7\x01\xA3\xDC\x8F\xEE\xC0\x30\xDA\x04\x3A\x39\xDF\x19\x30\x6A\xA5\x17\x41\x7E\x9A\x0C\x14\x8A\xD6\xEB\xC3\x9B\x10\xBC\x74\xD7\xD2\xE0\x7E\xC9\xF2\xFE\x5B\x17\x54\xE8\x39\x67\xF5\x25\xA7\x0E\xBE\x2D\x0E\x20\x9B\xF4\xB4\x3A\x2A\x9C\xF3\x39\x3A\x4C\xEF\xEC\xA3\x60\x91\x5F\x7D\x89\x82\xD1\xE0\x0F\x84\x24\x8C\x46\xDE\x31\x6A\xE5\x71\x4E\xCF\x9C\xFB\x59\x2A\x5E\x3B\xB9\xED\x4C\x7A\x3F\xA6\xF8\xA9\x34\x11\x12\xF0\x14\x89\x44\x96\x38\x18\x65\x40\x89\x2A\xD3\x04\x46\x9D\x72\x04\xFC\xC5\x20\xB2\x0D\x8C\xB2\xF2\x61\x92\x00\x1F\x67\xBF\x5D\xB4\x29\x8C\x86\x6E\x87\x0A\xA3\x54\x79\xA2\x67\x26\x1A\x47\x13\x18\x4D\xC5\xD6\x15\x8C\x5A\xE9\xCA\x4B\xE7\xDF\xE3\x49\xEC\x2B\xD0\x19\x8C\xB2\xAF\x8A\x6D\xE0\x97\x2E\x5F\x04\xE7\x83\x0F\x90\x6D\x97\x02\xAD\x6D\xA5\xAF\x4B\x05\xC6\x1E\x59\x0E\x99\xC3\xF4\x39\x30\xDA\x7E\x29\xD0\x3C\x18\x8D\xD8\x67\x7C\xD0\x35\x2F\x10\x7D\x85\x14\x67\xAB\x33\x18\xE5\xEE\x95\x91\x22\x63\x90\x80\xA7\x48\x24\x4A\xA8\x63\x18\x4D\x3E\xE3\x69\x17\x1A\x02\x8C\x06\xC5\xFC\x98\x3C\x3B\xD1\x78\x38\x30\x9C\x24\x18\xA5\x64\xD5\xD9\x40\x1C\x03\xED\x4D\x61\xB4\x0D\x28\x77\x0D\xA3\x2C\x00\xD2\xF5\x23\x87\x63\xDB\xC0\x28\xE3\x97\x5C\x76\x92\x79\x66\x94\x2C\x6F\xA8\x96\x07\x48\x12\x9C\x1A\x3D\xE3\xC9\xC7\xCE\xF5\xB2\x72\xC0\xE4\x58\x65\xC0\x8E\x1B\x4E\x9F\x1A\x18\x8D\xC8\x39\x3D\xB9\x3A\x04\x05\x06\x80\xD1\xA8\x26\x0F\x46\x05\x3C\x45\x22\x51\x0B\x75\x00\xA3\x41\x79\x0B\xC8\x7C\x08\xEA\x12\x46\x49\xD9\x64\x94\x61\x27\x06\x8C\x13\x03\xA3\x3A\xE6\x5C\xD0\xF7\x76\x35\x86\xD1\x48\xBD\x47\x0E\xA3\x84\x74\x0F\x9C\x97\x3F\x04\xC2\x32\x73\x16\x8C\xEA\x53\xC5\xCC\x82\xE7\xC8\xD1\x7F\xD9\x7E\x99\x9F\x82\x51\x2E\xF6\xC6\x10\xCC\x81\x13\x03\xA3\xB1\x85\xBD\x92\xC3\xF4\x4C\xC8\xE4\xEB\xAB\x2A\x70\x0C\xA1\x3B\x03\x1A\x27\x08\x46\xC9\x37\x18\x28\x63\x34\xB0\x31\x4C\x18\xAD\x77\xDA\xE7\x66\xEC\x80\x8E\x17\x46\x05\x3C\x45\x22\x51\x47\xCA\x80\xD1\x82\xC9\xA7\x77\xC6\x60\xA7\x33\x18\xA5\xFC\x16\x48\xFA\x9D\x3A\x18\x05\xFD\x43\xA8\x33\xF8\xBD\xBC\x39\xFE\xA2\x30\x4A\x95\x19\x35\x8C\xEA\x63\x15\xA9\xB3\x97\xDF\x1F\xA6\xB7\xC3\x70\xD3\x33\x26\x3B\xC5\x66\xB5\x13\xC7\x8B\x82\x51\xAE\xBC\x5F\x95\xB6\x8F\x07\xE4\xC2\x28\xE5\xBB\xBE\x7C\xEB\xE3\xC7\x5E\x5E\xD6\xB9\x97\x07\x8E\xC4\xF3\xA2\x51\x18\x75\x81\x90\xB6\x59\x7E\x19\x1A\x8C\x12\x32\xAB\x63\xD5\x09\x81\x8F\x4E\x61\xD4\xDA\xA5\x73\x17\x75\x45\x3C\xBF\x93\x01\xA3\x02\x9E\x22\x91\x68\x88\xF2\xEE\x5A\xF6\xDD\x31\xBB\x8C\x0A\xD3\x5B\xC3\x28\x23\x05\x74\x36\x81\x69\xA4\x30\xCA\x41\x20\x0F\x31\xA6\xAC\xFF\x1E\xCF\x2C\x7F\x44\x5D\x86\x0A\xA3\x19\xB1\x25\xCF\x27\x3B\x96\x82\x3F\x47\xA2\x30\x4A\xAF\x4B\xEF\xC3\x28\x3F\x10\x5B\x54\xA7\xB1\x07\x85\xD9\xC7\xCB\xF6\xAD\x2A\xA6\xF2\x61\x86\x7B\x8E\xD2\x05\x3E\xF3\x29\x80\x51\xC6\xBF\x33\x41\x88\xB1\x45\x4A\xF7\x00\xB7\x79\xBE\x53\x99\x4C\x3C\x8C\x86\x9E\x47\x09\xA3\xEC\x79\x97\xB2\xCF\xF8\x68\x0D\xA3\x76\x90\x3E\xE8\x07\xE6\x07\x84\xD1\xDC\x6B\x2D\xA1\x26\xE0\x79\xAB\x9F\xB0\xFD\x5B\xB7\x60\xFB\x7D\x6B\xB1\x70\xFF\x15\xDD\x44\x33\x41\xEA\x3F\xBA\x15\x5B\x6E\x0E\xAA\x2C\x12\x89\x86\x25\xEA\xF9\x3B\x1F\x68\x4C\x72\x5B\x18\xE5\x94\x01\x91\xC6\x44\x17\x30\x1A\xB1\xD1\x08\x46\x5D\x33\xA4\x6D\x12\x0D\xAA\x1F\x29\x16\x10\x9B\xC0\x28\x01\xF9\x4D\x60\xD4\x00\x01\x55\xEF\x86\xB1\x15\x05\xFA\x5B\xB6\x61\xCB\x9A\x1F\x86\xB6\x74\x9D\xED\x7A\x04\x3E\xB8\x74\xEB\x63\x14\x46\x69\x0C\x2B\x9F\xF1\x0C\xDB\x83\x82\x51\xAE\xBC\xDF\x4E\x21\x50\x31\x90\x96\xF9\x9C\x27\xCB\x33\xCE\x04\x21\x16\xF6\x82\x1F\xCB\xAD\xD7\xFD\x18\xDB\xEE\x7A\x00\x33\x4F\xDC\x8B\x86\xB0\x28\x8C\x12\x60\xCB\xC1\xA8\x03\x8D\xDD\xC2\x28\xF7\xDA\xA5\xFE\xE6\xED\xD8\x78\xED\x4F\x03\x5F\xCE\x39\x46\xC0\x6A\x97\x30\x1A\x55\x0A\x9E\x1D\xF3\x4D\x61\x74\x70\xF5\x1A\xE4\x7D\x10\x80\x73\x35\xAB\x7B\xD7\x62\xDD\x59\x6F\xC0\xF6\xFB\xD6\x76\x1B\xD5\x98\xD5\x7F\x74\x2B\xD6\xFE\xDD\x79\xD8\x71\xCD\x7F\x8C\x3B\x14\x91\x68\x1E\xA9\xA8\x37\x55\x01\x9C\xFE\x2B\x5E\x59\xFB\xFC\xBC\xA6\x0C\x32\xCA\x10\x0A\xF2\x5A\xF9\x95\xBF\x11\xBE\x73\x62\x0D\xEC\x34\xB4\x41\x96\x6F\x60\x9B\x6B\x6F\xDF\xA7\xF2\x63\x62\xEA\xCE\xF9\xB4\xF3\x92\xF6\x88\x3A\xB2\xF1\x73\xF5\xE6\x63\xEB\x6F\xDE\x8E\xB5\x6F\xBC\x04\x3B\xAE\xFA\x76\xFC\x58\xE7\xC4\x9C\x4C\x2F\x67\x30\x2B\x55\xF6\xEC\x95\x9F\x99\xA6\x56\xA8\xF3\x56\xF9\xF9\x63\x9E\x77\xAC\x6A\xBF\xB5\x6D\xAA\xFD\x7C\xBF\x2A\x7A\x3E\xF1\xF1\xC7\x6C\x1D\xF6\x9B\x0B\x02\x3E\xE8\xFF\x7C\x03\x7E\xF1\xD2\x8F\x60\xEB\x5D\xEB\xEB\xD8\x92\xB6\xC2\xD8\xF4\x3E\x3B\x3F\x72\xED\x31\xC7\xDC\xDC\x2A\xA2\x6D\xE7\x1D\xB3\xCA\x6E\x7F\xF3\x76\xDC\xF9\x9A\xCF\x60\xEB\xE7\xC3\x3F\x6E\x94\xBD\x55\xE5\xD9\xE3\x9B\x8A\x9B\x6A\x0F\x78\x36\xB8\xBC\x54\x9E\x58\xDB\x5A\x1B\xD9\x66\xA9\xF3\xA3\xA1\x9A\x80\x27\x00\xAC\xF1\x13\xE6\x1A\x7C\x0A\x74\x8A\x44\x93\x22\x02\xA0\x06\x85\xD1\x98\xAF\x18\x34\x0D\x1D\x46\x5B\xD8\x60\x7F\x1C\x28\xDB\x9E\x62\xB6\x49\x18\xCD\xA8\x3B\x19\x4F\xA2\x5D\xB9\x38\x58\x20\xE6\xEA\x5D\x41\xE7\x9B\x2E\xC6\x8E\xAF\xA4\xA0\x73\x80\x98\xA3\xE9\xE0\xCF\x31\xC2\xBE\x0D\x3D\x0E\x8C\x52\xC5\x7D\x40\x61\xDA\x29\x09\xA3\x51\xD8\x49\xFB\x8E\x01\x1F\x08\x3E\xE8\xFF\x7C\x03\x7E\xF9\xD2\x0B\xB0\xED\xEE\xF5\x01\x3C\x8E\x0D\x46\x99\x73\x2B\x0E\x8C\x55\x7D\x36\x6F\xC7\x9D\xAF\xFE\x7F\x24\x74\x82\xB1\xAD\x62\xB6\x7D\x90\x64\xE2\x76\xF7\xD3\xAE\xED\xDD\x51\xA0\x4E\xC6\x8B\x60\x2B\xF3\x32\x36\x5A\xA8\x29\x78\x9E\x01\xE0\x76\x3F\x71\xAE\xC0\xA7\x40\xA7\x48\x34\xE9\x2A\xDC\x2D\xAB\x97\x93\xB8\xC1\x93\x36\x09\x1F\x31\x68\xEA\x14\x46\xBB\xB0\x01\xC2\x46\xE4\x87\x82\xF4\xCF\xD8\x66\xED\x26\xE2\x26\xCB\x25\xDA\x95\x2D\x43\xD4\xAF\xAA\x77\x7F\xCB\x76\xAC\x7D\x73\x04\x3A\x4D\x9D\x9B\xC4\x0C\x26\x2E\x30\x75\xD1\x76\x08\xB7\x36\xFC\x70\xED\xAC\xE2\x3D\xA6\x01\x28\x11\x3D\x72\x83\xC1\x28\xE7\xDB\xB7\x05\x0E\xF8\x48\x3E\xE8\xDF\xB9\x01\xBF\x7C\xE9\xF9\xD8\x76\xF7\xFA\xB0\x0E\x20\xEA\xA0\xCF\xAD\xC6\x30\x0A\x3A\x36\xB4\xB5\xE7\xDA\xDC\xB9\xF9\x31\xDC\xF5\xEA\xCF\x60\xEB\x17\x82\x2A\x5A\xE2\x60\xD1\xAF\xB7\xAE\x3B\x40\xC3\xA8\x7B\xEC\xC3\xE3\x4C\xFB\xA6\x6C\x34\x87\xD1\xF0\xFA\x08\x20\x74\x40\x35\x05\x4F\x05\xE0\x44\xCC\x41\xF8\x14\xE8\x14\x89\xA6\x51\x45\xB8\x25\x61\x94\x50\x32\x7F\x04\x40\x48\xB8\xA5\xE0\x89\x88\x97\x83\x10\xCE\x46\xDB\xDE\x55\xAE\xED\x7C\xDB\x7E\x7D\x62\xB6\x89\x1F\xA8\xAC\xB8\xC9\x72\x44\x1C\x49\x5F\x65\xDE\xFE\x96\xED\x58\xFB\xA6\x8F\x61\xC7\x57\x6E\xE6\x8F\x2F\x40\xF8\xF1\x62\x4B\xC6\x45\xB4\x11\x99\x9E\xF2\x8D\x10\x7E\x1C\x1B\x44\x71\x2F\x3F\x17\xEB\x40\x30\xCA\xC4\x9E\x1A\xA6\xD7\x30\x7A\xC8\xAF\x3E\xCA\xF2\x81\x0D\x9F\x35\xBC\x86\xB6\x28\x18\x75\xCE\xAD\x28\x3C\x86\x6D\xE2\x03\x57\x5B\x18\xED\x67\x41\xA7\xDD\x68\xE1\x71\x50\x8E\x4F\x10\xF5\x0E\xE3\x8D\x02\x62\xE0\xB2\xB0\xBF\xD0\xE7\xB2\xBD\xBB\x89\xAF\xE0\x1A\x1F\x4C\x4D\xC1\x13\x00\x7E\x86\x39\x06\x9F\x02\x9D\x22\xD1\x5C\x52\x11\x6E\xC9\x3F\xD7\x1B\x00\x97\x5F\xC6\x81\x0F\x78\x79\xED\x1F\x39\x0A\x16\x28\xDF\x44\xDE\x41\x61\xD4\x57\x76\xCF\x2B\x51\x9F\xC0\x36\x57\xD6\xAB\x63\x2C\x6E\xB2\xBE\x44\x1C\xDE\xBE\xB2\xA7\xF3\x22\xEC\xF8\x6A\x02\x3A\x4D\xBD\x19\x5F\x5C\x6C\x59\xF9\xFD\x36\xA2\x94\xB2\x65\x01\x40\x2C\xEE\x2A\x3F\x3B\x4C\x4F\xD8\xCF\x85\x51\xF6\xFA\xF0\xF2\xC7\xA0\xEF\x90\x75\x17\xB2\x7C\xD0\xBF\x73\x03\x7E\x79\xCA\xF9\xD8\x7E\xCF\x03\x26\xBF\x6B\x0B\x24\x8C\x0E\x36\xAC\x1E\xB6\x49\x53\x18\xDD\xB9\xF9\x31\xDC\xF5\x9A\x7F\xC2\xB6\x2B\x7E\xC0\x34\x90\xD5\x54\xB1\xDE\xCB\x56\x30\x0A\x1A\x10\x49\xE7\xE1\x39\x31\x54\x18\x1D\x40\x6D\xC0\x13\x98\x43\xF0\x99\x80\xCE\x2D\xA3\x8E\x47\x24\x12\x0D\x43\x91\x9B\x27\x09\x51\x76\x19\x06\xB8\x62\xF9\x1D\x28\x81\x97\xD7\xFE\x31\x88\xC0\x58\x67\x30\x1A\x6B\x8F\x94\xFD\x0C\xD0\xF2\xD3\xA3\x65\xED\x1F\xCE\x48\xDC\x0C\x44\xD9\xFB\xFA\x5B\xB6\x61\xED\x5B\x58\xE8\xA4\xEF\xDD\x54\xFB\x75\x15\x5B\x14\x0A\x52\x6D\x17\x2F\x9F\x3B\x4C\x1F\xC2\x28\x7D\x5C\x59\x18\xA5\x7C\x7B\xF9\x5D\xBF\x80\x0F\x7D\x07\xAF\xBB\x28\x02\x9F\x0F\xE2\x97\xA7\x9C\x8F\x6D\x77\x3F\x40\x00\x64\x11\xD8\x1A\x37\x8C\xF6\xB7\x3C\x86\xBB\xCF\xFC\x34\x07\x9D\xC4\x39\xE6\xC7\xC7\xB4\x5B\xDD\xB8\x09\x18\x25\x8E\x1D\x79\x94\x60\x5D\xF3\xD6\xF7\x8E\x61\xB4\xAB\xB1\xF6\xB6\xE0\x09\xCC\x01\xF8\xCC\x80\xCE\x13\x47\x1C\x92\x48\x24\x1A\xB9\x7C\x00\x03\x03\x60\x5E\xDE\x81\x60\x94\x00\x34\x9D\x9F\x03\x9E\x41\x60\x94\x52\x2A\x1E\xD2\xBE\x15\x8B\x1F\x23\x09\x54\x9C\xED\xCC\xB8\x15\x9D\x5E\x42\xE7\x85\xD8\xF1\xD5\x6F\x51\x35\xA3\xEF\xDD\x7E\x2C\x5C\xFB\x11\x60\x92\x3C\x36\x59\x6D\x0D\xC6\x87\xD7\x76\xA4\xEA\xBC\xD1\x61\x7A\xAF\x1E\x24\xD4\xB4\x01\x1A\x1B\xD2\x8C\x5F\xD0\x50\xA5\x80\x83\xD7\xC6\xE1\xF3\xDE\x97\x9D\x8F\xED\x77\x3F\x90\x01\x90\x44\x3D\x80\x66\x30\xCA\xF4\x64\xA6\x60\x74\xE7\x96\xED\xB8\xFB\xCC\xCB\x63\xD0\x49\xF2\x81\x3F\x4C\x1F\xC6\xC7\xB4\x9B\x65\x20\x09\xA3\xDC\xA1\xCA\xB0\x3D\x28\x8C\x76\xA1\x42\x45\xD7\xC9\xB2\x32\x12\xCB\xCE\xAD\xBC\xF9\x1A\xDC\xF3\xF4\x13\x0E\x05\x70\x05\x80\x23\x3A\x8D\x6C\xBC\xDA\x02\xE0\xC4\x95\x37\x5F\x73\xF5\x3D\x4F\x3F\xE1\x06\x00\xC7\x8E\x3B\xA0\x71\xAA\x38\x60\x05\x16\xFE\x97\x63\x86\xEE\x67\xDB\x17\xBE\x14\xA4\x2D\x78\xEA\x51\xD8\xE5\xA0\x95\x43\xF5\xBB\xE3\xAE\x7B\xB0\xF3\x3B\xDF\x0F\xD2\x67\x4E\x7A\xD1\x50\xFD\x02\x74\x9D\xE7\xA9\x8E\x5D\x79\xF3\x35\x37\x0E\xDB\xC9\x3D\x4F\x3F\x61\x16\xC0\xA3\xC3\xF6\x23\x1A\x9B\x34\x10\x5C\x8F\xC9\x39\xCE\xEF\x5C\x79\xC7\x65\xEF\x02\x14\xF1\xFB\x5D\xFD\xFE\x5A\xE9\xF7\xAC\x3A\x75\x92\x7E\x73\x16\x1D\x74\xEF\x25\x5B\xF5\x97\xC2\xFC\x43\x70\x83\x95\xAE\xAB\xF3\xF3\xFD\xFE\x7A\xCE\xF2\x01\x26\xEB\x1C\x1B\xA7\x8E\x55\x4A\x35\xBB\x77\x2B\xA5\xB2\xB6\x84\x0E\x05\xF0\x03\x18\x9E\x9E\xEA\x6D\x33\x80\xE7\x5B\x75\x7B\xCF\x04\xC4\x24\x9B\x6C\x73\x79\xEB\x63\xB4\xFA\x76\x87\xB1\xCB\x36\x39\x9B\x7F\xEF\x9E\x94\xE3\xFC\x1C\x34\xD3\xA4\xFC\xE6\x24\x5E\x11\x90\xAD\xB9\xCC\x07\x93\x72\x8E\x8D\x6B\xEB\x03\xC8\xE6\x48\xC3\x93\x1D\x81\x27\x30\x37\x4E\x2E\xFF\xA4\x02\x80\x03\x01\x6C\x98\x80\xD8\x64\x93\x6D\xAE\x6E\xA7\x63\xB4\x3A\xA6\xC3\xD8\x65\x9B\x8C\x8D\xBA\x77\x4F\xC2\x71\xFE\x1C\x9A\x6B\x52\x7E\x73\xBA\x1C\xE6\x9A\xAB\x7C\x30\x09\xE7\xD8\x38\xB7\xD3\x01\x8C\x15\x3C\x81\xF2\xE4\xBA\x66\x02\x1A\xA3\xCD\x76\x27\xC2\x93\x4A\xEB\x65\x18\xDF\x8D\x60\x03\xCA\xBF\x2A\x46\xED\x77\x1C\x3E\xE7\xFB\xB6\x61\x02\x62\x18\xE5\xD6\xC7\xE8\xA1\x53\x6B\x9C\xD7\xF4\x38\xDB\x7B\x2E\xD6\x79\x52\xEF\xDD\x9F\x03\xB0\x17\x13\x57\x4A\xE3\xFE\xCD\x79\x59\xCB\xB8\x63\x12\x3E\x18\xCE\xB1\x1A\x17\x1F\x98\x7B\xF7\xB8\xC1\x53\xEB\x64\x00\x1F\x02\x70\xCB\x98\x0E\x46\x93\x83\xF6\x2F\x00\xDE\x00\x60\x69\xA2\x4E\x07\xA2\x1C\x02\xB9\x61\x44\xB1\xDD\x50\xF9\x3B\x70\xC4\xBE\x6D\xBF\x1F\x43\xF9\x70\xF8\x28\x8F\xC9\xB7\x51\xFE\x15\xF9\x59\x00\xF7\x8D\xD0\xEF\x7D\x95\xCF\x63\x30\xFA\xE1\x13\x5D\xE7\x51\x9F\x63\xE3\xDA\xEC\x73\x6C\x9C\x9A\x8F\xED\x3D\x57\xEA\xBC\x01\x93\x79\xEF\xD6\x6D\xDD\x74\x78\x7D\xDC\x71\xFB\xE7\xC9\x30\x25\x7C\xD0\xED\xB1\x1A\x17\x1F\x18\x35\x05\xCF\x81\x26\x17\x89\xE6\x8D\xF6\x04\x70\xF4\x08\xFC\xDC\x00\x60\xAB\x97\x76\x30\x80\x55\x43\xF6\x7B\x27\x80\x9F\x7B\x69\xB3\x00\x8E\x1B\xB2\x5F\x80\xAE\xB3\x48\x24\x12\x89\x44\x53\xA1\xA6\x9D\x93\x02\x9E\x22\x91\x48\x24\x12\x89\x44\xA2\x56\x6A\x0A\x9E\x83\xBC\xC7\x53\x24\x12\x89\x44\x22\x91\x48\x24\xCA\x96\x80\xA7\x48\x24\x12\x89\x44\x22\x91\x68\x24\x12\xF0\x14\x89\x44\x22\x91\x48\x24\x12\x8D\x44\xBB\x8C\x3B\x00\x91\x48\x24\x12\x89\xE6\x88\xF6\x01\x70\x06\xBA\x5B\x79\x68\x0D\x80\x8B\x00\xFC\xBA\xA1\xED\x35\x28\x5F\xE7\xF4\x92\x06\xF9\xB5\x9F\xA6\xEA\xA2\xCE\x6D\xEB\x39\x4A\xDB\xBA\x4D\x7F\x54\x7D\xDF\xD5\xB2\xB5\xC7\x00\xB6\xA6\xA9\xFD\xBA\xD1\x90\x5E\xA7\x24\x12\x89\x44\x22\xD1\x7C\xD2\x3E\x00\xD6\xA2\xFB\x57\xD8\x6C\x01\x70\xEA\x90\x6C\xDB\xDB\xDA\xAA\x0E\x4D\x74\x6A\x15\xDF\xA4\xD7\xB3\x4B\xDB\xE7\xA3\x7C\xE3\xC9\x8F\x3A\xB2\x35\x4D\xED\x47\x6A\x52\xDE\xE3\x29\x12\x89\x44\x22\xD1\x7C\xD2\x3B\xD0\xFD\x0F\xFE\xA8\xB7\x77\x34\xA8\xEF\xA9\x13\x10\xEF\xB8\xB6\xAD\x13\x10\xC3\x38\xB6\x53\x41\x48\xDE\xE3\x29\x12\x89\x44\x22\xD1\xE8\x75\x03\xAA\xE1\xCD\xC7\x7F\xE5\xDC\x2A\x49\x01\xF6\x4F\x67\x01\x14\x26\x4D\xB9\x69\x00\x50\x28\x9D\x04\x40\xE1\x37\x17\x5C\x85\xC7\xFE\xE5\xBB\x8E\x93\xFD\xBF\xF6\x56\x93\xCF\x29\x63\xA5\x3D\x72\xFD\x8F\xB1\xF1\x1D\x5F\xC4\xE3\xDE\xF5\x27\x58\x7A\xFC\xE1\xC1\x7E\x14\xAA\x0E\xAB\x50\xB8\xE7\xD8\x0F\xE8\x6F\x6B\x9E\xF4\xD0\x07\x8F\xA3\xF2\x9B\xB8\x0A\x85\x1F\x2E\x7D\xFD\xA9\x00\x2E\xD5\xBB\x67\x4F\x7E\x32\xF6\x7B\xFD\x09\x56\x1E\xAB\x7E\x75\xD5\x03\x7B\x3A\xFD\xDE\xF3\xBE\x86\x47\x3F\xF7\x23\x27\xFF\xA1\xB7\xBE\xC6\x2B\xEC\xB3\x8A\xD7\xB6\x8C\xEE\x7D\xEF\xB5\x78\xF4\xB3\x3F\x71\x6D\x7F\xF7\x8C\x74\x41\x4F\x1B\xAF\xB9\x03\xBF\x7E\xFD\xBF\x3B\x69\xBD\xC3\x96\xE1\xA0\x4F\xBC\x04\xBD\xA5\x0B\x07\xB2\xB5\xE8\x94\xC3\x71\xC0\x9B\x9E\xDD\x38\x26\xAD\xAE\xEA\x98\x69\xFB\x7F\x00\xF8\x94\x9D\xD0\xB4\x73\x52\x9E\xF1\x14\x89\x44\x22\x91\x68\x70\x99\x67\xEA\x66\x0F\x7B\xA2\x05\x45\x16\x68\x32\x69\x85\x05\xA1\x1A\xB0\x8A\x42\x61\xBF\xF7\xFF\x05\xEE\x57\x9F\xC4\x63\x5F\xFA\x8E\x71\x32\x73\xF8\x81\x26\x9F\x06\x41\x5D\x56\xDB\xD9\xF2\x9D\x7B\x00\x00\xBD\xA5\x8B\x31\xFB\xA4\x27\x04\xFB\x7D\x90\xB4\xEB\xA0\xFA\x3D\xA0\xA8\x61\xA2\x28\x00\x54\x9F\x55\xA1\xF0\xE3\x65\x7F\xFB\x02\xD8\xD0\x79\xD2\x11\x38\xE8\xA3\x2F\x47\x6F\xF1\xAE\xA1\x9F\x98\x2F\x2B\xDF\xC1\x17\x9D\x82\x9F\xE3\xB3\x0E\x7C\x2E\x3E\x62\x7F\x38\xB0\x69\xB7\x8D\x67\xDB\x91\x97\x76\xC8\x25\x27\xE3\x0E\x7C\xDE\x81\xA7\xDD\x8E\x5C\x11\x96\x4B\x48\x97\xD1\xC0\xD8\x3B\x6C\x19\x0E\xFB\xF2\xAB\x30\xBB\x6A\xCF\xC6\xB6\x36\x7D\xFB\x5E\xF3\x79\xD1\x29\x87\xE3\x90\x4B\x4E\xC6\x82\xDD\x9A\xC1\xAB\xAD\xAE\xEA\x98\x69\xFB\x52\x94\xCF\x7B\x7E\xB5\xAD\x4D\x99\xD5\x2E\x12\x89\x44\x22\x51\x97\xEA\x2F\x00\xFA\xBD\x6A\x5B\x50\xFF\xBF\xB3\x67\xA5\xD7\x69\xAA\xBF\x00\xAA\xDF\xAB\xB6\xF2\x73\xBF\xBF\x00\xC5\xEC\x22\xAC\x38\xEF\x2F\xB1\xEB\x8B\x9E\x6A\x4C\xAB\x7E\x0F\x6A\x67\xAF\xCA\x63\x95\xDD\xA9\xBF\xF7\xA0\x54\xF9\xD3\xAE\x54\x51\xA7\x55\xFB\xFB\x8E\x8F\x72\x73\x42\x37\x71\x68\x1F\x85\xF3\x1D\xE5\xC4\x15\x00\xC0\xCC\x89\x47\x62\xE5\x05\xAF\x40\x31\x3B\x63\xE5\xB1\x7C\xAA\xBA\x6C\xDF\xFA\xAC\x54\x99\x4F\x7F\x2F\x16\xCF\x60\xD5\x85\x2F\xC3\xEC\xC9\x4F\xB6\xEA\x59\xD4\x36\x54\x01\xD5\x2F\xCA\x36\xD3\xDF\x95\xBB\x1F\x7A\xAB\xF2\xE8\x6D\xC1\xE2\x19\x1C\x72\xF1\x4B\xB0\xE8\x94\xC3\x07\x3E\xAC\xFB\xBD\xEE\x38\xEC\xF3\xFE\xE7\x0E\x04\x9D\xB6\xBA\x80\x4E\x00\x58\xB0\xDB\x42\x1C\x72\xC9\xC9\x9D\xD4\x31\xD3\xF6\x40\xDD\xA9\x02\x9E\x22\x91\x48\x24\x12\x75\x29\x07\x38\x7B\x34\x84\x66\x80\xA9\xAA\xE0\x73\xDF\xF7\x9D\x56\x9B\x36\x90\x5A\xC1\xE3\x4E\x1B\x14\x17\x54\xD0\x57\x0D\xD6\xF7\x0B\xA8\x9D\x0B\x42\x98\xF4\xCA\xD8\xE2\x6C\x6A\x1B\xB0\x7A\x76\x57\x9E\xFF\x67\x28\x66\x67\xEB\xFD\xCA\xF2\x61\x7D\xD6\xE9\x75\x9E\xA2\xCE\x53\x01\x64\xB1\x68\x16\xAB\x2E\x7C\x59\x1D\x87\xB5\x4F\xD9\xC0\xA9\x6D\x68\xE0\xEC\xF7\x00\xEB\x3B\x05\xA4\x1A\x3E\x6B\xE3\x1A\x4C\x9B\x1F\xDA\xFD\x5E\x77\x1C\x9E\x74\xDD\x5F\x0F\x0C\x9D\x00\x3A\x81\x4E\x2D\x0D\x88\xC3\x10\x61\x7B\xA0\x19\xF3\x32\xD4\x2E\x12\x89\x44\x22\x51\x97\xAA\x86\xAB\x4B\x85\xCF\x74\xC2\x1B\xF2\xA6\x9E\xD9\xB4\xCB\xF5\x66\x17\x39\xB6\x95\x67\x4B\x79\xC3\xF5\x1A\x3C\x51\x01\x1F\x0A\x40\x41\x95\xC3\xE6\xD0\xC3\xE6\xE5\x67\xFF\x31\xC9\x0A\x2E\xA1\x88\x21\xF2\x2A\xAD\x7E\x75\xD0\xEC\x2C\x54\xDF\xDE\xEF\x0E\xE7\x2B\x14\x56\xF9\xC2\xD8\x28\xB4\x57\x2F\x4F\xB1\x68\xD6\x8A\xA3\x40\x35\x1E\x5F\xD6\x51\x59\xB6\x14\x9C\x7D\xF5\x77\xEB\xD9\x51\x55\x54\xF6\x4B\xF5\x6C\xDB\xDA\x16\x0A\x90\xF4\x49\x0D\xE1\x5B\xDA\x75\x9F\x25\xD1\xFD\xB9\xEA\x0A\x3A\x87\x65\x2F\x62\xBB\xE9\xEB\xA3\x1C\x09\x78\x8A\x44\x22\x91\x48\xD4\xA5\xFA\x0B\x92\x30\x59\xA6\x47\xD2\xFC\x72\xC6\x76\xAF\x4E\xB3\xE0\x56\x59\xB6\xF4\x50\x7B\xDF\x02\x4F\x68\x5C\x0D\xE0\xD0\x0B\xBD\xDF\x73\x26\x08\x29\x78\x13\x8D\x2C\xA9\x7E\xAF\xB2\x59\x03\xAC\x01\x56\x0D\xA3\xDE\x7E\xED\xD3\x01\x5A\xC2\x47\x1D\x47\x0D\xAD\x25\x74\xDA\x9F\x4D\x85\x4A\x2B\xF6\xBE\x32\x18\xF7\xBB\x09\xDC\x7A\x0A\x55\xD5\xC0\x5A\x43\x38\x05\xA4\x79\x93\x99\x44\x69\x09\x78\x8A\x44\x22\x91\x48\xD4\xA5\x54\xAF\xE2\x96\x9C\x1E\x4D\x2A\x8D\x80\x50\xAD\x9D\x16\xD4\x52\xB6\x6C\x00\x53\x45\x35\x94\xEE\x4F\x70\xE2\xED\xAB\xFE\x02\xD3\xA3\x6A\xE0\x31\xD1\x3B\x4A\xC2\x24\x01\xB8\x2C\x6C\x5A\x93\x99\x6C\xDB\xAA\x50\x65\xCF\xA5\xB6\x61\x7A\x3D\x61\x4D\x78\x02\x0A\x15\x81\xD3\x3A\x18\x37\x6E\x7B\xB2\x52\xB5\xDF\x60\x78\x19\x5C\xBD\xDF\xFC\xDB\xBC\x77\x54\x14\x4A\xC0\x53\x24\x12\x89\x44\xA2\x2E\x65\x4F\xD8\x31\x3D\x73\xCA\x62\x17\xE5\xC0\x53\x12\x4C\xFD\x1E\xCF\x82\x00\x47\xDB\x46\xD5\xE3\x09\x3D\x21\x27\xD2\x3B\xEA\x4B\xED\xEC\x45\xE1\xD1\xA9\x26\xD1\x3B\x4A\xF7\x7E\xE6\xED\x77\xE2\xA8\xEA\xC9\x03\x2B\x3D\x5C\xAF\xA1\xD3\x85\x56\xD4\x6D\x0D\x54\xCF\x7E\x56\x3B\xB8\xE1\x7A\x85\xD2\xAA\x5D\x6F\xAA\x77\xD4\x4A\x73\x24\x40\xCA\x4A\xC0\x53\x24\x12\x89\x44\xA2\x2E\x65\x0F\xB5\x2B\x0B\x12\x2D\xD0\xDC\xB4\xE6\x3B\xD8\x74\xDD\xCD\x58\x72\xFC\xD3\xB0\xE4\xD8\xA7\xA2\xD1\x50\x7B\x00\x8E\x6E\x4F\xE6\xCC\xAA\x03\xEA\xBC\x56\xAF\xA4\x11\x09\xB7\x55\x8A\xD7\x1B\x68\xE0\x33\xB3\x77\xB4\x2C\x53\xBF\xEA\xE9\x91\x6B\x6F\xC7\xC3\xFF\x76\x1B\x76\x7F\xFE\x51\x58\xFA\xEC\x23\x4C\xCF\x62\xD6\x50\x3B\x33\x5C\xAF\x81\xF5\xE1\xAF\xFF\x08\x1B\xBF\xFA\x03\xEC\xFE\x82\x23\xB1\xFB\x09\x4F\xAA\x7A\x3E\x61\xDA\xBA\xEE\xB8\xB4\x40\x55\xD7\x51\xFB\x67\x86\xEB\x0B\x0D\x9C\xAA\x70\xEA\x1E\xF4\x8E\x9A\x3C\xFE\x70\x3D\xA5\xE6\xC3\xF5\x0F\x5D\xFD\x53\x3C\x78\xD5\x8F\xB1\xE7\x0B\x9F\x84\xC7\x3D\xFF\xB0\x66\x85\xC7\x68\x3B\x26\x01\x4F\x91\x48\x24\x12\x89\xBA\x94\x3D\xD4\xEE\xF4\xA8\xC1\xC0\xCE\x63\x6B\x1F\xC4\xB6\xCF\x5E\x8D\x99\xC3\x0F\x71\xE1\x90\xEB\x1D\x35\xB6\x17\x10\x3D\xA5\x2E\x84\x2E\x7E\xCA\x6F\x63\xF9\xC7\xDF\x88\xC7\xD6\xAD\x2F\x21\xD8\x07\x59\x12\x42\x2B\x11\x13\xA3\xDC\xC9\x4C\x56\x28\x3B\xAD\xE7\x47\x9D\xDE\x51\x98\xC9\x4C\xDB\xEF\x7B\x08\x5B\x2F\x5D\x83\xD9\x23\x56\x62\x37\xEB\xB9\xCD\x9A\xF7\x34\xE0\x32\x43\xED\x56\x9C\x7E\xEF\xE7\xB6\x7B\x37\x62\xF3\x27\xBE\x89\x45\x47\x1E\x58\xCE\x94\x4F\x4D\x66\xB2\x6C\xBB\xBD\xA3\xD6\x70\xBD\xAE\xCF\x80\x93\x99\xFC\x9E\x50\x67\xB8\x5E\x59\x79\xAC\xFA\x50\xDA\x76\xDF\x46\x3C\x7C\xE1\xAD\xD8\xED\x29\xFB\xB1\x79\xDA\x6A\x98\xB6\x63\x12\xF0\x14\x89\x44\x22\x91\xA8\x4B\xD9\xBD\x86\x36\x70\x02\x35\x34\x56\xD0\x31\xF3\xC4\x03\xEB\xFC\xD4\x30\xBC\x5D\x56\xDB\x8E\xF6\x8E\x96\x9F\x97\xAC\x3E\x1A\xFD\x47\xB7\xD2\xF9\x83\xE7\x3C\xED\xD8\xED\x67\x42\x6D\xBB\xCD\x7B\x47\x15\x60\x26\x3A\x41\xBF\x5A\x09\xF0\x66\xD7\xEB\xDE\x4F\x2B\x26\x6D\x1B\xF6\x70\x3C\xD1\xFB\xA9\xF3\x54\xAF\x50\x0A\xF6\x57\x9F\xDD\xFE\x4E\xB7\x37\xB5\xCE\x13\x42\x2B\x0A\x85\x6D\x77\x3E\x88\x99\x83\x96\x47\x7B\x47\x75\x1B\x6D\xBD\xF3\x41\xCC\xEA\xBC\x55\x83\x38\xA0\x5D\xA5\x99\xE8\x94\x69\x64\xA7\xEE\xD0\x35\x69\xD8\x3B\x3A\x2D\x12\xF0\x14\x89\x44\x22\x91\xA8\x4B\xE9\x1E\x4F\xE7\xB9\x4B\x6F\x68\x5C\xF5\xB0\xFC\x82\x77\x61\xF1\xEF\x1C\x81\x8A\xD0\xCA\x5D\x06\x70\xEA\xF2\x9B\xD6\xDC\x62\xCC\x6C\xBA\xE1\x7B\x58\xB2\xFA\xA9\x61\x3E\x0D\xAD\x56\xB9\xDE\xCC\x62\xA0\x4F\x80\xA3\x05\x93\x9B\xD6\x7C\xCF\x8E\x7C\x4D\x74\x68\x3E\xE8\x1D\x0D\x27\x2E\x19\x3C\x34\x3D\x87\x3D\x14\x07\x2D\xC7\xE2\xDF\xFF\x6D\x33\xD1\xC9\x19\x5A\xB7\x7A\x54\x6D\x18\x74\x67\xB5\x83\x7C\xDE\x54\xA9\x02\xBD\x55\x7B\x60\xC9\xEA\x27\x95\x2F\xDC\xF7\xF6\xDB\xE5\x37\x7E\xAD\x5E\x15\xA9\x7C\x0F\xA8\xF6\x09\xC0\x5A\x99\xC9\x9E\xCC\xB4\xF6\xFC\xEB\xB0\xCB\xEE\xB3\xD8\xFB\x89\x7B\x23\x35\x99\x69\xDB\x5D\xEB\x71\xC7\x8B\x3F\x8E\x27\xDF\xF6\x66\x33\x3C\x5F\x80\x1E\xAE\x87\x7E\xCF\xAA\x99\x04\x66\x02\xD1\x4D\x82\xB0\x77\xD4\x38\x47\x97\xEA\x1D\xB6\x0C\xBB\x1F\x7F\x70\x32\xDF\x43\x57\xFF\xD4\xFE\xBA\x66\x10\x9F\x02\x9E\x22\x91\x48\x24\x12\x75\x29\xD5\xB3\xBF\xD4\xFF\x1B\x5E\x51\xD8\xFD\xF9\x7F\x50\xBE\x5B\xB2\xEF\xF5\x40\xDA\xC0\xAA\x14\x36\xDD\x74\x0B\xD6\x9F\x79\xAE\xB1\xB6\xFE\xD5\xE7\x02\x1F\x7D\x07\x96\xAC\x3E\x1A\x6C\xEF\x28\x37\x5C\xEF\x0D\xD1\x6F\x5A\xF3\x5D\xAC\x3F\xFD\xBD\x76\xE4\x97\x04\x30\x69\xE5\x0F\x7B\x47\x7D\x48\x75\x21\x14\x00\x16\x2C\x5E\x8C\x7D\x2F\x7D\x23\x76\x3D\x60\xEF\xF2\x9D\x9F\x55\x3E\x1F\x24\x01\xAB\x03\x10\xC8\xEA\x1D\x2D\x96\x2C\xC6\xFE\x9F\x79\x2D\x76\x7D\xC2\xDE\x50\x3B\xED\xDE\xD1\xCA\x47\x65\xFB\x91\xAF\xFF\x10\xEB\x4E\xB9\xD8\xB1\xED\xDA\xAC\x21\x52\x1F\xA2\x0D\x5F\xFC\x0E\x1E\x7C\xEB\x55\xD8\xFB\xFC\x93\xEB\x77\x8A\x9A\x3C\xE1\x64\xA6\x3B\xFE\xF4\x12\xF4\xEF\xD8\x58\xF7\x02\x07\x70\x5A\x05\x5E\x57\xA0\x1E\xF2\x37\x4D\x16\x0E\xD7\xD7\x7D\xB7\x05\xCC\x8B\xEF\x3B\x9A\xCC\xB4\x60\xD9\x4C\xD6\x0A\x4C\x0F\x5D\xFD\x53\xDC\xFD\xC2\xCB\xED\xA4\x4B\x1A\x3B\xB3\x24\xE0\x29\x12\x89\x44\x22\x51\xA7\xB2\x7A\xB2\xDC\x07\x34\x0D\x58\xF6\x66\x17\xD7\x50\x68\x01\x69\x99\xAD\x02\xC3\x6F\xDC\x82\xF5\x67\xBD\x33\xB0\xBE\xFE\x35\xEF\x02\x3E\xF2\x4E\x2C\x59\x7D\x4C\x00\x93\xDC\x64\x26\x8B\x66\x80\x02\xD8\xB4\xE6\x56\xAC\x3F\xE3\xDD\xB6\xD9\x9B\x56\xFE\xF0\x73\x97\xA1\x5F\xE7\xB1\xF3\x93\x43\xBF\x19\xBD\xA3\xCB\x5E\xF0\x8C\xF2\xB3\x63\x97\xEE\x1D\xB5\x95\xD3\x3B\xBA\xFB\x0B\x9F\x5E\x86\xD1\xE7\x27\x2B\x3D\x72\xED\xED\xF8\xD5\x7F\xFB\x98\x1B\xF6\xCE\x5E\xB4\xC7\x55\x01\x78\x6C\xE3\xB6\xF2\xB3\xAA\x97\x15\x75\x7B\x47\x75\xCF\x67\x69\xA3\x7F\xC7\x43\x26\xBF\x86\x4E\x03\xD7\xDE\xBB\x47\x95\xDD\xE3\x99\x98\xCC\x64\xF7\x8E\xD6\x3D\xA4\x35\x7C\xB2\xA3\xF1\xAA\x00\x79\xCC\x2C\xED\x75\xF2\x51\xFC\xCE\x4A\x04\x74\xDE\x04\xE0\xB2\x64\xC1\x88\x04\x3C\x45\x22\x91\x48\x24\x1A\x89\xFC\x67\xFB\x00\x17\xB8\xDC\xCF\x1B\xBF\xF8\x6F\xBE\x81\x9B\x00\x3C\x03\x00\xD6\x9F\xF9\x4E\xE0\x82\x73\xAB\x9E\x4F\x5D\xD4\x82\x38\x6D\x2A\x18\x86\xAF\xA0\xF3\xD5\x7F\xEF\xD8\x5D\xF9\x83\x2B\x56\x3B\x70\xC8\x01\xAC\x2D\xB2\x77\xD4\xFE\x4C\x94\x8B\xF4\x8E\xDA\xF5\x8F\x4D\x5C\xA2\xD2\xB8\x95\x99\x1E\xFC\xCC\x37\xE0\x4B\x4F\x5C\x32\xE6\x4C\x8F\xAB\xF5\x6C\xA8\xB2\x80\xCF\x3C\x6F\xEA\x0F\xF7\x17\x4E\x79\x00\xE8\xF7\x0B\x70\x2B\x33\x19\x9B\xD5\x6A\xE5\xCE\xCB\xFD\xD9\xC9\x4C\xF5\x39\xA3\xAC\xF3\x26\x35\x99\xA9\xF4\x45\x3D\x3B\x8A\xF0\x38\x46\xF4\xAB\x7F\xBC\xC5\x4F\x1A\xA8\xB7\x13\x90\xB5\xDA\x45\x22\x91\x48\x24\x1A\xA3\x2A\x40\x50\x45\x39\x44\x6F\x6D\x2B\xDE\xFE\x06\xEC\x72\xC2\x33\xED\xCC\xCF\x40\x09\x9F\x00\x80\xF5\x67\x9D\x83\x4D\x6B\xBE\x63\xD6\x2B\x87\xB2\xD6\x7F\x77\xBE\xF7\x50\xCE\x86\xEF\x61\xD3\x0D\xDF\x2D\x87\xEB\x6B\xDD\xB4\xF2\xB6\x2F\xAE\x8E\xAF\x27\x6F\xED\xB3\x95\x93\x3F\xB6\x36\x7D\xB0\x46\xFD\x02\xCF\x76\xBD\x5F\x99\x35\xEA\xAB\x6D\x67\xCF\x5A\xB7\xBE\x5E\x83\xDE\xA4\x55\xEB\xCD\xEF\xF7\x81\x57\x61\xD7\x3F\x7E\xAA\x13\xB6\xB3\xD6\xBD\x63\xD3\x5E\x97\x5E\x0F\x87\x17\x75\x9E\x9D\x3D\x67\xDD\x7A\x5D\x5E\xF7\x88\x6A\xDB\x8E\x4D\xE2\xBB\x99\x5F\xD6\xAF\xD7\xAD\x37\xEB\xCB\x3B\x9F\x0B\xA7\x77\xD4\xD9\xC7\x7C\x37\x71\x30\xEB\xD6\xD7\xE7\x59\xE1\x6D\xF4\xD9\x79\xC8\x25\x27\x63\xD1\x29\x87\xDB\x49\x97\x02\x78\x01\x9D\x3B\x4F\x02\x9E\x22\x91\x48\x24\x12\x4D\x9C\x0A\xF4\x16\x2D\xA2\xE0\x73\x3D\x6C\xF8\x3C\xFB\xED\xD8\x74\xE3\xAD\x2E\x7C\x6A\xE0\x54\x35\x70\xA2\xDF\xC3\xA6\x35\xDF\x29\x7B\x4A\x6B\xDD\xB4\xF2\xBB\x5F\x5A\x1D\x85\x55\x7B\x5F\xDF\x43\x86\x56\xA0\x99\xC8\x6F\x6C\x33\xF9\x77\xBA\xF9\x55\x7F\x41\x05\x99\x1E\x98\x56\xFB\x8A\xD9\x45\x58\x71\xDE\x5F\x60\xD7\x17\xD5\xF0\xD9\xAF\x20\xB5\x06\xC3\x05\x04\x1C\x56\xB1\x54\xF0\x16\xC2\xA4\xEB\x4F\x8B\x84\x4D\x65\x01\xAB\xEA\x99\xE1\xF3\xBE\x07\x8F\x7D\x2B\xBF\x49\x87\x1B\x07\x0B\xA0\x1A\x26\x75\x1C\xCA\x02\xCE\xEA\x5C\xA8\xF3\x17\xEE\x7E\x16\x46\x0B\x2C\xD8\x6D\x21\x05\x9F\x67\xE4\x9E\xC5\x94\x04\x3C\x45\x22\x91\x48\x24\x1A\xB1\x36\x5C\x79\x15\xEE\x79\xFA\x09\xD8\x70\xE5\x55\xD1\x7C\xBD\x45\xB3\x58\xF1\xF6\x37\xD8\x49\xC7\xAE\xBC\xF9\x9A\xD5\xB0\xE0\x73\xD3\x7F\x7C\xD3\x85\xCC\x00\x3E\xCB\x6D\xD3\xF5\x37\xDB\x76\x6E\x5A\x79\xEB\x57\x56\xC7\x7A\x47\xEB\xEF\x16\xEC\xD9\x32\x40\xBA\x20\xCC\xA7\x5A\xF6\x80\x1A\xDB\x19\xF9\x77\x12\xF6\x03\x08\x2D\xE1\x73\xDF\xF3\xFE\xCA\x98\x0E\xE0\x71\xA7\x0D\x8B\xBA\xAC\xEE\x69\x74\x7B\x47\xE9\xDE\xCF\xBA\xA7\x96\xEA\x0D\x75\x81\xB5\x30\x50\xCB\xF7\x8E\xDA\x70\x59\xC5\xEC\xF5\x72\xBA\xD0\x5A\x97\xA9\xEB\x58\x03\x69\xDD\x7B\xEA\xC2\x67\x79\x9C\x8A\x78\xEF\x68\xBF\x87\x05\x8B\x67\x70\xC8\xC5\x2F\x71\xCE\xC1\xE8\x49\x9B\x90\x3C\xE3\x29\x12\x89\x44\x22\xD1\x04\xAB\xB7\x68\xD6\xFE\xBA\x47\xF5\xFF\x3B\x00\xFC\x7B\xF9\x51\x0F\xD7\xEB\xCF\x5A\xF5\x64\xA6\x3A\x9F\xD1\x3B\xCC\xEC\x7B\xE5\x3D\x9F\xE9\x3C\x2F\xEA\xEF\xB7\xCD\xF7\xF8\x67\x41\xAB\x8F\x9B\x6E\xBC\x15\x9B\xAE\xFB\x36\x96\x1C\x7F\x4C\xB9\x42\x13\xF5\x0C\x28\x37\x71\x89\x9A\xE0\xE4\x94\xB3\x3E\x27\x9E\x23\xED\xCD\x2E\xAA\xC3\xB6\x5E\xAA\x4F\xBD\x7B\xB4\x28\x14\x74\xDB\x28\x55\xB8\x93\x91\x60\x3D\x0B\x6A\xBF\x5B\xD4\xB2\x1D\x5D\x99\xA9\x80\x79\x56\x93\x7B\xF7\xA8\x33\x3B\xBF\x02\xE0\x99\xC3\x56\xD4\x60\x59\xB5\xB5\xD2\x79\xAC\xC9\x4C\x75\x1C\x3D\xE2\x79\xD1\xFA\x39\xD3\xA6\x2B\x33\xF5\x16\xCF\x58\xB5\x34\xE7\x60\x2B\x09\x78\x8A\x44\x22\x91\x48\x34\x27\xE5\x4D\x66\x52\x1E\xDD\x71\xAF\x7D\x32\x49\x1E\xF0\xF9\xCF\x01\x1A\x38\xE4\x27\x33\x3D\xB6\x6E\x43\xB5\x42\xD3\xC1\x08\x56\x74\x72\x3E\x13\x13\x97\x98\x95\x99\x5A\x4F\x66\xB2\xE3\xB6\x6C\x29\xCF\x96\xF2\xE0\xB0\x9C\x8C\x14\x9F\xCC\x64\xA2\xAB\xD6\xBA\xAF\x79\xAF\x9E\xB8\xA4\x5D\xE8\xDE\x54\xF3\xAE\xD2\x2A\x4E\xA5\x43\xB0\x5E\x2F\xA5\x54\x0F\xFB\x7D\xEE\x34\xEC\xF6\xB4\x83\xD1\xEF\xDB\xFB\x0B\x63\xD7\x9E\xCC\x64\xE2\xB0\x66\xCC\x77\xB6\x32\x53\x47\x12\xF0\x14\x89\x44\x22\x91\x68\x4C\x9A\x39\x68\xE5\xF8\x9C\xFB\xE0\x69\x78\x46\x45\xD2\xBC\xF2\x36\x70\x02\x61\xEF\x69\xDF\x82\x5E\x7B\x16\x3C\xB9\x32\x93\x07\x87\xA9\x5E\xCE\xCA\xD6\xF6\x5F\xAE\xC3\xC2\x27\x3C\xDE\x9B\x25\x4F\x80\xA9\xD6\x4E\xAB\x37\x95\x81\x5B\x65\xF5\x78\x06\xB3\xDA\xAD\xDE\x51\x1B\x2E\x81\x0A\x26\x2D\x9F\xFE\xBB\x47\x4D\x2F\x23\x00\xB5\x73\x41\x7C\x65\x26\x00\x8F\x7B\xF1\xD3\xD0\x5B\x3C\x03\xD5\xA7\xF7\x53\xC0\x0A\xC0\x19\x76\x8F\xAD\xCC\xA4\x5F\x7E\x3F\xB3\x6A\x4F\xB6\x77\xB4\xEB\x97\xD6\x0B\x78\x8A\x44\x22\x91\x48\x34\x06\x2D\xFF\xF0\xBB\xCB\x95\x8B\x26\x42\x1A\x10\xAD\xCF\xEC\xAB\x9E\x74\x92\x05\x37\xC1\xCA\x4C\xBA\x8C\x0D\x9E\xF6\xF0\x2F\x18\x58\xB5\x6C\x33\xBD\xA8\x36\x08\xAD\xBF\xF4\x4A\xF4\x96\xEE\x86\x85\xFB\xAF\x88\xC0\x64\xAC\x37\xD5\xCA\x6F\x97\xD3\xC0\xDC\x77\x81\xD9\xE0\x1F\x05\xB9\xA8\x7A\x48\x81\xE8\x7B\x42\xFB\xD6\x33\x9E\xB1\x95\x99\x0A\x00\xC5\xEC\x22\xA8\x3E\xBF\x9F\x1C\xCE\x07\x98\x77\x8F\xBA\x2B\x33\x29\x55\xE0\x57\x17\x5C\x8B\x05\xBB\xCF\x62\xEF\x27\xFE\x5E\x1D\x07\xB1\x32\x53\x97\x92\xC9\x45\x22\x91\x48\x24\x12\x8D\x58\xBB\x3F\xFF\x39\x58\xF2\xFB\x4F\x1F\x77\x18\x09\xE9\x67\x47\x0B\x98\x09\x48\xB6\x12\x93\x99\xCA\xFD\x1A\x3C\xAD\xC9\x47\xB1\xC9\x4C\x5A\xCE\x84\x25\x6B\xF2\x90\x35\x81\xE9\xE1\x7F\xFD\x06\x36\x7D\xE0\xF2\x2A\xBE\x8C\xC9\x4C\xC6\x76\xC6\x2C\x7B\x3B\xEE\x8C\xC9\x4C\xA6\x49\xCC\x44\x24\x77\xE2\x92\x9D\xA6\x63\x71\x26\x33\xED\xB4\x27\x1A\xA5\x27\x33\x51\x93\x97\xFC\xD7\x3A\x99\xC9\x4C\xC1\xE4\xA5\x72\x7B\xF0\x8A\xDB\xB0\xFE\xAD\x57\xB9\x33\xE5\xED\xD7\x47\x79\x93\x99\xBA\x92\xF4\x78\x8A\x44\x22\x91\x48\x34\x62\x79\x13\x86\xA6\x53\xE6\x25\xE5\x26\x01\xEE\x64\x26\x58\xB0\x6A\x81\x6B\x6A\x32\x13\x50\x0F\xB5\x47\x56\x66\xDA\xF9\xC8\xA3\x75\x1C\xDE\x73\x9B\xD1\xA1\x76\x6E\xE2\x92\xD3\x63\xAB\x63\xF5\x80\x38\xFA\x1C\x69\x65\x9B\xEB\x1D\xAD\x42\x75\x9E\x1F\x45\xBC\x77\xB4\x2C\x93\x98\xAC\xE4\x4D\x66\xD2\xB6\x39\x9B\x7A\xB8\x7E\x87\x59\x9D\xA9\xA8\x1F\x11\x60\x56\x66\x0A\x9E\xC1\x1D\x40\x02\x9E\x22\x91\x48\x24\x12\x89\x3A\x10\x31\x89\xC9\x9E\xD8\x94\x33\x99\xC9\x7C\xEE\xB9\x10\xEB\xC0\x69\x05\xAB\x7D\x02\x0E\x7D\x58\xA5\xA0\x56\x2D\x00\x3B\x1B\x5F\x3B\xA3\x86\xDA\x4D\x15\xBD\xFC\x01\x78\x7A\xB1\x7A\x90\x5B\x83\x67\xB5\x2C\xA8\x37\x71\x89\x4A\xE3\x56\x66\xD2\xC0\xE9\x3C\x21\x01\x6B\xA8\xDD\x8A\xCF\x59\x99\xA9\x1A\x6A\x2F\xE3\x28\x88\x09\x54\xCC\x73\xA1\x1D\x48\xC0\x53\x24\x12\x89\x44\xA2\x09\xD6\xA6\x6F\x38\xEF\xDF\x5C\x33\xAE\x38\x06\x92\x42\x08\x9E\x86\x67\x28\x08\xED\x59\x49\x1E\x70\x02\x2E\x0C\xE9\xA1\x76\xBF\xF7\xD4\xF9\x9C\x80\x43\x78\xB1\x90\x3D\x9E\x4C\x7E\xA7\xA7\xD6\x86\x54\xFF\x59\xD3\x2A\xAD\xB2\xB7\xE9\xDA\xDB\xB1\xE4\x59\x47\x41\x83\x26\xD5\x3B\x1A\x9D\xCC\x54\x58\xAF\x54\x82\xC2\x23\xD7\xDE\x5E\x37\x1F\xB5\xD6\x3D\xE0\x4C\x66\x72\xDF\x55\xDA\x0B\xF6\x9B\x48\x6C\x60\xED\x40\x02\x9E\x22\x91\x48\x24\x12\x4D\xA8\x36\x7D\xE3\x66\xAC\xFF\x9B\xB7\xD8\x49\x03\xAF\x95\x3D\x19\x4A\x4C\x66\x22\x21\xD5\xEB\x1D\xF5\x9F\xC3\xB4\x01\x8F\x78\xA7\xA8\x51\xB4\x77\x54\x7F\xD6\xE0\x59\xD0\x43\xED\x3E\x4C\x3A\xB6\x23\xBD\xA3\xDA\x26\x80\xF5\x7F\xFE\xBF\x81\x4F\xFE\x2D\x96\x3C\xF3\x28\x76\xE8\x3F\x18\xAE\x27\xC0\x57\x01\xD8\x74\xFD\xF7\xF1\xC0\x9F\x5D\x50\x87\x61\xBD\x7B\xD4\xEF\x1D\x35\x69\x56\x6F\xB4\x79\xB5\x53\x64\xB2\x53\x57\x12\xF0\x14\x89\x44\x22\x91\x68\x02\x45\x40\xE7\x4D\x2B\x6F\xBE\xE6\xB2\x71\xC5\x33\x7C\xD9\x43\xF4\xD4\xB0\xBC\xFD\xD9\x82\x43\x58\xC3\xF8\xD4\xBB\x47\xFD\xD7\x01\xE5\xF4\x8E\xDA\x8F\x08\x38\xAF\x81\xF2\xF2\x01\x04\x78\x5A\x79\x9C\xCF\x5E\x6F\x2A\x80\xF5\xAF\xFA\x00\xF0\x89\xD7\x63\xC9\xB3\x7E\xC7\x6A\x06\x1F\x6E\x5D\x5B\xCA\x4B\xDB\x74\xFD\x6D\x58\x7F\xEA\xF9\x6E\x15\xC9\xA1\x73\x38\xC3\xF5\x66\x76\xBD\x5E\xA2\xB3\xCA\x67\xD8\xDD\x7E\x91\x7D\x87\xE8\x29\xE0\x29\x12\x89\x44\x22\xD1\xE0\x5A\x83\x6A\x29\xC1\x75\xEF\xFB\x70\x27\x06\xB7\x7D\xE1\x4B\xF6\xD7\x9B\xAA\xA5\x32\xB5\x6E\xD5\x1F\xB6\x7F\xEB\x96\x2C\x9F\xDB\xBF\x75\x8B\xFD\xF5\x56\x2E\x5F\x42\x8D\xEA\xB9\xE3\xAE\x7B\x00\x00\x9B\xFF\xF5\x6B\xD8\xF6\x9F\x77\x64\x3B\xC9\xB3\x7D\x77\x69\xFB\x2B\x5F\xC7\xB6\x9F\xFC\x9C\xC8\x41\xC3\xD2\xBA\x77\x5F\x98\xCC\xB7\xE3\xAE\x5F\x94\xB6\xAF\xFA\x0F\x6C\xFB\xF1\x5D\x6E\xBE\xC8\xB8\xF3\xBA\x73\x3F\x41\xDB\xB5\xC0\x71\xC7\xCF\xEF\x75\xCA\xAC\xFF\xCB\xF7\x63\xD3\xCB\x9F\x43\x1B\xA4\xDE\xA1\xE9\xA5\x6D\xBB\xFC\xDA\x20\xCB\xDA\xB7\x5E\x46\xC4\xEA\x96\xDB\x71\xC7\xFD\x00\x80\x87\xBF\xF0\x2D\x3C\xFA\xFD\x5F\x90\xB1\x9A\x24\xB7\xCE\x83\x3D\xEE\xA1\x94\xCA\xDA\x44\x22\x91\x48\x24\x12\xB1\x7A\x39\xAA\x27\x19\x87\xB0\xDD\xC8\xF8\xBC\xBD\xA5\xBD\xDB\x29\x63\x13\x50\xCF\xF9\xB6\xDD\xD7\xB1\xBD\x1B\x47\x14\xF7\xCB\x61\x29\x97\x23\x0D\x4F\x0A\x78\x8A\x44\x22\x91\x48\xD4\x89\x5E\x8B\xEE\x7F\xE4\x5F\x1B\xF1\x77\x1C\x9A\xC3\xE7\xED\x55\xB9\x51\xD6\xB3\x6B\xC0\x9A\x2B\xB6\xFF\xB8\x45\x5B\xA6\xCE\x93\x61\x1F\x1B\xED\xC7\xA8\x29\x78\x16\xB9\x50\x59\x14\x91\xBE\x65\x91\x48\x24\x12\x89\x44\x00\x30\x8B\x6A\x28\xBA\x03\xAD\x01\xB0\x35\x23\xDF\x1E\x00\x8E\xCE\xC8\x77\x2B\x80\x0D\x03\x45\x54\x2B\xB7\x9E\x77\x56\xDB\xAA\x6A\x4B\x49\x0F\xE3\xCE\x07\xDB\x5A\x83\x9E\x33\xFE\x79\x32\xCC\x63\x13\x9C\x8F\x4D\x3B\x27\xB3\xC1\x53\x24\x12\x89\x44\x22\x91\x48\x24\x1A\x44\xB2\x64\xA6\x48\x24\x12\x89\x44\x22\x91\x68\x24\x12\xF0\x14\x89\x44\x22\x91\x48\x24\x12\x8D\x44\x02\x9E\x22\x91\x48\x24\x12\x89\x44\xA2\x91\x48\xC0\x53\x24\x12\x89\x44\x22\x91\x48\x34\x12\x09\x78\x8A\x44\x22\x91\x48\x24\x12\x89\x46\x22\x01\x4F\x91\x48\x24\x12\x89\x44\x22\xD1\x48\x24\xE0\x29\x12\x89\x44\x22\x91\x48\x24\x1A\x89\x04\x3C\x45\x22\x91\x48\x24\x12\x89\x44\x23\xD1\xFF\x07\xBB\x78\x53\xCD\xCA\xDB\xA6\x2A\x00\x00\x00\x00\x49\x45\x4E\x44\xAE\x42\x60\x82"

local new, str = imgui.new, ffi.string

local ui_meta = {
    __index = function(self, v)
        if v == "switch" then
            local switch = function()
                if self.process and self.process:status() ~= "dead" then
                    return false -- // Предыдущая анимация ещё не завершилась!
                end
                self.timer = os.clock()
                self.state = not self.state

                self.process = lua_thread.create(function()
                    local bringFloatTo = function(from, to, start_time, duration)
                        local timer = os.clock() - start_time
                        if timer >= 0.00 and timer <= duration then
                            local count = timer / (duration / 100)
                            return count * ((to - from) / 100)
                        end
                        return (timer > duration) and to or from
                    end

                    while true do wait(0)
                        local a = bringFloatTo(0.00, 1.00, self.timer, self.duration)
                        self.alpha = self.state and a or 1.00 - a
                        if a == 1.00 then break end
                    end
                end)
                return true -- // Состояние окна изменено!
            end
            return switch
        end
 
        if v == "alpha" then
            return self.state and 1.00 or 0.00
        end
    end
}

local menu = { state = false, duration = 0.5 }
setmetatable(menu, ui_meta)

local moneyborder_check = imgui.new.bool(false)
local checkfix = imgui.new.bool(false)

local window_save = new.bool(false)

--[[ImGui Elements]]--
local navigation = {
    current = 1,
    list = { u8'Элементы худа', u8'Позиция элементов худа', u8'Игровые элементы', u8'Пресеты'}
}
local selected = {
    [1] = {[0] = 1}
}

local hudnav = {
    hudcurrent = 1,
    hudlist = { u8'ХП', u8'Броня', u8'Кислород', u8'Деньги', u8'Иконка оружия', u8'Патроны', u8'Звезды', u8'Радар'}
}
local hudselected = {
    [1] = {[0] = 1}
}

local HealthXSlider = imgui.new.float(cfg.hudpos.HealthX)
local HealthYSlider = imgui.new.float(cfg.hudpos.HealthY)
local HealthWSlider = imgui.new.float(cfg.hudpos.HealthW)
local HealthHSlider = imgui.new.float(cfg.hudpos.HealthH)

local ArmorXSlider = imgui.new.float(cfg.hudpos.ArmorX)
local ArmorYSlider = imgui.new.float(cfg.hudpos.ArmorY)
local ArmorWSlider = imgui.new.float(cfg.hudpos.ArmorW)
local ArmorHSlider = imgui.new.float(cfg.hudpos.ArmorH)

local BreathXSlider = imgui.new.float(cfg.hudpos.BreathX)
local BreathYSlider = imgui.new.float(cfg.hudpos.BreathY)
local BreathWSlider = imgui.new.float(cfg.hudpos.BreathW)
local BreathHSlider = imgui.new.float(cfg.hudpos.BreathH)

local MoneyXSlider = imgui.new.float(cfg.hudpos.MoneyX)
local MoneyYSlider = imgui.new.float(cfg.hudpos.MoneyY)
local MoneyWSlider = imgui.new.float(cfg.hudpos.MoneyW)
local MoneyHSlider = imgui.new.float(cfg.hudpos.MoneyH)

local WeaponIconXSlider = imgui.new.float(cfg.hudpos.WeaponIconX)
local WeaponIconYSlider = imgui.new.float(cfg.hudpos.WeaponIconY)

local WeaponAmmoXSlider = imgui.new.float(cfg.hudpos.WeaponAmmoX)
local WeaponAmmoYSlider = imgui.new.float(cfg.hudpos.WeaponAmmoY)
local WeaponAmmoWSlider = imgui.new.float(cfg.hudpos.WeaponAmmoW)
local WeaponAmmoHSlider = imgui.new.float(cfg.hudpos.WeaponAmmoH)

local WantedXSlider = imgui.new.float(cfg.hudpos.WantedX)
local WantedYSlider = imgui.new.float(cfg.hudpos.WantedY)
local WantedWSlider = imgui.new.float(cfg.hudpos.WantedW)
local WantedHSlider = imgui.new.float(cfg.hudpos.WantedH)

local RadarXSlider = imgui.new.float(cfg.hudpos.RadarX)
local RadarYSlider = imgui.new.float(cfg.hudpos.RadarY)
local RadarWSlider = imgui.new.float(cfg.hudpos.RadarW)
local RadarHSlider = imgui.new.float(cfg.hudpos.RadarH)

local MENU_COLORS = {
    colors = {
        back =      {0.26, 0.98, 0.85, 1.0},
        frame =     {0.26, 0.98, 0.85, 1.0},
        elements =  {0.26, 0.98, 0.85, 1.0},
        text =      {1, 1, 1, 1}
    }
}

local COLORS = {
    back =      imgui.new.float[4](MENU_COLORS.colors.back[1], MENU_COLORS.colors.back[2], MENU_COLORS.colors.back[3], MENU_COLORS.colors.back[4]),
    frame =     imgui.new.float[4](MENU_COLORS.colors.frame[1], MENU_COLORS.colors.frame[2], MENU_COLORS.colors.frame[3], MENU_COLORS.colors.frame[4]),
    elements =  imgui.new.float[4](MENU_COLORS.colors.elements[1], MENU_COLORS.colors.elements[2], MENU_COLORS.colors.elements[3], MENU_COLORS.colors.elements[4]),
    text =      imgui.new.float[4](MENU_COLORS.colors.text[1], MENU_COLORS.colors.text[2], MENU_COLORS.colors.text[3], MENU_COLORS.colors.text[4])
}

function ColorFloatToVec(col)
    return imgui.ImVec4(col[0], col[1], col[2], col[3])
end

function main()
    if not isSampfuncsLoaded() or not isSampLoaded() then return end
    while not isSampAvailable() do wait(100) end 

    if not doesDirectoryExist(getWorkingDirectory()..'\\config') then createDirectory(getWorkingDirectory()..'\\config') end
    if not doesFileExist(getWorkingDirectory()..'\\config\\GameEditor.ini') then inicfg.save(cfg, 'GameEditor.ini') end
    if not doesFileExist(list_file) then
        jsonSave({{name = "Стандартный пресет",HEALTH = 0xFF1712B5, MONEY = 0xFF286833, ARMOUR = 0xFFE2E2E2, OXYGEN = 0xFFF7DAC0, WANTED = 0xFF2092C5, CHARHP = 0xFF1712B5, CHARARM = 0xFFE2E2E2, RADAR = 0xFF000000, MARKER = 0xFFFF0000, HEADLIGHT = 0xFF404040, LOGOARIZONA = 0xFFFF5050, HUNGERARIZONA = 0xFF608552, CROSSHAIR = 0xFFFFFFFF, MONEYBORDER = 2, TRIANGLECOLOR = 0x00FFFFFF, HEALTHR = 170, HEALTHG = 29, HEALTHB = 36, MONEYR = 52, MONEYG = 101, MONEYB = 36, ARMOURR = 225, ARMOURG = 226, ARMOURB = 226, OXYGENR = 172, OXYGENG = 203, OXYGENB = 238, WANTEDR = 197, WANTEDG = 146, WANTEDB = 32, CHARHPR = 170, CHARHPG = 29, CHARHPB = 36, CHARARMR = 170, CHARARMG = 29, CHARARMB = 36, RADARR = 0, RADARG = 0, RADARB = 0, MARKERR = 255, MARKERG = 0, MARKERB = 0, HEADLIGHTR = 255, HEADLIGHTG = 255, HEADLIGHTB = 255, LOGOARIZONAR = 188, LOGOARIZONAG = 52, LOGOARIZONAB = 54, HUNGERARIZONAR = 96, HUNGERARIZONAG = 133, HUNGERARIZONAB = 82, CROSSHAIRR = 255, CROSSHAIRG = 255, CROSSHAIRB = 255, CHECKBOXBORDER = false, CHECKBOXFIX = false, theme_id = 1, CUSTOMSTYLER = 255, CUSTOMSTYLEG = 255, CUSTOMSTYLEB = 255, TRIANGLECOLORR = 255, TRIANGLECOLORG = 255, TRIANGLECOLORB = 0, HealthX = 141.0, HealthY = 77.0, HealthW = 109.0, HealthH = 9.0, ArmorX = 94.0, ArmorY = 48.0, ArmorW = 62.0, ArmorH = 9.0, BreathX = 94.0, BreathY = 62.0, BreathW = 62.0, BreathH = 9.0, MoneyX = 32.0, MoneyY = 89.0, MoneyW = 0.55, MoneyH = 1.1, WeaponIconX = 32.0, WeaponIconY = 20.0, WeaponAmmoX = 0.17343046, WeaponAmmoY = 20.0, WeaponAmmoW = 0.3, WeaponAmmoH = 0.7, WantedX = 29.0, WantedY = 114.0, WantedW = 0.605, WantedH = 1.21, RadarX = 40.0, RadarY = 104.0, RadarW = 94.0, RadarH = 74.0}})
    end
    list = jsonRead()


    sampRegisterChatCommand("ge", menu.switch)

    memory.setint32(0xBAB230, cfg.config.MONEY, true)
    memory.setint32(0xBAB22C, cfg.config.HEALTH, true)
    memory.setint32(0xBAB23C, cfg.config.ARMOUR, true)
    memory.setint32(0xBAB238, cfg.config.OXYGEN, true)
    memory.setint32(0xBAB244, cfg.config.WANTED, true)
    memory.setint8(0x58F58D, cfg.config.MONEYBORDER, true)
    changeRadarColor(cfg.config.RADAR)
    Markercolor(cfg.config.MARKER)
    editVehicleLightsColor(cfg.config.HEADLIGHT)        
    changeCrosshairColor(cfg.config.CROSSHAIR)
    set_triangle_color(cfg.config.TRIANGLECOLOR)
    setHealthColor(cfg.config.CHARHP, cfg.config.CHARHP - 0xFF505050)
    setArmourColor(cfg.config.CHARARM, cfg.config.CHARARM - 0xFF505050)
    if cfg.config.CHECKBOXFIX == true then
        memory.fill(0x058E280, 0xEB, 1, true)
    else
        memory.fill(0x058E280, 0x7A, 1, true)
    end
    local RadarX = ffi.new('float[1]')
    local RadarY = ffi.new('float[1]')
    local RadarH = ffi.new('float[1]')
    local RadarW = ffi.new('float[1]')
    local HealthX = ffi.new('float[1]')
    local HealthY = ffi.new('float[1]')
    local HealthH = ffi.new('float[1]')
    local HealthW = ffi.new('float[1]')
    local ArmorX = ffi.new('float[1]')
    local ArmorY = ffi.new('float[1]')
    local ArmorH = ffi.new('float[1]')
    local ArmorW = ffi.new('float[1]')
    local BreathX = ffi.new('float[1]')
    local BreathY = ffi.new('float[1]')
    local BreathH = ffi.new('float[1]')
    local BreathW = ffi.new('float[1]')
    local MoneyX = ffi.new('float[1]')
    local MoneyY = ffi.new('float[1]')
    local MoneyH = ffi.new('float[1]')
    local MoneyW = ffi.new('float[1]')
    local WeaponIconX = ffi.new('float[1]')
    local WeaponIconY = ffi.new('float[1]')
    local WeaponIconW = ffi.new('float[1]')
    local WeaponAmmoX = ffi.new('float[1]')
    local WeaponAmmoY = ffi.new('float[1]')
    local WeaponAmmoH = ffi.new('float[1]')
    local WeaponAmmoW = ffi.new('float[1]')
    local WantedX = ffi.new('float[1]')
    local WantedY = ffi.new('float[1]')
    local WantedH = ffi.new('float[1]')
    local WantedW = ffi.new('float[1]')


    while true do
        wait(0)
        name_server = sampGetCurrentServerName()
        letSizeX, letSizeY, color = sampTextdrawGetLetterSizeAndColor(644)
        letSizeXx, letSizeYy, colorr = sampTextdrawGetLetterSizeAndColor(645)
        box, hungercolor, hungerX, hungerY = sampTextdrawGetBoxEnabledColorAndSize(2061)
        sampTextdrawSetLetterSizeAndColor(644, letSizeX, letSizeY, cfg.config.LOGO)
        sampTextdrawSetLetterSizeAndColor(645, letSizeXx, letSizeYy, cfg.config.LOGO)
        sampTextdrawSetBoxColorAndSize(2061, box, cfg.config.HUNGERARIZONA, hungerX, hungerY)

        ArmorW[0] = cfg.hudpos.ArmorW
        ArmorH[0] = cfg.hudpos.ArmorH
        ArmorX[0] = cfg.hudpos.ArmorX
        ArmorY[0] = cfg.hudpos.ArmorY

        ffi.cast('float**', 0x58915D)[0] = ArmorW
        ffi.cast('float**', 0x589146)[0] = ArmorH
        ffi.cast('float**', 0x58EF59)[0] = ArmorX
        ffi.cast('float**', 0x58EF3A)[0] = ArmorY

        BreathW[0] = cfg.hudpos.BreathW
        BreathH[0] = cfg.hudpos.BreathH
        BreathX[0] = cfg.hudpos.BreathX
        BreathY[0] = cfg.hudpos.BreathY

        ffi.cast('float**', 0x589235)[0] = BreathW
        ffi.cast('float**', 0x58921E)[0] = BreathH
        ffi.cast('float**', 0x58F11F)[0] = BreathX
        ffi.cast('float**', 0x58F100)[0] = BreathY

        MoneyW[0] = cfg.hudpos.MoneyW
        MoneyH[0] = cfg.hudpos.MoneyH
        MoneyX[0] = cfg.hudpos.MoneyX
        MoneyY[0] = cfg.hudpos.MoneyY

        ffi.cast('float**', 0x58F564)[0] = MoneyW
        ffi.cast('float**', 0x58F54E)[0] = MoneyH
        ffi.cast('float**', 0x58F5FC)[0] = MoneyX
        ffi.cast('float**', 0x58F5DC)[0] = MoneyY

        WeaponIconX[0] = cfg.hudpos.WeaponIconX
        WeaponIconY[0] = cfg.hudpos.WeaponIconY

        ffi.cast('float**', 0x58F927)[0] = WeaponIconX
        ffi.cast('float**', 0x58F913)[0] = WeaponIconY

        WeaponAmmoW[0] = cfg.hudpos.WeaponAmmoW
        WeaponAmmoH[0] = cfg.hudpos.WeaponAmmoH
        WeaponAmmoX[0] = cfg.hudpos.WeaponAmmoX
        WeaponAmmoY[0] = cfg.hudpos.WeaponAmmoY

        ffi.cast('float**', 0x5894CD)[0] = WeaponAmmoW
        ffi.cast('float**', 0x5894B7)[0] = WeaponAmmoH
        ffi.cast('float**', 0x58F9F7)[0] = WeaponAmmoX
        ffi.cast('float**', 0x58F9DC)[0] = WeaponAmmoY

        WantedW[0] = cfg.hudpos.WantedW
        WantedH[0] = cfg.hudpos.WantedH
        WantedX[0] = cfg.hudpos.WantedX
        WantedY[0] = cfg.hudpos.WantedY

        ffi.cast('float**', 0x58DCC0)[0] = WantedW
        ffi.cast('float**', 0x58DCAA)[0] = WantedH
        ffi.cast('float**', 0x58DD0F)[0] = WantedX
        ffi.cast('float**', 0x58DDFC)[0] = WantedY

        HealthW[0] = cfg.hudpos.HealthW
        HealthH[0] = cfg.hudpos.HealthH
        HealthX[0] = cfg.hudpos.HealthX
        HealthY[0] = cfg.hudpos.HealthY

        ffi.cast('float**', 0x5892D8)[0] = HealthW
        ffi.cast('float**', 0x589358)[0] = HealthH
        ffi.cast('float**', 0x58EE87)[0] = HealthX
        ffi.cast('float**', 0x58EE68)[0] = HealthY

        RadarW[0] = cfg.hudpos.RadarW
        RadarH[0] = cfg.hudpos.RadarH
        RadarX[0] = cfg.hudpos.RadarX
        RadarY[0] = cfg.hudpos.RadarY

        ffi.cast('float**', 0x58A79B)[0] = RadarX
        ffi.cast('float**', 0x5834D4)[0] = RadarX
        ffi.cast('float**', 0x58A836)[0] = RadarX
        ffi.cast('float**', 0x58A8E9)[0] = RadarX
        ffi.cast('float**', 0x58A98A)[0] = RadarX
        ffi.cast('float**', 0x58A469)[0] = RadarX
        ffi.cast('float**', 0x58A5E2)[0] = RadarX
        ffi.cast('float**', 0x58A6E6)[0] = RadarX

        ffi.cast('float**', 0x58A7C7)[0] = RadarY
        ffi.cast('float**', 0x58A868)[0] = RadarY
        ffi.cast('float**', 0x58A913)[0] = RadarY
        ffi.cast('float**', 0x58A9C7)[0] = RadarY
        ffi.cast('float**', 0x583500)[0] = RadarY
        ffi.cast('float**', 0x58A499)[0] = RadarY
        ffi.cast('float**', 0x58A60E)[0] = RadarY
        ffi.cast('float**', 0x58A71E)[0] = RadarY

        ffi.cast('float**', 0x58A47D)[0] = RadarH
        ffi.cast('float**', 0x58A632)[0] = RadarH 
        ffi.cast('float**', 0x58A6AB)[0] = RadarH 
        ffi.cast('float**', 0x58A70E)[0] = RadarH 
        ffi.cast('float**', 0x58A801)[0] = RadarH 
        ffi.cast('float**', 0x58A8AB)[0] = RadarH 
        ffi.cast('float**', 0x58A921)[0] = RadarH 
        ffi.cast('float**', 0x58A9D5)[0] = RadarH 
        ffi.cast('float**', 0x5834F6)[0] = RadarH 

        ffi.cast('float**', 0x5834C2)[0] = RadarW
        ffi.cast('float**', 0x58A449)[0] = RadarW 
        ffi.cast('float**', 0x58A7E9)[0] = RadarW 
        ffi.cast('float**', 0x58A840)[0] = RadarW 
        ffi.cast('float**', 0x58A943)[0] = RadarW 
        ffi.cast('float**', 0x58A99D)[0] = RadarW 
    end
end

function setHealthColor(hpHigh, hpLow)
     local samp = getModuleHandle("samp.dll")
     memory.setuint32(samp + 0x68B0C, hpHigh, true)
     memory.setuint32(samp + 0x68B33, hpLow, true)
end

function setArmourColor(armourHigh, armourLow)
     local samp = getModuleHandle("samp.dll")
     memory.setuint32(samp + 0x68DD5, armourHigh, true)
     memory.setuint32(samp + 0x68E00, armourLow, true)
end

function light_blue_theme()
    imgui.SwitchContext()
    local style = imgui.GetStyle()
    local colors = style.Colors
    local clr = imgui.Col
    local ImVec4 = imgui.ImVec4

    imgui.GetStyle().WindowPadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().FramePadding = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemSpacing = imgui.ImVec2(5, 5)
    imgui.GetStyle().ItemInnerSpacing = imgui.ImVec2(2, 2)
    imgui.GetStyle().TouchExtraPadding = imgui.ImVec2(0, 0)
    imgui.GetStyle().IndentSpacing = 0
    imgui.GetStyle().ScrollbarSize = 10
    imgui.GetStyle().GrabMinSize = 10

    --==[ BORDER ]==--
    imgui.GetStyle().WindowBorderSize = 1
    imgui.GetStyle().ChildBorderSize = 1
    imgui.GetStyle().PopupBorderSize = 1
    imgui.GetStyle().FrameBorderSize = 1
    imgui.GetStyle().TabBorderSize = 1

    --==[ ROUNDING ]==--
    imgui.GetStyle().WindowRounding = 8
    imgui.GetStyle().ChildRounding = 8
    imgui.GetStyle().FrameRounding = 8
    imgui.GetStyle().PopupRounding = 8
    imgui.GetStyle().ScrollbarRounding = 8
    imgui.GetStyle().GrabRounding = 8
    imgui.GetStyle().TabRounding = 8

    colors[clr.FrameBg]                = ImVec4(0.16, 0.48, 0.42, 0.54)
    colors[clr.FrameBgHovered]         = ImVec4(0.26, 0.98, 0.85, 0.40)
    colors[clr.FrameBgActive]          = ImVec4(0.26, 0.98, 0.85, 0.67)
    colors[clr.TitleBg]                = ImVec4(0.04, 0.04, 0.04, 1.00)
    colors[clr.TitleBgActive]          = ImVec4(0.16, 0.48, 0.42, 1.00)
    colors[clr.TitleBgCollapsed]       = ImVec4(0.00, 0.00, 0.00, 0.51)
    colors[clr.CheckMark]              = ImVec4(0.26, 0.98, 0.85, 1.00)
    colors[clr.SliderGrab]             = ImVec4(0.24, 0.88, 0.77, 1.00)
    colors[clr.SliderGrabActive]       = ImVec4(0.26, 0.98, 0.85, 1.00)
    colors[clr.Button]                 = ImVec4(0.26, 0.98, 0.85, 0.40)
    colors[clr.ButtonHovered]          = ImVec4(0.26, 0.98, 0.85, 1.00)
    colors[clr.ButtonActive]           = ImVec4(0.06, 0.98, 0.82, 1.00)
    colors[clr.Header]                 = ImVec4(0.26, 0.98, 0.85, 0.31)
    colors[clr.HeaderHovered]          = ImVec4(0.26, 0.98, 0.85, 0.80)
    colors[clr.HeaderActive]           = ImVec4(0.26, 0.98, 0.85, 1.00)
    colors[clr.Separator]              = colors[clr.Border]
    colors[clr.SeparatorHovered]       = ImVec4(0.10, 0.75, 0.63, 0.78)
    colors[clr.SeparatorActive]        = ImVec4(0.10, 0.75, 0.63, 1.00)
    colors[clr.ResizeGrip]             = ImVec4(0.26, 0.98, 0.85, 0.25)
    colors[clr.ResizeGripHovered]      = ImVec4(0.26, 0.98, 0.85, 0.67)
    colors[clr.ResizeGripActive]       = ImVec4(0.26, 0.98, 0.85, 0.95)
    colors[clr.PlotLines]              = ImVec4(0.61, 0.61, 0.61, 1.00)
    colors[clr.PlotLinesHovered]       = ImVec4(1.00, 0.81, 0.35, 1.00)
    colors[clr.TextSelectedBg]         = ImVec4(0.26, 0.98, 0.85, 0.35)
    colors[clr.Text]                   = ImVec4(1.00, 1.00, 1.00, 1.00)
    colors[clr.TextDisabled]           = ImVec4(0.50, 0.50, 0.50, 1.00)
    colors[clr.WindowBg]               = ImVec4(0.06, 0.06, 0.06, 0.94)
    colors[clr.ChildBg]          = ImVec4(1.00, 1.00, 1.00, 0.00)
    colors[clr.PopupBg]                = ImVec4(0.08, 0.08, 0.08, 0.94)
    colors[clr.Border]                 = ImVec4(0.43, 0.43, 0.50, 0.50)
    colors[clr.BorderShadow]           = ImVec4(0.00, 0.00, 0.00, 0.00)
    colors[clr.MenuBarBg]              = ImVec4(0.14, 0.14, 0.14, 1.00)
    colors[clr.ScrollbarBg]            = ImVec4(0.02, 0.02, 0.02, 0.53)
    colors[clr.ScrollbarGrab]          = ImVec4(0.31, 0.31, 0.31, 1.00)
    colors[clr.ScrollbarGrabHovered]   = ImVec4(0.41, 0.41, 0.41, 1.00)
    colors[clr.ScrollbarGrabActive]    = ImVec4(0.51, 0.51, 0.51, 1.00)
    colors[clr.PlotHistogram]          = ImVec4(0.90, 0.70, 0.00, 1.00)
    colors[clr.PlotHistogramHovered]   = ImVec4(1.00, 0.60, 0.00, 1.00)
end

function join_argb(a, b, g, r)
    local argb = b  -- b
    argb = bit.bor(argb, bit.lshift(g, 8))  -- g
    argb = bit.bor(argb, bit.lshift(r, 16)) -- r
    argb = bit.bor(argb, bit.lshift(a, 24)) -- a
    return argb
end

function set_triangle_color(rgb) 
    local r = bit.band(bit.rshift(rgb, 24), 0xFF)
    local g = bit.band(bit.rshift(rgb, 16), 0xFF)
    local b = bit.band(bit.rshift(rgb, 8), 0xFF)
    local bytes = "90909090909090909090909090C744240E00000000909090909090909090909090909090C744240F0000000090B300" 
    memory.hex2bin(bytes, 0x60BB41, bytes:len()/2) 
    memory.setint8(0x60BB52, r, false) 
    memory.setint8(0x60BB69, g, false) 
    memory.setint8(0x60BB6F, b, false) 
end

function changeRadarColor(rgba)
    local a = bit.band(bit.rshift(rgba, 24), 0xFF)
    local b = bit.band(bit.rshift(rgba, 16), 0xFF)
    local g = bit.band(bit.rshift(rgba, 8), 0xFF)
    local r = bit.band(rgba, 0xFF)
    memory.write(0x58A798, r, 1, true)
    memory.write(0x58A89A, r, 1, true)
    memory.write(0x58A8EE, r, 1, true)
    memory.write(0x58A9A2, r, 1, true)
    memory.write(0x58A790, g, 1, true)
    memory.write(0x58A896, g, 1, true)
    memory.write(0x58A8E6, g, 1, true)
    memory.write(0x58A99A, g, 1, true)
    memory.write(0x58A78E, b, 1, true)
    memory.write(0x58A894, b, 1, true)
    memory.write(0x58A8DE, b, 1, true)
    memory.write(0x58A996, b, 1, true)
    memory.write(0x58A789, a, 1, true)
    memory.write(0x58A88F, a, 1, true)
    memory.write(0x58A8D9, a, 1, true)
    memory.write(0x58A98F, a, 1, true)
end

function editVehicleLightsColor(rgb)
    local b = bit.band(bit.rshift(rgb, 16), 0xFF)
    local g = bit.band(bit.rshift(rgb, 8), 0xFF)
    local r = bit.band(rgb, 0xFF)
    memory.setuint8(0x6E1689, r, true)
    memory.setuint8(0x6E1687, g, true)
    memory.setuint8(0x6E1685, b, true)
    memory.setuint8(0x6E1560, r, true)
    memory.setuint8(0x6E155E, g, true)
    memory.setuint8(0x6E1556, b, true)
end

function Markercolor(rgba)
    local alpha = bit.band(bit.rshift(rgba, 24), 0xFF)
    local blue = bit.band(bit.rshift(rgba, 16), 0xFF)
    local green = bit.band(bit.rshift(rgba, 8), 0xFF)
    local red = bit.band(rgba, 0xFF)
    memory.write(7392527, red, 4, true)
    memory.write(7392525, green, 1, true)
    memory.write(7392523, blue, 1, true)
    memory.write(7392518, alpha, 4, true)
    memory.write(7392604, red, 4, true)
    memory.write(7392602, green, 1, true)
    memory.write(7392600, blue, 1, true)
    memory.write(7392595, alpha, 4, true)
    memory.write(7392687, red, 4, true)
    memory.write(7392685, green, 1, true)
    memory.write(7392683, blue, 1, true)
    memory.write(7392678, alpha, 4, true)
    memory.write(0x48110F, red, 4, true)
    memory.write(0x48110B, green, 1, true)
    memory.write(0x48110D, blue, 1, true)
    memory.write(0x481106, alpha, 4, true)
end

function changeCrosshairColor(rgba)
    local a = bit.band(bit.rshift(rgba, 24), 0xFF)
    local b = bit.band(bit.rshift(rgba, 16), 0xFF)
    local g = bit.band(bit.rshift(rgba, 8), 0xFF)
    local r = bit.band(rgba, 0xFF)
    memory.setuint8(0x58E301, r, true)
    memory.setuint8(0x58E3DA, r, true)
    memory.setuint8(0x58E433, r, true)
    memory.setuint8(0x58E47C, r, true)
    memory.setuint8(0x58E2F6, g, true)
    memory.setuint8(0x58E3D1, g, true)
    memory.setuint8(0x58E42A, g, true)
    memory.setuint8(0x58E473, g, true)
    memory.setuint8(0x58E2F1, b, true)
    memory.setuint8(0x58E3C8, b, true)
    memory.setuint8(0x58E425, b, true)
    memory.setuint8(0x58E466, b, true)
    memory.setuint8(0x58E2EC, a, true)
    memory.setuint8(0x58E3BF, a, true)
    memory.setuint8(0x58E420, a, true)
    memory.setuint8(0x58E461, a, true)
end

HeaderButton = function(bool, str_id)
    local DL = imgui.GetWindowDrawList()
    local ToU32 = imgui.ColorConvertFloat4ToU32
    local result = false
    local label = string.gsub(str_id, "##.*$", "")
    local duration = { 1.5, 1.3 }
    local cols = {
        idle = imgui.GetStyle().Colors[imgui.Col.TextDisabled],
        hovr = imgui.GetStyle().Colors[imgui.Col.Text],
        slct = imgui.GetStyle().Colors[imgui.Col.ButtonActive]
    }

    if not AI_HEADERBUT then AI_HEADERBUT = {} end
     if not AI_HEADERBUT[str_id] then
        AI_HEADERBUT[str_id] = {
            color = bool and cols.slct or cols.idle,
            clock = os.clock() + duration[1],
            h = {
                state = bool,
                alpha = bool and 1.00 or 0.00,
                clock = os.clock() + duration[2],
            }
        }
    end
    local pool = AI_HEADERBUT[str_id]

    local degrade = function(before, after, start_time, duration)
        local result = before
        local timer = os.clock() - start_time
        if timer >= 0.00 then
            local offs = {
                x = after.x - before.x,
                y = after.y - before.y,
                z = after.z - before.z,
                w = after.w - before.w
            }

            result.x = result.x + ( (offs.x / duration) * timer )
            result.y = result.y + ( (offs.y / duration) * timer )
            result.z = result.z + ( (offs.z / duration) * timer )
            result.w = result.w + ( (offs.w / duration) * timer )
        end
        return result
    end

    local pushFloatTo = function(p1, p2, clock, duration)
        local result = p1
        local timer = os.clock() - clock
        if timer >= 0.00 then
            local offs = p2 - p1
            result = result + ((offs / duration) * timer)
        end
        return result
    end

    local set_alpha = function(color, alpha)
        return imgui.ImVec4(color.x, color.y, color.z, alpha or 1.00)
    end

    imgui.BeginGroup()
        local pos = imgui.GetCursorPos()
        local p = imgui.GetCursorScreenPos()
      
        imgui.TextColored(pool.color, label)
        local s = imgui.GetItemRectSize()
        local hovered = imgui.IsItemHovered()
        local clicked = imgui.IsItemClicked()
      
        if pool.h.state ~= hovered and not bool then
            pool.h.state = hovered
            pool.h.clock = os.clock()
        end
      
        if clicked then
            pool.clock = os.clock()
            result = true
        end

        if os.clock() - pool.clock <= duration[1] then
            pool.color = degrade(
                imgui.ImVec4(pool.color),
                bool and cols.slct or (hovered and cols.hovr or cols.idle),
                pool.clock,
                duration[1]
            )
        else
            pool.color = bool and cols.slct or (hovered and cols.hovr or cols.idle)
        end

        if pool.h.clock ~= nil then
            if os.clock() - pool.h.clock <= duration[2] then
                pool.h.alpha = pushFloatTo(
                    pool.h.alpha,
                    pool.h.state and 1.00 or 0.00,
                    pool.h.clock,
                    duration[2]
                )
            else
                pool.h.alpha = pool.h.state and 1.00 or 0.00
                if not pool.h.state then
                    pool.h.clock = nil
                end
            end

            local max = s.x / 2
            local Y = p.y + s.y + 3
            local mid = p.x + max

            DL:AddLine(imgui.ImVec2(mid, Y), imgui.ImVec2(mid + (max * pool.h.alpha), Y), ToU32(set_alpha(pool.color, pool.h.alpha)), 3)
            DL:AddLine(imgui.ImVec2(mid, Y), imgui.ImVec2(mid - (max * pool.h.alpha), Y), ToU32(set_alpha(pool.color, pool.h.alpha)), 3)
        end

    imgui.EndGroup()
    return result
end

imgui.OnInitialize(function()
    imgui.GetIO().IniFilename = nil
    light_blue_theme()
    imgExit = imgui.CreateTextureFromFileInMemory(imgui.new('const char*', exit_data), #exit_data)
end)

local color = imgui.new.float[3](cfg.colorimgui.MONEYR/255, cfg.colorimgui.MONEYG/255, cfg.colorimgui.MONEYB/255)
local color1 = imgui.new.float[3](cfg.colorimgui.HEALTHR/255, cfg.colorimgui.HEALTHG/255, cfg.colorimgui.HEALTHB/255)
local color2 = imgui.new.float[3](cfg.colorimgui.ARMOURR/255, cfg.colorimgui.ARMOURG/255, cfg.colorimgui.ARMOURB/255)
local color3 = imgui.new.float[3](cfg.colorimgui.OXYGENR/255, cfg.colorimgui.OXYGENG/255, cfg.colorimgui.OXYGENB/255)
local color4 = imgui.new.float[3](cfg.colorimgui.WANTEDR/255, cfg.colorimgui.WANTEDG/255, cfg.colorimgui.WANTEDB/255)
local color5 = imgui.new.float[3](cfg.colorimgui.CHARHPR/255, cfg.colorimgui.CHARHPG/255, cfg.colorimgui.CHARHPB/255)
local color6 = imgui.new.float[3](cfg.colorimgui.RADARR/255, cfg.colorimgui.RADARG/255, cfg.colorimgui.RADARB/255)
local color7 = imgui.new.float[3](cfg.colorimgui.MARKERR/255, cfg.colorimgui.MARKERG/255, cfg.colorimgui.MARKERB/255)
local color8 = imgui.new.float[3](cfg.colorimgui.HEADLIGHTR/255, cfg.colorimgui.HEADLIGHTG/255, cfg.colorimgui.HEADLIGHTB/255)
local color9 = imgui.new.float[3](cfg.colorimgui.LOGOARIZONAR/255, cfg.colorimgui.LOGOARIZONAG/255, cfg.colorimgui.LOGOARIZONAB/255)
local color10 = imgui.new.float[3](cfg.colorimgui.CROSSHAIRR/255, cfg.colorimgui.CROSSHAIRG/255, cfg.colorimgui.CROSSHAIRB/255)
local color11 = imgui.new.float[3](cfg.colorimgui.HUNGERARIZONAR/255, cfg.colorimgui.HUNGERARIZONAG/255, cfg.colorimgui.HUNGERARIZONAB/255)
local color12 = imgui.new.float[3](cfg.colorimgui.CUSTOMSTYLER/255, cfg.colorimgui.CUSTOMSTYLEG/255, cfg.colorimgui.CUSTOMSTYLEB/255)
local color13 = imgui.new.float[3](cfg.colorimgui.TRIANGLECOLORR/255, cfg.colorimgui.TRIANGLECOLORG/255, cfg.colorimgui.TRIANGLECOLORB/255)
local color14 = imgui.new.float[3](cfg.colorimgui.CHARARMR/255, cfg.colorimgui.CHARARMG/255, cfg.colorimgui.CHARARMB/255)

imgui.CloseButton = function(size, thickness, textColor, color, colorHovered, colorClicked)
    local col = {
        text = textColor or imgui.GetStyle().Colors[imgui.Col.Button],
        color = color or imgui.GetStyle().Colors[imgui.Col.Button],
        colorHovered = colorHovered or imgui.GetStyle().Colors[imgui.Col.ButtonHovered],
        colorClicked = colorClicked or imgui.GetStyle().Colors[imgui.Col.ButtonActive],
    }
    local c = imgui.GetCursorPos()
    local p = imgui.GetCursorScreenPos()
    local DL = imgui.GetWindowDrawList()
    local tx = imgui.CalcTextSize('X')
    local curX, curY = getCursorPos()
    DL:AddCircle(p, size, imgui.GetColorU32Vec4(col.color), 100, thickness)
    if curX > p.x - size and curX < p.x + size then
        if curY > p.y - size and curY < p.y + size then
            DL:AddLine(imgui.ImVec2(p.x - size + thickness, p.y - size + thickness), imgui.ImVec2(p.x + size - thickness, p.y + size - thickness), imgui.GetColorU32Vec4(col.color), thickness)
            DL:AddLine(imgui.ImVec2(p.x + size - thickness, p.y - size + thickness), imgui.ImVec2(p.x - size + thickness, p.y + size - thickness), imgui.GetColorU32Vec4(col.color), thickness)
        end
    end
    imgui.SetCursorPos(imgui.ImVec2(c.x - size, c.y - size))
    return imgui.InvisibleButton('CLOSEBUTTONBEBRA', imgui.ImVec2(size * 2, size * 2))
end

local preset_add_name = imgui.new.char[128]()

local main_frame = imgui.OnFrame(
    function() return menu.alpha > 0.00 end, -- Указываем здесь данное условие, тем самым рендеря окно только в том случае, если его прозрачность больше нуля
    function(self)
        self.HideCursor = not menu.state -- // Курсор будет убираться на моменте, когда окно начинает исчезать
        imgui.PushStyleVarFloat(imgui.StyleVar.Alpha, menu.alpha)
        imgui.SetNextWindowPos(imgui.ImVec2(sw / 2, sh / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
        imgui.SetNextWindowSize(imgui.ImVec2(905, 520), imgui.Cond.FirstUseEver)
        imgui.Begin("GameEditor", _, imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
        imgui.SetCursorPosX(imgui.GetWindowWidth() / 3.5)
        imgui.Image(imgExit, imgui.ImVec2(400, 80))
        imgui.SetCursorPosX(imgui.GetWindowWidth() / 4)
        for i, title in ipairs(navigation.list) do
            if HeaderButton(navigation.current == i, title) then
                navigation.current = i
            end
            if i ~= #navigation.list then
                imgui.SameLine(nil, 30)
            end
        end

        imgui.BeginChild("main", imgui.ImVec2(890, 370), true)

            if navigation.current == 1 then
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет денег")).x)/2)
                imgui.Text(u8"Цвет денег")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##1", color) then
                    local clr = join_argb(0, color[0] * 255, color[1] * 255, color[2] * 255)
                    local r,g,b = color[0] * 255, color[1] * 255, color[2] * 255
                    memory.setint32(0xBAB230, ("0xFF%06X"):format(clr), true)

                    cfg.config.MONEY = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.MONEYR = r
                    cfg.colorimgui.MONEYG = g
                    cfg.colorimgui.MONEYB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет полоски жизни")).x)/2)
                imgui.Text(u8"Цвет полоски жизни")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##2", color1) then
                    local clr = join_argb(0, color1[0] * 255, color1[1] * 255, color1[2] * 255)
                    local r,g,b = color1[0] * 255, color1[1] * 255, color1[2] * 255
                    memory.setint32(0xBAB22C, ("0xFF%06X"):format(clr), true)

                    cfg.config.HEALTH = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.HEALTHR = r
                    cfg.colorimgui.HEALTHG = g
                    cfg.colorimgui.HEALTHB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет полоски брони")).x)/2)
                imgui.Text(u8"Цвет полоски брони")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##3", color2) then
                    local clr = join_argb(0, color2[0] * 255, color2[1] * 255, color2[2] * 255)
                    local r,g,b = color2[0] * 255, color2[1] * 255, color2[2] * 255
                    memory.setint32(0xBAB23C, ("0xFF%06X"):format(clr), true)
                    

                    cfg.config.ARMOUR = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.ARMOURR = r
                    cfg.colorimgui.ARMOURG = g
                    cfg.colorimgui.ARMOURB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет полоски кислорода")).x)/2)
                imgui.Text(u8"Цвет полоски кислорода")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##4", color3) then
                    local clr = join_argb(0, color3[0] * 255, color3[1] * 255, color3[2] * 255)
                    local r,g,b = color3[0] * 255, color3[1] * 255, color3[2] * 255
                    memory.setint32(0xBAB238, ("0xFF%06X"):format(clr), true)

                    cfg.config.OXYGEN = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.OXYGENR = r
                    cfg.colorimgui.OXYGENG = g
                    cfg.colorimgui.OXYGENB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет уровня розыска")).x)/2)
                imgui.Text(u8"Цвет уровня розыска")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##5", color4) then
                    local clr = join_argb(0, color4[0] * 255, color4[1] * 255, color4[2] * 255)
                    local r,g,b = color4[0] * 255, color4[1] * 255, color4[2] * 255
                    memory.setint32(0xBAB244, ("0xFF%06X"):format(clr), true)

                    cfg.config.WANTED = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.WANTEDR = r
                    cfg.colorimgui.WANTEDG = g
                    cfg.colorimgui.WANTEDB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет обводки радара")).x)/2)
                imgui.Text(u8"Цвет обводки радара")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##7", color6) then
                    local clr = join_argb(0, color6[0] * 255, color6[1] * 255, color6[2] * 255)
                    local r,g,b = color6[0] * 255, color6[1] * 255, color6[2] * 255
                    changeRadarColor(("0xFF%06X"):format(clr))

                    cfg.config.RADAR = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.RADARR = r
                    cfg.colorimgui.RADARG = g
                    cfg.colorimgui.RADARB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                if name_server:find('Arizona Role Play | (.+)') or name_server:find('Arizona RP | (.+)') then
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет лога Arizona RP")).x)/2)
                    imgui.Text(u8"Цвет лога Arizona RP")
                    imgui.PushItemWidth(880)
                    if imgui.ColorEdit3("##10", color9) then
                        local clr = join_argb(0, color9[2] * 255, color9[1] * 255, color9[0] * 255)
                        local r,g,b = color9[0] * 255, color9[1] * 255, color9[2] * 255
                        sampTextdrawSetLetterSizeAndColor(644, letSizeX, letSizeY, ("0xFF%06X"):format(clr))
                        sampTextdrawSetLetterSizeAndColor(645, letSizeXx, letSizeYy, ("0xFF%06X"):format(clr))

                        cfg.config.LOGOARIZONA = ("0xFF%06X"):format(clr)
                        cfg.colorimgui.LOGOARIZONAR = r
                        cfg.colorimgui.LOGOARIZONAG = g
                        cfg.colorimgui.LOGOARIZONAB = b
                        inicfg.save(cfg, "GameEditor.ini")
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет уровня сытости Arizona RP")).x)/2)
                    imgui.Text(u8"Цвет уровня сытости Arizona RP")
                    imgui.PushItemWidth(880)
                    if imgui.ColorEdit3("##12", color11) then
                        local clr = join_argb(0, color11[2] * 255, color11[1] * 255, color11[0] * 255)
                        local r,g,b = color11[0] * 255, color11[1] * 255, color11[2] * 255
                        sampTextdrawSetBoxColorAndSize(2061, box, ("0xFF%06X"):format(clr), hungerX, hungerY)
                        cfg.config.HUNGERARIZONA = ("0xFF%06X"):format(clr)
                        cfg.colorimgui.HUNGERARIZONAR = r
                        cfg.colorimgui.HUNGERARIZONAG = g
                        cfg.colorimgui.HUNGERARIZONAB = b
                        inicfg.save(cfg, "GameEditor.ini")
                    end
                end
            elseif navigation.current == 2 then
                imgui.SetCursorPosX(imgui.GetWindowWidth() / 5)
                for i, title in ipairs(hudnav.hudlist) do
                    if HeaderButton(hudnav.hudcurrent == i, title) then
                        hudnav.hudcurrent = i
                    end
                    if i ~= #hudnav.hudlist then
                        imgui.SameLine(nil, 30)
                    end
                end
                if hudnav.hudcurrent == 1 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Health1", HealthWSlider, 0.0, 300.0) then 
                        cfg.hudpos.HealthW = HealthWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Health2", HealthHSlider, 0.0, 300.0) then 
                        cfg.hudpos.HealthH = HealthHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Health3", HealthXSlider, 0.0, sw/3) then 
                        cfg.hudpos.HealthX = HealthXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Health4", HealthYSlider, 0.0, sh/2) then 
                        cfg.hudpos.HealthY = HealthYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 2 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Armor1", ArmorWSlider, 0.0, 300.0) then 
                        cfg.hudpos.ArmorW = ArmorWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Armor2", ArmorHSlider, 0.0, 300.0) then 
                        cfg.hudpos.ArmorH = ArmorHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Armor3", ArmorXSlider, 0.0, sw/3) then 
                        cfg.hudpos.ArmorX = ArmorXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Armor4", ArmorYSlider, 0.0, sh/2) then 
                        cfg.hudpos.ArmorY = ArmorYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 3 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Breath1", BreathWSlider, 0.0, 300.0) then 
                        cfg.hudpos.BreathW = BreathWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Breath2", BreathHSlider, 0.0, 300.0) then 
                        cfg.hudpos.BreathH = BreathHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Breath3", BreathXSlider, 0.0, sw/3) then 
                        cfg.hudpos.BreathX = BreathXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Breath4", BreathYSlider, 0.0, sh/2) then 
                        cfg.hudpos.BreathY = BreathYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 4 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Money1", MoneyWSlider, 0.0, 300.0) then 
                        cfg.hudpos.MoneyW = MoneyWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Money2", MoneyHSlider, 0.0, 300.0) then 
                        cfg.hudpos.MoneyH = MoneyHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Money3", MoneyXSlider, 0.0, sw/3) then 
                        cfg.hudpos.MoneyX = MoneyXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Money4", MoneyYSlider, 0.0, sh/2) then 
                        cfg.hudpos.MoneyY = MoneyYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 5 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponIcon3", WeaponIconXSlider, -30.0, sw/3) then 
                        cfg.hudpos.WeaponIconX = WeaponIconXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponIcon4", WeaponIconYSlider, 0.0, sh/2) then 
                        cfg.hudpos.WeaponIconY = WeaponIconYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 6 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponAmmo1", WeaponAmmoWSlider, 0.0, 300.0) then 
                        cfg.hudpos.WeaponAmmoW = WeaponAmmoWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponAmmo2", WeaponAmmoHSlider, 0.0, 300.0) then 
                        cfg.hudpos.WeaponAmmoH = WeaponAmmoHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponAmmo3", WeaponAmmoXSlider, 0, 1) then 
                        cfg.hudpos.WeaponAmmoX = WeaponAmmoXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##WeaponAmmo4", WeaponAmmoYSlider, 0, sh/2) then 
                        cfg.hudpos.WeaponAmmoY = WeaponAmmoYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 7 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Wanted1", WantedWSlider, 0.0, 300.0) then 
                        cfg.hudpos.WantedW = WantedWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Wanted2", WantedHSlider, 0.0, 300.0) then 
                        cfg.hudpos.WantedH = WantedHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Wanted3", WantedXSlider, 0.0, sw/3) then 
                        cfg.hudpos.WantedX = WantedXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Wanted4", WantedYSlider, 0.0, sh/2) then 
                        cfg.hudpos.WantedY = WantedYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                elseif hudnav.hudcurrent == 8 then
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Ширина")).x)/2)
                    imgui.Text(u8"Ширина")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Radar1", RadarWSlider, 0.0, 300.0) then 
                        cfg.hudpos.RadarW = RadarWSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Высота")).x)/2)
                    imgui.Text(u8"Высота")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Radar2", RadarHSlider, 0.0, 300.0) then 
                        cfg.hudpos.RadarH = RadarHSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты X")).x)/2)
                    imgui.Text(u8"Координаты X")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Radar3", RadarXSlider, 0.0, sw/3) then 
                        cfg.hudpos.RadarX = RadarXSlider[0] 
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                    imgui.Separator()
                    imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Координаты Y")).x)/2)
                    imgui.Text(u8"Координаты Y")
                    imgui.PushItemWidth(880)
                    if imgui.SliderFloat("##Radar4", RadarYSlider, 0.0, sh/2) then 
                        cfg.hudpos.RadarY = RadarYSlider[0]
                        inicfg.save(cfg, 'GameEditor.ini') 
                    end
                end
            elseif navigation.current == 3 then
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет маркеров")).x)/2)
                imgui.Text(u8"Цвет маркеров")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##8", color7) then
                    local clr = join_argb(0, color7[0] * 255, color7[1] * 255, color7[2] * 255)
                    local r,g,b = color7[0] * 255, color7[1] * 255, color7[2] * 255
                    Markercolor(("0xFF%06X"):format(clr))

                    cfg.config.MARKER = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.MARKERR = r
                    cfg.colorimgui.MARKERG = g
                    cfg.colorimgui.MARKERB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет света фар")).x)/2)
                imgui.Text(u8"Цвет света фар")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##9", color8) then
                    local clr = join_argb(0, color8[0] * 255, color8[1] * 255, color8[2] * 255)
                    local r,g,b = color8[0] * 255, color8[1] * 255, color8[2] * 255
                    editVehicleLightsColor(("0xFF%06X"):format(clr))

                    cfg.config.HEADLIGHT = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.HEADLIGHTR = r
                    cfg.colorimgui.HEADLIGHTG = g
                    cfg.colorimgui.HEADLIGHTB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет прицела")).x)/2)
                imgui.Text(u8"Цвет прицела")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##13", color10) then
                    local clr = join_argb(0, color10[0] * 255, color10[1] * 255, color10[2] * 255)
                    local r,g,b = color10[0] * 255, color10[1] * 255, color10[2] * 255
                    changeCrosshairColor(("0xFF%06X"):format(clr))

                    cfg.config.CROSSHAIR = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.CROSSHAIRR = r
                    cfg.colorimgui.CROSSHAIRG = g
                    cfg.colorimgui.CROSSHAIRB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет жизни других игроков")).x)/2)
                imgui.Text(u8"Цвет жизни других игроков")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##123", color5) then
                    local clr = join_argb(0, color5[2] * 255, color5[1] * 255, color5[0] * 255)
                    local r,g,b = color5[2] * 255, color5[1] * 255, color5[0] * 255
                    setHealthColor(("0xFF%06X"):format(clr), nil)

                    cfg.config.CHARHP = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.CHARHPR = r
                    cfg.colorimgui.CHARHPG = g
                    cfg.colorimgui.CHARHPB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет брони других игроков")).x)/2)
                imgui.Text(u8"Цвет брони других игроков")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##1235", color14) then
                    local clr = join_argb(0, color14[2] * 255, color14[1] * 255, color14[0] * 255)
                    local r,g,b = color14[2] * 255, color14[1] * 255, color14[0] * 255
                    setArmourColor(("0xFF%06X"):format(clr), nil)

                    cfg.config.CHARARM = ("0xFF%06X"):format(clr)
                    cfg.colorimgui.CHARARMR = r
                    cfg.colorimgui.CHARARMG = g
                    cfg.colorimgui.CHARARMB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Цвет триугольника над головой")).x)/2)
                imgui.Text(u8"Цвет триугольника над головой")
                imgui.PushItemWidth(880)
                if imgui.ColorEdit3("##70", color13) then
                    local clr = join_argb(0, color13[2] * 255, color13[1] * 255, color13[0] * 255)
                    local r,g,b = color13[0] * 255, color13[1] * 255, color13[2] * 255
                    set_triangle_color(("0x%06XFF"):format(clr)) 

                    cfg.config.TRIANGLECOLOR = ("0x%06XFF"):format(clr)
                    cfg.colorimgui.TRIANGLECOLORR = r
                    cfg.colorimgui.TRIANGLECOLORG = g
                    cfg.colorimgui.TRIANGLECOLORB = b
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.Separator()
                imgui.Checkbox(u8"Сделать обводку денег тоньше", moneyborder_check)
                if moneyborder_check[0] == true then
                    memory.setint8(0x58F58D, 1, true)
                    cfg.config.MONEYBORDER = 1
                    cfg.colorimgui.CHECKBOXBORDER = moneyborder_check[0]
                    inicfg.save(cfg, "GameEditor.ini")
                else
                    memory.setint8(0x58F58D, 2, true)
                    cfg.config.MONEYBORDER = 2
                    cfg.colorimgui.CHECKBOXBORDER = moneyborder_check[0]
                    inicfg.save(cfg, "GameEditor.ini")
                end
                imgui.SameLine(660)
                imgui.Checkbox(u8"Фикс белой точки на прицеле", checkfix)
                if checkfix[0] then
                    memory.fill(0x058E280, 0xEB, 1, true)
                    cfg.colorimgui.CHECKBOXFIX = checkfix[0]
                    inicfg.save(cfg, "GameEditor.ini")
                else
                    memory.fill(0x058E280, 0x7A, 1, true)
                    cfg.colorimgui.CHECKBOXFIX = checkfix[0]
                    inicfg.save(cfg, "GameEditor.ini")
                end
            elseif navigation.current == 4 then
                imgui.SetCursorPosX(5)
                if imgui.Button(u8'Сохранить пресет', imgui.ImVec2(880, 20)) then
                    window_save[0] = true
                end
                imgui.SetCursorPosX(5)
                if imgui.Button(u8'Удалить пресет', imgui.ImVec2(880, 20)) then
                    table.remove(list, preset_selected)
                    jsonSave(list)
                end
                    for i = 1, #list do
                        if imgui.Selectable(u8(tostring(list[i].name)), preset_selected == i) then
                            preset_selected = i
                            cfg.config.HEALTH = list[i].HEALTH
                            cfg.config.MONEY = list[i].MONEY
                            cfg.config.ARMOUR = list[i].ARMOUR
                            cfg.config.OXYGEN = list[i].OXYGEN
                            cfg.config.WANTED = list[i].WANTED
                            cfg.config.CHARHP = list[i].CHARHP
                            cfg.config.CHARARM = list[i].CHARARM
                            cfg.config.RADAR = list[i].RADAR
                            cfg.config.MARKER = list[i].MARKER
                            cfg.config.HEADLIGHT = list[i].HEADLIGHT
                            cfg.config.LOGOARIZONA = list[i].LOGOARIZONA
                            cfg.config.HUNGERARIZONA = list[i].HUNGERARIZONA
                            cfg.config.CROSSHAIR = list[i].CROSSHAIR
                            cfg.config.MONEYBORDER = list[i].MONEYBORDER
                            cfg.config.TRIANGLECOLOR = list[i].TRIANGLECOLOR
                            cfg.colorimgui.HEALTHR = list[i].HEALTHR
                            cfg.colorimgui.HEALTHG = list[i].HEALTHG
                            cfg.colorimgui.HEALTHB = list[i].HEALTHB
                            cfg.colorimgui.MONEYR = list[i].MONEYR
                            cfg.colorimgui.MONEYG = list[i].MONEYG
                            cfg.colorimgui.MONEYB = list[i].MONEYB
                            cfg.colorimgui.ARMOURR = list[i].ARMOURR
                            cfg.colorimgui.ARMOURG = list[i].ARMOURG
                            cfg.colorimgui.ARMOURB = list[i].ARMOURB
                            cfg.colorimgui.OXYGENR = list[i].OXYGENR
                            cfg.colorimgui.OXYGENG = list[i].OXYGENG
                            cfg.colorimgui.OXYGENB = list[i].OXYGENB
                            cfg.colorimgui.WANTEDR = list[i].WANTEDR
                            cfg.colorimgui.WANTEDG = list[i].WANTEDG
                            cfg.colorimgui.WANTEDB = list[i].WANTEDB
                            cfg.colorimgui.CHARHPR = list[i].CHARHPR
                            cfg.colorimgui.CHARHPG = list[i].CHARHPG
                            cfg.colorimgui.CHARHPB = list[i].CHARHPB
                            cfg.colorimgui.CHARARMR = list[i].CHARARMR
                            cfg.colorimgui.CHARARMG = list[i].CHARARMG
                            cfg.colorimgui.CHARARMB = list[i].CHARARMB
                            cfg.colorimgui.RADARR = list[i].RADARR
                            cfg.colorimgui.RADARG = list[i].RADARG
                            cfg.colorimgui.RADARB = list[i].RADARB
                            cfg.colorimgui.MARKERR = list[i].MARKERR
                            cfg.colorimgui.MARKERG = list[i].MARKERG
                            cfg.colorimgui.MARKERB = list[i].MARKERB
                            cfg.colorimgui.HEADLIGHTR = list[i].HEADLIGHTR
                            cfg.colorimgui.HEADLIGHTG = list[i].HEADLIGHTG
                            cfg.colorimgui.HEADLIGHTB = list[i].HEADLIGHTB
                            cfg.colorimgui.LOGOARIZONAR = list[i].LOGOARIZONAR
                            cfg.colorimgui.LOGOARIZONAG = list[i].LOGOARIZONAG
                            cfg.colorimgui.LOGOARIZONAB = list[i].LOGOARIZONAB
                            cfg.colorimgui.HUNGERARIZONAR = list[i].HUNGERARIZONAR
                            cfg.colorimgui.HUNGERARIZONAG = list[i].HUNGERARIZONAG
                            cfg.colorimgui.HUNGERARIZONAB = list[i].HUNGERARIZONAB
                            cfg.colorimgui.CROSSHAIRR = list[i].CROSSHAIRR
                            cfg.colorimgui.CROSSHAIRG = list[i].CROSSHAIRG
                            cfg.colorimgui.CROSSHAIRB = list[i].CROSSHAIRB
                            cfg.colorimgui.CHECKBOXBORDER = list[i].CHECKBOXBORDER
                            cfg.colorimgui.CHECKBOXFIX = list[i].CHECKBOXFIX
                            cfg.colorimgui.TRIANGLECOLORR = list[i].TRIANGLECOLORR
                            cfg.colorimgui.TRIANGLECOLORG = list[i].TRIANGLECOLORG
                            cfg.colorimgui.TRIANGLECOLORB = list[i].TRIANGLECOLORB
                            cfg.hudpos.HealthX = list[i].HealthX
                            cfg.hudpos.HealthY = list[i].HealthY
                            cfg.hudpos.HealthW = list[i].HealthW
                            cfg.hudpos.HealthH = list[i].HealthH
                            cfg.hudpos.ArmorX = list[i].ArmorX
                            cfg.hudpos.ArmorY = list[i].ArmorY
                            cfg.hudpos.ArmorW = list[i].ArmorW
                            cfg.hudpos.ArmorH = list[i].ArmorH
                            cfg.hudpos.BreathX = list[i].BreathX
                            cfg.hudpos.BreathY = list[i].BreathY
                            cfg.hudpos.BreathW = list[i].BreathW
                            cfg.hudpos.BreathH = list[i].BreathH
                            cfg.hudpos.MoneyX = list[i].MoneyX
                            cfg.hudpos.MoneyY = list[i].MoneyY
                            cfg.hudpos.MoneyW = list[i].MoneyW
                            cfg.hudpos.MoneyH = list[i].MoneyH
                            cfg.hudpos.WeaponIconX = list[i].WeaponIconX
                            cfg.hudpos.WeaponIconY = list[i].WeaponIconY
                            cfg.hudpos.WeaponAmmoX = list[i].WeaponAmmoX
                            cfg.hudpos.WeaponAmmoY = list[i].WeaponAmmoY
                            cfg.hudpos.WeaponAmmoW = list[i].WeaponAmmoW
                            cfg.hudpos.WeaponAmmoH = list[i].WeaponAmmoH
                            cfg.hudpos.WantedX = list[i].WantedX
                            cfg.hudpos.WantedY = list[i].WantedY
                            cfg.hudpos.WantedW = list[i].WantedW
                            cfg.hudpos.WantedH = list[i].WantedH
                            cfg.hudpos.RadarX = list[i].RadarX
                            cfg.hudpos.RadarY = list[i].RadarY
                            cfg.hudpos.RadarW = list[i].RadarW
                            cfg.hudpos.RadarH = list[i].RadarH
                            inicfg.save(cfg, "GameEditor.ini")
                            memory.setint32(0xBAB230, cfg.config.MONEY, true)
                            memory.setint32(0xBAB22C, cfg.config.HEALTH, true)
                            memory.setint32(0xBAB23C, cfg.config.ARMOUR, true)
                            memory.setint32(0xBAB238, cfg.config.OXYGEN, true)
                            memory.setint32(0xBAB244, cfg.config.WANTED, true)
                            memory.setint8(0x58F58D, cfg.config.MONEYBORDER, true)
                            changeRadarColor(cfg.config.RADAR)
                            Markercolor(cfg.config.MARKER)
                            editVehicleLightsColor(cfg.config.HEADLIGHT)        
                            changeCrosshairColor(cfg.config.CROSSHAIR)
                            set_triangle_color(cfg.config.TRIANGLECOLOR)
                            if cfg.config.CHECKBOXFIX == true then
                                memory.fill(0x058E280, 0xEB, 1, true)
                            else
                                memory.fill(0x058E280, 0x7A, 1, true)
                            end
                            break
                        end
                    end
            end

        imgui.EndChild()
        imgui.SetCursorPos(imgui.ImVec2(imgui.GetWindowSize().x - 30, 15 + 10))
        if imgui.CloseButton(10, 3, ColorFloatToVec(COLORS.elements), ColorFloatToVec(COLORS.elements), ColorFloatToVec(COLORS.elements), ColorFloatToVec(COLORS.elements)) then
            menu.switch()
        end
        imgui.End()
        imgui.PopStyleVar()
    end
) 

local secondFrame = imgui.OnFrame(
    function() return window_save[0] end, 
    function(player) 
        imgui.SetNextWindowPos(imgui.ImVec2(sw / 2, sh / 2), imgui.Cond.FirstUseEver, imgui.ImVec2(0.5, 0.5))
        imgui.SetNextWindowSize(imgui.ImVec2(210, 150))
        imgui.Begin("##Preset_Saved", window_save, imgui.WindowFlags.NoResize + imgui.WindowFlags.NoTitleBar)
            imgui.SetCursorPosX((imgui.GetWindowWidth() - imgui.CalcTextSize(u8("Название пресета")).x)/2)
            imgui.Text(u8'Название пресета')
            imgui.PushItemWidth(190)
            imgui.InputText('##presetname', preset_add_name, 128)
            imgui.PopItemWidth()

            if imgui.Button(u8'Сохранить пресет', imgui.ImVec2(190, 20)) then
                table.insert(list, {name = u8:decode(ffi.string(preset_add_name)), HEALTH = cfg.config.HEALTH, MONEY = cfg.config.MONEY, ARMOUR = cfg.config.ARMOUR, OXYGEN = cfg.config.OXYGEN, WANTED = cfg.config.WANTED, CHARHP = cfg.config.CHARHP, CHARARM = cfg.config.CHARARM, RADAR = cfg.config.RADAR, MARKER = cfg.config.MARKER, HEADLIGHT = cfg.config.HEADLIGHT, LOGOARIZONA = cfg.config.LOGOARIZONA, HUNGERARIZONA = cfg.config.HUNGERARIZONA, CROSSHAIR = cfg.config.CROSSHAIR, MONEYBORDER = cfg.config.MONEYBORDER, TRIANGLECOLOR = cfg.config.TRIANGLECOLOR, HEALTHR = cfg.colorimgui.HEALTHR, HEALTHG = cfg.colorimgui.HEALTHG, HEALTHB = cfg.colorimgui.HEALTHB, MONEYR = cfg.colorimgui.MONEYR, MONEYG = cfg.colorimgui.MONEYG, MONEYB = cfg.colorimgui.MONEYB, ARMOURR = cfg.colorimgui.ARMOURR, ARMOURG = cfg.colorimgui.ARMOURG, ARMOURB = cfg.colorimgui.ARMOURB, OXYGENR = cfg.colorimgui.OXYGENR, OXYGENG = cfg.colorimgui.OXYGENG, OXYGENB = cfg.colorimgui.OXYGENB, WANTEDR = cfg.colorimgui.WANTEDR, WANTEDG = cfg.colorimgui.WANTEDG, WANTEDB = cfg.colorimgui.WANTEDB, CHARHPR = cfg.colorimgui.CHARHPR, CHARHPG = cfg.colorimgui.CHARHPG, CHARHPB = cfg.colorimgui.CHARHPB, CHARARMR = cfg.colorimgui.CHARARMR, CHARARMG = cfg.colorimgui.CHARARMG, CHARARMB = cfg.colorimgui.CHARARMB, RADARR = cfg.colorimgui.RADARR, RADARG = cfg.colorimgui.RADARG, RADARB = cfg.colorimgui.RADARB, MARKERR = cfg.colorimgui.MARKERR, MARKERG = cfg.colorimgui.MARKERG, MARKERB = cfg.colorimgui.MARKERB, HEADLIGHTR = cfg.colorimgui.HEADLIGHTR, HEADLIGHTG = cfg.colorimgui.HEADLIGHTG, HEADLIGHTB = cfg.colorimgui.HEADLIGHTB, LOGOARIZONAR = cfg.colorimgui.LOGOARIZONAR, LOGOARIZONAG = cfg.colorimgui.LOGOARIZONAG, LOGOARIZONAB = cfg.colorimgui.LOGOARIZONAB, HUNGERARIZONAR = cfg.colorimgui.HUNGERARIZONAR, HUNGERARIZONAG = cfg.colorimgui.HUNGERARIZONAG, HUNGERARIZONAB = cfg.colorimgui.HUNGERARIZONAB, CROSSHAIRR = cfg.colorimgui.CROSSHAIRR, CROSSHAIRG = cfg.colorimgui.CROSSHAIRG, CROSSHAIRB = cfg.colorimgui.CROSSHAIRB, CHECKBOXBORDER = cfg.colorimgui.CHECKBOXBORDER, CHECKBOXFIX =cfg.colorimgui.CHECKBOXFIX, TRIANGLECOLORR = cfg.colorimgui.TRIANGLECOLORR, TRIANGLECOLORG = cfg.colorimgui.TRIANGLECOLORG, TRIANGLECOLORB = cfg.colorimgui.TRIANGLECOLORB, HealthX = cfg.hudpos.HealthX, HealthY = cfg.hudpos.HealthY, HealthW = cfg.hudpos.HealthW, HealthH = cfg.hudpos.HealthH, ArmorX = cfg.hudpos.ArmorX, ArmorY = cfg.hudpos.ArmorY, ArmorW = cfg.hudpos.ArmorW, ArmorH = cfg.hudpos.ArmorH, BreathX = cfg.hudpos.BreathX, BreathY = cfg.hudpos.BreathY, BreathW = cfg.hudpos.BreathW, BreathH = cfg.hudpos.BreathH, MoneyX = cfg.hudpos.MoneyX, MoneyY = cfg.hudpos.MoneyY, MoneyW = cfg.hudpos.MoneyW, MoneyH = cfg.hudpos.MoneyH, WeaponIconX = cfg.hudpos.WeaponIconX, WeaponIconY = cfg.hudpos.WeaponIconY, WeaponAmmoX = cfg.hudpos.WeaponAmmoX, WeaponAmmoY = cfg.hudpos.WeaponAmmoY, WeaponAmmoW = cfg.hudpos.WeaponAmmoW, WeaponAmmoH = cfg.hudpos.WeaponAmmoH, WantedX = cfg.hudpos.WantedX, WantedY = cfg.hudpos.WantedY, WantedW = cfg.hudpos.WantedW, WantedH = cfg.hudpos.WantedH, RadarX = cfg.hudpos.RadarX, RadarY = cfg.hudpos.RadarY, RadarW = cfg.hudpos.RadarW, RadarH = cfg.hudpos.RadarH,})
                preset_add_name = imgui.new.char[128](u8'Пресет #'..tostring(#list + 1))
                jsonSave(list)
                imgui.CloseCurrentPopup()
                window_save[0] = not window_save[0]
            end
            if imgui.Button(u8'Стандартный пресет', imgui.ImVec2(190, 20)) then
                table.insert(list, {name = u8:decode(ffi.string(preset_add_name)), HEALTH = 0xFF1712B5, MONEY = 0xFF286833, ARMOUR = 0xFFE2E2E2, OXYGEN = 0xFFF7DAC0, WANTED = 0xFF2092C5, CHARHP = 0xFF1712B5, CHARARM = 0xFFE2E2E2, RADAR = 0xFF000000, MARKER = 0xFFFF0000, HEADLIGHT = 0xFF404040, LOGOARIZONA = 0xFFFF5050, HUNGERARIZONA = 0xFF608552, CROSSHAIR = 0xFFFFFFFF, MONEYBORDER = 2, TRIANGLECOLOR = 0x00FFFFFF, HEALTHR = 170, HEALTHG = 29, HEALTHB = 36, MONEYR = 52, MONEYG = 101, MONEYB = 36, ARMOURR = 225, ARMOURG = 226, ARMOURB = 226, OXYGENR = 172, OXYGENG = 203, OXYGENB = 238, WANTEDR = 197, WANTEDG = 146, WANTEDB = 32, CHARHPR = 170, CHARHPG = 29, CHARHPB = 36, CHARARMR = 170, CHARARMG = 29, CHARARMB = 36, RADARR = 0, RADARG = 0, RADARB = 0, MARKERR = 255, MARKERG = 0, MARKERB = 0, HEADLIGHTR = 255, HEADLIGHTG = 255, HEADLIGHTB = 255, LOGOARIZONAR = 188, LOGOARIZONAG = 52, LOGOARIZONAB = 54, HUNGERARIZONAR = 96, HUNGERARIZONAG = 133, HUNGERARIZONAB = 82, CROSSHAIRR = 255, CROSSHAIRG = 255, CROSSHAIRB = 255, CHECKBOXBORDER = false, CHECKBOXFIX = false, TRIANGLECOLORR = 255, TRIANGLECOLORG = 255, TRIANGLECOLORB = 0, HealthX = 141.0, HealthY = 77.0, HealthW = 109.0, HealthH = 9.0, ArmorX = 94.0, ArmorY = 48.0, ArmorW = 62.0, ArmorH = 9.0, BreathX = 94.0, BreathY = 62.0, BreathW = 62.0, BreathH = 9.0, MoneyX = 32.0, MoneyY = 89.0, MoneyW = 0.55, MoneyH = 1.1, WeaponIconX = 32.0, WeaponIconY = 20.0, WeaponAmmoX = 0.17343046, WeaponAmmoY = 20.0, WeaponAmmoW = 0.3, WeaponAmmoH = 0.7, WantedX = 29.0, WantedY = 20.0, WantedW = 0.605, WantedH = 1.21, RadarX = 40.0, RadarY = 104.0, RadarW = 94.0, RadarH = 74.0,})
                preset_add_name = imgui.new.char[128](u8'Пресет #'..tostring(#list + 1))
                jsonSave(list)
                imgui.CloseCurrentPopup()
                window_save[0] = not window_save[0]
            end
            if imgui.Button(u8'Закрыть', imgui.ImVec2(190, 20)) then
                preset_add_name = imgui.new.char[128](u8'Пресет #'..tostring(#list + 1))
                jsonSave(list)
                window_save[0] = not window_save[0]
            end
        imgui.End()
    end
)
